LOG FILE
------------------------------------------------------------------------------------------------------------

Watching for file changes with StatReloader
Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
Changing event name from before-call.apigateway to before-call.api-gateway
Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
Setting config variable for region to 'us-west-2'
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\endpoints.json
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\sdk-default-configuration.json
Event choose-service-name: calling handler <function handle_service_name_alias at 0x00000273ABAB8720>
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\service-2.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\endpoint-rule-set-1.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\partitions.json
Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x00000273ABA0DC60>
Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x00000273AB74E660>
Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x00000273ABA0D9E0>
Looking for endpoint for s3 via: environment_service
Looking for endpoint for s3 via: environment_global
Looking for endpoint for s3 via: config_service
Looking for endpoint for s3 via: config_global
No configured endpoint found.
Setting s3 timeout as (60, 60)
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\_retry.json
Registering retry handlers for service: s3
Registering S3 region redirector handler
Registering S3Express Identity Resolver
Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
Changing event name from before-call.apigateway to before-call.api-gateway
Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
Setting config variable for region to 'us-west-2'
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\endpoints.json
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\sdk-default-configuration.json
Event choose-service-name: calling handler <function handle_service_name_alias at 0x00000273ABAB8720>
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\service-2.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\endpoint-rule-set-1.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\partitions.json
Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x00000273ABA0DC60>
Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x00000273C4A5F380>
Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x00000273ABA0D9E0>
Looking for endpoint for s3 via: environment_service
Looking for endpoint for s3 via: environment_global
Looking for endpoint for s3 via: config_service
Looking for endpoint for s3 via: config_global
No configured endpoint found.
Setting s3 timeout as (60, 60)
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\_retry.json
Registering retry handlers for service: s3
Registering S3 region redirector handler
Registering S3Express Identity Resolver
load_ssl_context verify=True cert=None trust_env=True http2=False
load_verify_locations cafile='C:\\Users\\damod\\Envs\\gen_ai\\Lib\\site-packages\\certifi\\cacert.pem'
load_ssl_context verify=True cert=None trust_env=True http2=False
load_verify_locations cafile='C:\\Users\\damod\\Envs\\gen_ai\\Lib\\site-packages\\certifi\\cacert.pem'
load_ssl_context verify=True cert=None trust_env=True http2=False
load_verify_locations cafile='C:\\Users\\damod\\Envs\\gen_ai\\Lib\\site-packages\\certifi\\cacert.pem'
Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
Changing event name from before-call.apigateway to before-call.api-gateway
Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
Setting config variable for region to 'us-west-2'
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\endpoints.json
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\sdk-default-configuration.json
Event choose-service-name: calling handler <function handle_service_name_alias at 0x00000273ABAB8720>
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\service-2.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\endpoint-rule-set-1.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\partitions.json
Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x00000273ABA0DC60>
Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x00000273ED8F8860>
Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x00000273ABA0D9E0>
Looking for endpoint for s3 via: environment_service
Looking for endpoint for s3 via: environment_global
Looking for endpoint for s3 via: config_service
Looking for endpoint for s3 via: config_global
No configured endpoint found.
Setting s3 timeout as (60, 60)
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\_retry.json
Registering retry handlers for service: s3
Registering S3 region redirector handler
Registering S3Express Identity Resolver
INFO:Generated test cases successfully. ::: Caller Details:{'filename': 'C:\\Users\\damod\\Desktop\\crys_cloud\\gen_ai\\bardumain\\GEN_AI_BACKEND\\product\\views.py', 'line_number': 514, 'function_name': 'post', 'class_name': 'GenerateTestCases'}
Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000273EFED3F60>, 'json_data': {'input': [[3923, 527, 76980]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}, 'headers': {'api-key': '5bd3858623ee46b0bdae2a2019ea698f'}}
connect_tcp.started host='openaiavionx.openai.azure.com' port=443 local_address=None timeout=None socket_options=None
connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000273F05816D0>
start_tls.started ssl_context=<ssl.SSLContext object at 0x00000273E1C944D0> server_hostname='openaiavionx.openai.azure.com' timeout=None
start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000273F0580D50>
send_request_headers.started request=<Request [b'POST']>
send_request_headers.complete
send_request_body.started request=<Request [b'POST']>
send_request_body.complete
receive_response_headers.started request=<Request [b'POST']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'8414'), (b'Content-Type', b'application/json'), (b'access-control-allow-origin', b'*'), (b'apim-request-id', b'6ff8cf3d-5222-48db-b932-6c4dd669d43a'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'x-ms-region', b'West US'), (b'x-request-id', b'b35d2815-7f57-4005-9ab2-30217f48190c'), (b'x-ms-client-request-id', b'6ff8cf3d-5222-48db-b932-6c4dd669d43a'), (b'x-ratelimit-remaining-requests', b'119'), (b'azureml-model-session', b'd006-20240609214229'), (b'x-ratelimit-remaining-tokens', b'119997'), (b'Date', b'Thu, 25 Jul 2024 07:40:35 GMT')])
HTTP Request: POST https://openaiavionx.openai.azure.com//openai/deployments/OpenAIEmbeddings/embeddings?api-version=2023-07-01-preview "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'POST']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: POST https://openaiavionx.openai.azure.com//openai/deployments/OpenAIEmbeddings/embeddings?api-version=2023-07-01-preview "200 OK"
> Top 3 nodes:
> [Node b6619250-ddbb-47af-8e38-1b9ed86455dc] [Similarity score:             0.696747] 1
Routing
Protocols:
-
BGP
(Border
Gateway
Protocol)
-
OSPF
(Open
Shortest
Path
First)
-
IS-IS
(I...
> [Node dac3b5d5-967f-443d-b8a7-474517afb3e0] [Similarity score:             0.691003] 2.2
Interface
Slots:
-
Up
to
8
line-card
slots
-
2
Routing
Engine
slots
-
2
Switch
Fabric
slots
-...
> [Node 8b8edf92-c3a2-43a1-b85d-d378f70a1513] [Similarity score:             0.685994] ####
1.3.2
Security
Protocols:
-
IPsec
(Internet
Protocol
Security)
-
SSL/TLS
(Secure
Sockets
Lay...
Request options: {'method': 'get', 'url': '/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000273ED20CA10>
start_tls.started ssl_context=<ssl.SSLContext object at 0x00000273C5C3F890> server_hostname='api.openai.com' timeout=5.0
start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000273ED1C8C50>
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_f7e052dc29463fe06c3eda67f0cf6aa8'), (b'openai-processing-ms', b'159'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=VO9yAix69W04_KOYvJ1kd2eHSIwyupPXYMD6O.FAYEQ-1721893238-1.0.1.1-_DtR_5rRR2y_WksJr1F_GNu9WPi0JMIZELJApNmuB9GJ06oLYicX1Fd5vusla12uz9sulfygYjowBIhwt9oYNw; path=/; expires=Thu, 25-Jul-24 08:10:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=YrINaEq6GWa05U6N5WFAVJ4tixdCkxT0tsiIozFC41E-1721893238873-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80c46cde84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_c40065f944a45fd14efa7d4ba7423154'), (b'openai-processing-ms', b'145'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80c72e8284f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV "200 OK"
Request options: {'method': 'post', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages', 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'files': None, 'json_data': {'content': 'You are a <Juniper> network test engineer. Your task is to write a python test script for <Bootup Configuration Retrieval Test> under category <VLAN> for <router> <MX240> which is used for <Unit Test>.\n            . Each test case and test script should be encapsulated within its own separate JSON object, and it should be an object under the "testname" key. All these JSON objects should be assembled within a Python list, resulting in a list like this: [{ "testname": "", "testcase": {}, "testscript": {} }]. Each test case should include a testname, objective, steps (list of expected results), and relevant test data. Make sure each test script JSON object includes the following fields: \'testname\', \'objective\', \'file_name\', \'init_scripts\'. The \'init_scripts\' field should contain pip install commands for all required packages, \'script\' (given in triple quotes), \'run_command\' (a command to execute the python file), and \'expected_result\'. The Python list with the JSON objects should not include any unrelated context or information. Find the starting delimiter as ###STARTLIST### and the ending delimiter as ###ENDLIST### and the list should be compatible to python list i should not get any error while converting into python list object.\n        ', 'role': 'user'}}
send_request_headers.started request=<Request [b'POST']>
send_request_headers.complete
send_request_body.started request=<Request [b'POST']>
send_request_body.complete
receive_response_headers.started request=<Request [b'POST']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_692a301d3fde7ca0141f0b8f60009aa7'), (b'openai-processing-ms', b'156'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80c9c88084f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: POST https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'POST']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: POST https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages "200 OK"
Request options: {'method': 'post', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs', 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'files': None, 'json_data': {'assistant_id': 'asst_R7AJfXPPJnCjl0y0Xgo8cCYz'}}
send_request_headers.started request=<Request [b'POST']>
send_request_headers.complete
send_request_body.started request=<Request [b'POST']>
send_request_body.complete
receive_response_headers.started request=<Request [b'POST']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_1f2341455a24a30e515c63ccb83dc88b'), (b'openai-processing-ms', b'485'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80ccaa1b84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: POST https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'POST']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: POST https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_b612ce8b86262a6320b11b8834f332da'), (b'openai-processing-ms', b'190'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80d48f0484f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_773beccd936876a474d795f9ff2502a7'), (b'openai-processing-ms', b'41'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80da7b5084f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_07569b2c00c5df1a9c00861d661400f4'), (b'openai-processing-ms', b'38'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80df8ed484f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_f48f64e963bba3a1fda0cab850581d9f'), (b'openai-processing-ms', b'54'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80e49a1284f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_8d0ef8e5b108fcd7205fd4263532fb6d'), (b'openai-processing-ms', b'63'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80e9bd8484f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_c258a77df12fe5d8c4c5132a3ee8b164'), (b'openai-processing-ms', b'52'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80eef8d784f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_6a4315a8d5bbf8b88628562c98759a57'), (b'openai-processing-ms', b'68'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80f41c2984f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_bad85b0eba39bf3bfedb8adf457abde9'), (b'openai-processing-ms', b'49'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80f96f9e84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_666ae9b4d7a71acadc7639c5c5b9f1d4'), (b'openai-processing-ms', b'51'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a80fe8af784f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_70567bbf9a7d86c0c904dfe44c68d24b'), (b'openai-processing-ms', b'50'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8103ae2b84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_01c7eb544d3f8cdc28afac39e9ef8638'), (b'openai-processing-ms', b'50'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8108c94f84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_2a1f1efcfcf662342689fd48d7695082'), (b'openai-processing-ms', b'118'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a810decec84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_18dc4905b39f606e494e068e0fef6380'), (b'openai-processing-ms', b'58'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8113789284f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_40a6e30ff8369783e74cee6f6e6c27f3'), (b'openai-processing-ms', b'48'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8118aba984f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_a1947039e7a68c21489d91c133c12c91'), (b'openai-processing-ms', b'48'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a811dcee384f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_46c9e6fe7dd435f588073db9bcaea7ee'), (b'openai-processing-ms', b'52'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8122e9cf84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_e5760577f6081e437bfaee1f4638e6ad'), (b'openai-processing-ms', b'51'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a81280cdb84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_7fa2177b642fa29c8381a6fe9d22db0a'), (b'openai-processing-ms', b'52'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a812d290084f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_27d53b3e0b09f18451f88967123c36eb'), (b'openai-processing-ms', b'42'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a81324c0884f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_a232e90ed42731744fdfff85fe84d1b6'), (b'openai-processing-ms', b'40'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a81375f3c84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_6b138bc5d1e66e85b498bef750d60859'), (b'openai-processing-ms', b'41'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a813c7a3e84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_8da65ca856c1b3a5efb3e6e1a9c2267e'), (b'openai-processing-ms', b'43'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a81418d4884f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:40:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_9945553936ed9fac023b0fd657e7851c'), (b'openai-processing-ms', b'40'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8146afc684f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_d3a7e93dcbf4c9f2677ce7ca20024680'), (b'openai-processing-ms', b'40'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a814bba9d84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_6efaa289c3b7b680ce2270026b49e553'), (b'openai-processing-ms', b'77'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8150edbc84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_eb2cef3e76a848e8ed6f172623180bbf'), (b'openai-processing-ms', b'71'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8156392284f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_bc61977802c278fbbc41a2da4f9a4793'), (b'openai-processing-ms', b'44'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a815e6eaa84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_bedc81449cbef2f009d72ebb9b7c4b89'), (b'openai-processing-ms', b'54'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a816389b384f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_6628395c38beb48e335db5f43f5b0b3a'), (b'openai-processing-ms', b'40'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8168accf84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_f9e6d065b0205f5a779159519b8cb8a6'), (b'openai-processing-ms', b'63'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a816dbff384f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_60514f3b6293fc50451d99231370b510'), (b'openai-processing-ms', b'41'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8172eacb84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_xOLtr1aVr0FqB2y5hSNXkrjx "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages', 'params': {'order': 'asc'}, 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'json_data': None, 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x00000273F10E1BC0>}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_3cdf836792ca637649d2e6b5400c76ae'), (b'openai-processing-ms', b'115'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8174fc7b84f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages', 'params': {'order': 'asc', 'after': 'msg_d7C7DP0Njqp08STXEZUy08FB'}, 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'json_data': None, 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x00000273C5C58FE0>}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_3d238d345ba92c128440f102fb9a6f6d'), (b'openai-processing-ms', b'44'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a817a0fc884f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc&after=msg_d7C7DP0Njqp08STXEZUy08FB "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc&after=msg_d7C7DP0Njqp08STXEZUy08FB "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages', 'params': {'order': 'asc', 'after': 'msg_Ioj3pUE1DmNO0u4Q50gdCEzq'}, 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'json_data': None, 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x00000273F10E1260>}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:41:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_4dbc95109bd00f6779a5bb3ad89e8fa1'), (b'openai-processing-ms', b'34'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a817d9a4584f2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc&after=msg_Ioj3pUE1DmNO0u4Q50gdCEzq "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc&after=msg_Ioj3pUE1DmNO0u4Q50gdCEzq "200 OK"
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x00000273ABABA160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x00000273ABABA0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x00000273ABADC220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x00000273ABAB9EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x00000273ABADC400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'r0_protocols_protocols.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x00000273ABABA480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x00000273ABAB87C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x00000273ABABB9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/r0_protocols_protocols.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/r0_protocols_protocols.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/r0_protocols_protocols.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x00000273AC97C290>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'r0_protocols_protocols.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000273AC97C250>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x00000273AC44AD10>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x00000273ABAB9DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x00000273ABADC360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/r0_protocols_protocols.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T074112Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T074112Z
20240725/us-west-2/s3/aws4_request
91bd7794f96d94baec0866257de6dac3c78a64eb1e3b6408232e11eb4da9964c
Signature:
f95492fd5ab9b5445bbfff630804ae3e82b77dbe1c5b61041c01d52776096022
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x00000273ABADC180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/r0_protocols_protocols.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T074112Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=f95492fd5ab9b5445bbfff630804ae3e82b77dbe1c5b61041c01d52776096022', 'amz-sdk-invocation-id': b'b690de61-33e8-479e-8651-2255a952ac71', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': 'G33cyGZtGmxMcioF2Qbt2zaJ2TSRAu5okUvBeWz2yErhLRX2ZPOK+6+jNf5j6C6FxT3PvtMgmrH8Yd9M25kUyA==', 'x-amz-request-id': 'FSATGVB17417P6E3', 'Date': 'Thu, 25 Jul 2024 07:41:14 GMT', 'Last-Modified': 'Wed, 26 Jun 2024 16:34:33 GMT', 'ETag': '"46c192c1925260a2fc22a998765acd66"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'JSU6StYB61c3AEI9Cb3yv4ngcTZ7WK_m', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '4795'}
Response body:
<botocore.response.StreamingBody object at 0x00000273F0B29870>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x00000273AC98BB10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x00000273ABABA160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x00000273ABABA0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x00000273ABADC220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x00000273ABAB9EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x00000273ABADC400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'r4_interfaces_interfaces.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x00000273ABABA480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x00000273ABAB87C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x00000273ABABB9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/r4_interfaces_interfaces.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/r4_interfaces_interfaces.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/r4_interfaces_interfaces.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x00000273AC97C290>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'r4_interfaces_interfaces.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000273AC97C250>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x00000273AC44AD10>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x00000273ABAB9DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x00000273ABADC360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/r4_interfaces_interfaces.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T074113Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T074113Z
20240725/us-west-2/s3/aws4_request
6c3f6a6880787439ea1f27a14476b78e159089f8e4d58c8a03a0d22dc73f4fcb
Signature:
d49227e045f1a3e1cb5296222e38e11f1951669ab78659658a2b0679bb9ccc31
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x00000273ABADC180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/r4_interfaces_interfaces.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T074113Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=d49227e045f1a3e1cb5296222e38e11f1951669ab78659658a2b0679bb9ccc31', 'amz-sdk-invocation-id': b'd2cfc605-6c43-4b4e-90e0-fe524ba59565', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': '26w/jX+RqvySK0fdXD23823mcOfD3il7q1Jg95A4Fk8Gcho0iLAV0s61iP+3Wf9C3XlJO0OI0FI0jprk2QztQg==', 'x-amz-request-id': 'FSAR76TGV0WQFM03', 'Date': 'Thu, 25 Jul 2024 07:41:14 GMT', 'Last-Modified': 'Tue, 02 Jul 2024 21:17:06 GMT', 'ETag': '"66fab8e8ef76e935b0947b61ae286441"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'pBQCpOQDj1ye5XHKTUbWYYxAMcHN9Sun', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '3141'}
Response body:
<botocore.response.StreamingBody object at 0x00000273F0B28490>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x00000273AC98BB10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x00000273ABABA160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x00000273ABABA0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x00000273ABADC220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x00000273ABAB9EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x00000273ABADC400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'CSVFiles/combined_interfaces_interfaces.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x00000273ABABA480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x00000273ABAB87C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x00000273ABABB9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/CSVFiles/combined_interfaces_interfaces.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/CSVFiles/combined_interfaces_interfaces.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/CSVFiles/combined_interfaces_interfaces.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x00000273AC97C290>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'CSVFiles/combined_interfaces_interfaces.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000273AC97C250>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x00000273AC44AD10>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x00000273ABAB9DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x00000273ABADC360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/CSVFiles/combined_interfaces_interfaces.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T074114Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T074114Z
20240725/us-west-2/s3/aws4_request
c17136455d7004a03a94b93229a8e4b74e2e272abd730db3d4de14c58a9df52a
Signature:
87d271389ccbe6a0f38451e2ddc95428dc1d7f2abe35d80351dfce02111390a3
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x00000273ABADC180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/CSVFiles/combined_interfaces_interfaces.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T074114Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=87d271389ccbe6a0f38451e2ddc95428dc1d7f2abe35d80351dfce02111390a3', 'amz-sdk-invocation-id': b'5a93282c-8438-4119-bea8-4a688ed41fc3', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': 'Zryw6TN2RQlhyPxFlOiydo0pt2Pj+qN1kmQpj1QOYgC2OvbXEy/y/nG9x2xLosCMp64PCvlVeIe81qErjfwOcA==', 'x-amz-request-id': '7APARW942844JTGA', 'Date': 'Thu, 25 Jul 2024 07:41:15 GMT', 'Last-Modified': 'Mon, 22 Jul 2024 18:05:38 GMT', 'ETag': '"00297d4f349b944cbcfb222426b74f81"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'OVqHr8lqAjKQCRTkYLOdo3SUyNpN_dCv', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '1880632'}
Response body:
<botocore.response.StreamingBody object at 0x00000273F0B2BCA0>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x00000273AC98BB10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.PutObject: calling handler <function validate_ascii_metadata at 0x00000273ABABAE80>
Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x00000273ABABA160>
Event before-parameter-build.s3.PutObject: calling handler <function convert_body_to_file_like_object at 0x00000273ABABB880>
Event before-parameter-build.s3.PutObject: calling handler <function validate_bucket_name at 0x00000273ABABA0C0>
Event before-parameter-build.s3.PutObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x00000273ABADC220>
Event before-parameter-build.s3.PutObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273C49706D0>>
Event before-parameter-build.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273C5044ED0>>
Event before-parameter-build.s3.PutObject: calling handler <function generate_idempotent_uuid at 0x00000273ABAB9EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x00000273ABADC400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273C49706D0>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'data/Juniper/Unit Test/Bootup Configuration Retrieval Test/multicast_group_increment_0.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.PutObject: calling handler <function conditionally_calculate_checksum at 0x00000273AB93DC60>
Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x00000273ABABA480>
Adding expect 100 continue header to request.
Event before-call.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273C5044ED0>>
Event before-call.s3.PutObject: calling handler <function add_recursion_detection_header at 0x00000273ABAB87C0>
Event before-call.s3.PutObject: calling handler <function inject_api_version_header_if_needed at 0x00000273ABABB9C0>
Making request for OperationModel(name=PutObject) with params: {'url_path': '/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment_0.csv', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'Content-MD5': '44oGfKTjB/7D/l/X1y0tig==', 'Expect': '100-continue'}, 'body': <_io.BytesIO object at 0x00000273F10F22F0>, 'auth_path': '/genaidev/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment_0.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment_0.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x00000273C502E150>, 'has_streaming_input': True, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'data/Juniper/Unit Test/Bootup Configuration Retrieval Test/multicast_group_increment_0.csv', 'Body': <_io.BytesIO object at 0x00000273F10F22F0>}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.PutObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000273C502E110>>
Event choose-signer.s3.PutObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x00000273C4A8B550>>
Event choose-signer.s3.PutObject: calling handler <function set_operation_specific_signer at 0x00000273ABAB9DA0>
Event before-sign.s3.PutObject: calling handler <function remove_arn_from_signing_path at 0x00000273ABADC360>
Event before-sign.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273C5044ED0>>
Calculating signature using v4 auth.
CanonicalRequest:
PUT
/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment_0.csv

content-md5:44oGfKTjB/7D/l/X1y0tig==
host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:UNSIGNED-PAYLOAD
x-amz-date:20240725T074122Z

content-md5;host;x-amz-content-sha256;x-amz-date
UNSIGNED-PAYLOAD
StringToSign:
AWS4-HMAC-SHA256
20240725T074122Z
20240725/us-west-2/s3/aws4_request
6ef0b74639eda123de26510ec021345f03dd6c9b4426a0fe48e3b337c3ba8b5a
Signature:
d2d2b209fa80534d8253019aa8a6381f607d00bd8884ca706552cff3835e74ea
Event request-created.s3.PutObject: calling handler <function add_retry_headers at 0x00000273ABADC180>
Sending http request: <AWSPreparedRequest stream_output=False, method=PUT, url=https://genaidev.s3.us-west-2.amazonaws.com/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment_0.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'Content-MD5': b'44oGfKTjB/7D/l/X1y0tig==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240725T074122Z', 'X-Amz-Content-SHA256': b'UNSIGNED-PAYLOAD', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=d2d2b209fa80534d8253019aa8a6381f607d00bd8884ca706552cff3835e74ea', 'amz-sdk-invocation-id': b'2440d87f-6eb5-46b5-aa7d-3ce74c7d0f56', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1184'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Waiting for 100 Continue response.
100 Continue response seen, now sending request body.
Response headers: {'x-amz-id-2': 'ApRb6K3nDX7BZshuf0x+38sOD1eT5SpxLqERU10V97oG9iqI2okii98D5PrLELDJZ3P9rczCb04=', 'x-amz-request-id': 'Y1R2B6JW0E11G7SE', 'Date': 'Thu, 25 Jul 2024 07:41:23 GMT', 'x-amz-version-id': 'ILARefia5C0Fwn4OrxKca64hIt2JmtEF', 'x-amz-server-side-encryption': 'AES256', 'ETag': '"e38a067ca4e307fec3fe5fd7d72d2d8a"', 'Server': 'AmazonS3', 'Content-Length': '0'}
Response body:
b''
Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x00000273C5044D50>
No retry needed.
Event needs-retry.s3.PutObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273C49706D0>>
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x00000273ABABA160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x00000273ABABA0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x00000273ABADC220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x00000273ABAB9EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x00000273ABADC400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'r0_protocols_protocols.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x00000273ABABA480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x00000273ABAB87C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x00000273ABABB9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/r0_protocols_protocols.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/r0_protocols_protocols.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/r0_protocols_protocols.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x00000273AC97C290>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'r0_protocols_protocols.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000273AC97C250>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x00000273AC44AD10>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x00000273ABAB9DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x00000273ABADC360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/r0_protocols_protocols.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T074123Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T074123Z
20240725/us-west-2/s3/aws4_request
06115a0233b624cb66ae971f5ea6640e36b7c23ea87a24ff73798684bad1d67f
Signature:
db24f45ad793d285e52ece02eca1d1128ff10a80d0adaa450daa3f91627f17aa
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x00000273ABADC180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/r0_protocols_protocols.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T074123Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=db24f45ad793d285e52ece02eca1d1128ff10a80d0adaa450daa3f91627f17aa', 'amz-sdk-invocation-id': b'2a7b3934-276d-4aa7-8baa-79184dc5dce7', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': 'zPrcB2WWsccKGDdPlMnNUdwedV3lS2/bXOrKZQBxUHENgN16K9hlN4lRVKdm7YM+FK3dLe2lKoA=', 'x-amz-request-id': 'EWA9RKV838XXNGDH', 'Date': 'Thu, 25 Jul 2024 07:41:25 GMT', 'Last-Modified': 'Wed, 26 Jun 2024 16:34:33 GMT', 'ETag': '"46c192c1925260a2fc22a998765acd66"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'JSU6StYB61c3AEI9Cb3yv4ngcTZ7WK_m', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '4795'}
Response body:
<botocore.response.StreamingBody object at 0x00000273F0B2B310>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x00000273AC98BB10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x00000273ABABA160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x00000273ABABA0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x00000273ABADC220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x00000273ABAB9EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x00000273ABADC400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'r4_interfaces_interfaces.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x00000273ABABA480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x00000273ABAB87C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x00000273ABABB9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/r4_interfaces_interfaces.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/r4_interfaces_interfaces.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/r4_interfaces_interfaces.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x00000273AC97C290>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'r4_interfaces_interfaces.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000273AC97C250>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x00000273AC44AD10>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x00000273ABAB9DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x00000273ABADC360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273AC98BC10>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/r4_interfaces_interfaces.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T074124Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T074124Z
20240725/us-west-2/s3/aws4_request
cde023c67bfaebfb297ff266557da3d651fd5179634e5c4008b68b844958b9da
Signature:
d294d0a9427b8211167dc5a49b201332d2ad2596ddcfd9d0f214950e2fae6279
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x00000273ABADC180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/r4_interfaces_interfaces.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T074124Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=d294d0a9427b8211167dc5a49b201332d2ad2596ddcfd9d0f214950e2fae6279', 'amz-sdk-invocation-id': b'8616bf64-ad92-49fc-93f0-388fdd723824', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': '4zMn1Q87VwMRqdEAoaADsg5cC8wS7ufsaeiKHlAT6tTss2NIDMufGA+1dzZzCo2gQQ7t+lV5N3A=', 'x-amz-request-id': 'EWA5SSBVRPAES61G', 'Date': 'Thu, 25 Jul 2024 07:41:25 GMT', 'Last-Modified': 'Tue, 02 Jul 2024 21:17:06 GMT', 'ETag': '"66fab8e8ef76e935b0947b61ae286441"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'pBQCpOQDj1ye5XHKTUbWYYxAMcHN9Sun', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '3141'}
Response body:
<botocore.response.StreamingBody object at 0x00000273F0C6E440>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x00000273AC98BB10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273ABFE2810>>
Event before-parameter-build.s3.PutObject: calling handler <function validate_ascii_metadata at 0x00000273ABABAE80>
Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x00000273ABABA160>
Event before-parameter-build.s3.PutObject: calling handler <function convert_body_to_file_like_object at 0x00000273ABABB880>
Event before-parameter-build.s3.PutObject: calling handler <function validate_bucket_name at 0x00000273ABABA0C0>
Event before-parameter-build.s3.PutObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x00000273ABADC220>
Event before-parameter-build.s3.PutObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273C49706D0>>
Event before-parameter-build.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273C5044ED0>>
Event before-parameter-build.s3.PutObject: calling handler <function generate_idempotent_uuid at 0x00000273ABAB9EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x00000273ABADC400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273C49706D0>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'data/Juniper/Unit Test/Bootup Configuration Retrieval Test/multicast_group_address_1.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.PutObject: calling handler <function conditionally_calculate_checksum at 0x00000273AB93DC60>
Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x00000273ABABA480>
Adding expect 100 continue header to request.
Event before-call.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273C5044ED0>>
Event before-call.s3.PutObject: calling handler <function add_recursion_detection_header at 0x00000273ABAB87C0>
Event before-call.s3.PutObject: calling handler <function inject_api_version_header_if_needed at 0x00000273ABABB9C0>
Making request for OperationModel(name=PutObject) with params: {'url_path': '/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address_1.csv', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'Content-MD5': '2LnA3QXm33AukZJPSJ/5VQ==', 'Expect': '100-continue'}, 'body': <_io.BytesIO object at 0x00000273F0E67600>, 'auth_path': '/genaidev/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address_1.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address_1.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x00000273C502E150>, 'has_streaming_input': True, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'data/Juniper/Unit Test/Bootup Configuration Retrieval Test/multicast_group_address_1.csv', 'Body': <_io.BytesIO object at 0x00000273F0E67600>}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.PutObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000273C502E110>>
Event choose-signer.s3.PutObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x00000273C4A8B550>>
Event choose-signer.s3.PutObject: calling handler <function set_operation_specific_signer at 0x00000273ABAB9DA0>
Event before-sign.s3.PutObject: calling handler <function remove_arn_from_signing_path at 0x00000273ABADC360>
Event before-sign.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x00000273C5044ED0>>
Calculating signature using v4 auth.
CanonicalRequest:
PUT
/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address_1.csv

content-md5:2LnA3QXm33AukZJPSJ/5VQ==
host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:UNSIGNED-PAYLOAD
x-amz-date:20240725T074125Z

content-md5;host;x-amz-content-sha256;x-amz-date
UNSIGNED-PAYLOAD
StringToSign:
AWS4-HMAC-SHA256
20240725T074125Z
20240725/us-west-2/s3/aws4_request
b4bdf415ba544efd1c69254f6c1caa7f36521329dff89253373afdb73327dfba
Signature:
bc6ee7c26918af1a98ecb3353d6a9ed7941870a99974cbcd07d1fcc7d96e7b75
Event request-created.s3.PutObject: calling handler <function add_retry_headers at 0x00000273ABADC180>
Sending http request: <AWSPreparedRequest stream_output=False, method=PUT, url=https://genaidev.s3.us-west-2.amazonaws.com/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address_1.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'Content-MD5': b'2LnA3QXm33AukZJPSJ/5VQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240725T074125Z', 'X-Amz-Content-SHA256': b'UNSIGNED-PAYLOAD', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=bc6ee7c26918af1a98ecb3353d6a9ed7941870a99974cbcd07d1fcc7d96e7b75', 'amz-sdk-invocation-id': b'5d1e44b4-b361-4b78-bcd0-79f116e54356', 'amz-sdk-request': b'attempt=1', 'Content-Length': '226'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Waiting for 100 Continue response.
100 Continue response seen, now sending request body.
Response headers: {'x-amz-id-2': 'RBz0GXSKg1r4X9fyKPHefiMCr9VlZMs89YYc7R9Y/4y15/gRflcQ9ZIXoJcWqwvMCrLvB8s/b68=', 'x-amz-request-id': '4N40K7XGMK8FP5NQ', 'Date': 'Thu, 25 Jul 2024 07:41:26 GMT', 'x-amz-version-id': 'orKvv9HzbNPbKFYGrhQfroSbo.CP_x2V', 'x-amz-server-side-encryption': 'AES256', 'ETag': '"d8b9c0dd05e6df702e91924f489ff955"', 'Server': 'AmazonS3', 'Content-Length': '0'}
Response body:
b''
Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x00000273C5044D50>
No retry needed.
Event needs-retry.s3.PutObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x00000273C49706D0>>
C:\Users\damod\Desktop\crys_cloud\gen_ai\bardumain\GEN_AI_BACKEND\product\services\dynamic_paramters_fetch.py changed, reloading.
Watching for file changes with StatReloader
Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
Changing event name from before-call.apigateway to before-call.api-gateway
Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
Setting config variable for region to 'us-west-2'
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\endpoints.json
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\sdk-default-configuration.json
Event choose-service-name: calling handler <function handle_service_name_alias at 0x000001F57F368720>
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\service-2.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\endpoint-rule-set-1.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\partitions.json
Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x000001F57F2BDC60>
Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x000001F57EFFE660>
Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x000001F57F2BD9E0>
Looking for endpoint for s3 via: environment_service
Looking for endpoint for s3 via: environment_global
Looking for endpoint for s3 via: config_service
Looking for endpoint for s3 via: config_global
No configured endpoint found.
Setting s3 timeout as (60, 60)
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\_retry.json
Registering retry handlers for service: s3
Registering S3 region redirector handler
Registering S3Express Identity Resolver
Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
Changing event name from before-call.apigateway to before-call.api-gateway
Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
Setting config variable for region to 'us-west-2'
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\endpoints.json
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\sdk-default-configuration.json
Event choose-service-name: calling handler <function handle_service_name_alias at 0x000001F57F368720>
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\service-2.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\endpoint-rule-set-1.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\partitions.json
Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x000001F57F2BDC60>
Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x000001F5184EF100>
Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x000001F57F2BD9E0>
Looking for endpoint for s3 via: environment_service
Looking for endpoint for s3 via: environment_global
Looking for endpoint for s3 via: config_service
Looking for endpoint for s3 via: config_global
No configured endpoint found.
Setting s3 timeout as (60, 60)
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\_retry.json
Registering retry handlers for service: s3
Registering S3 region redirector handler
Registering S3Express Identity Resolver
load_ssl_context verify=True cert=None trust_env=True http2=False
load_verify_locations cafile='C:\\Users\\damod\\Envs\\gen_ai\\Lib\\site-packages\\certifi\\cacert.pem'
load_ssl_context verify=True cert=None trust_env=True http2=False
load_verify_locations cafile='C:\\Users\\damod\\Envs\\gen_ai\\Lib\\site-packages\\certifi\\cacert.pem'
load_ssl_context verify=True cert=None trust_env=True http2=False
load_verify_locations cafile='C:\\Users\\damod\\Envs\\gen_ai\\Lib\\site-packages\\certifi\\cacert.pem'
Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
Changing event name from before-call.apigateway to before-call.api-gateway
Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
Setting config variable for region to 'us-west-2'
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\endpoints.json
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\sdk-default-configuration.json
Event choose-service-name: calling handler <function handle_service_name_alias at 0x000001F57F368720>
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\service-2.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\s3\2006-03-01\endpoint-rule-set-1.json.gz
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\partitions.json
Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x000001F57F2BDC60>
Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x000001F541544720>
Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x000001F57F2BD9E0>
Looking for endpoint for s3 via: environment_service
Looking for endpoint for s3 via: environment_global
Looking for endpoint for s3 via: config_service
Looking for endpoint for s3 via: config_global
No configured endpoint found.
Setting s3 timeout as (60, 60)
Loading JSON file: C:\Users\damod\Envs\gen_ai\Lib\site-packages\botocore\data\_retry.json
Registering retry handlers for service: s3
Registering S3 region redirector handler
Registering S3Express Identity Resolver
INFO:Generated test cases successfully. ::: Caller Details:{'filename': 'C:\\Users\\damod\\Desktop\\crys_cloud\\gen_ai\\bardumain\\GEN_AI_BACKEND\\product\\views.py', 'line_number': 514, 'function_name': 'post', 'class_name': 'GenerateTestCases'}
Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F544A77F60>, 'json_data': {'input': [[3923, 527, 76980]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}, 'headers': {'api-key': '5bd3858623ee46b0bdae2a2019ea698f'}}
connect_tcp.started host='openaiavionx.openai.azure.com' port=443 local_address=None timeout=None socket_options=None
connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F5439FB010>
start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F5359003B0> server_hostname='openaiavionx.openai.azure.com' timeout=None
start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F54483FF10>
send_request_headers.started request=<Request [b'POST']>
send_request_headers.complete
send_request_body.started request=<Request [b'POST']>
send_request_body.complete
receive_response_headers.started request=<Request [b'POST']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'8414'), (b'Content-Type', b'application/json'), (b'access-control-allow-origin', b'*'), (b'apim-request-id', b'db561221-8152-476f-95de-e50e7bbc0c08'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'x-ms-region', b'West US'), (b'x-request-id', b'c046ffe9-8523-46f4-a86d-476e8f6f6a1f'), (b'x-ms-client-request-id', b'db561221-8152-476f-95de-e50e7bbc0c08'), (b'x-ratelimit-remaining-requests', b'119'), (b'azureml-model-session', b'd006-20240609214229'), (b'x-ratelimit-remaining-tokens', b'119997'), (b'Date', b'Thu, 25 Jul 2024 07:47:48 GMT')])
HTTP Request: POST https://openaiavionx.openai.azure.com//openai/deployments/OpenAIEmbeddings/embeddings?api-version=2023-07-01-preview "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'POST']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: POST https://openaiavionx.openai.azure.com//openai/deployments/OpenAIEmbeddings/embeddings?api-version=2023-07-01-preview "200 OK"
> Top 3 nodes:
> [Node b6619250-ddbb-47af-8e38-1b9ed86455dc] [Similarity score:             0.696747] 1
Routing
Protocols:
-
BGP
(Border
Gateway
Protocol)
-
OSPF
(Open
Shortest
Path
First)
-
IS-IS
(I...
> [Node dac3b5d5-967f-443d-b8a7-474517afb3e0] [Similarity score:             0.691003] 2.2
Interface
Slots:
-
Up
to
8
line-card
slots
-
2
Routing
Engine
slots
-
2
Switch
Fabric
slots
-...
> [Node 8b8edf92-c3a2-43a1-b85d-d378f70a1513] [Similarity score:             0.685994] ####
1.3.2
Security
Protocols:
-
IPsec
(Internet
Protocol
Security)
-
SSL/TLS
(Secure
Sockets
Lay...
Request options: {'method': 'get', 'url': '/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F543A6A590>
start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F5197D3770> server_hostname='api.openai.com' timeout=5.0
start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F543A6ABD0>
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 520, b'', [(b'Date', b'Thu, 25 Jul 2024 07:50:24 GMT'), (b'Content-Type', b'text/html; charset=UTF-8'), (b'Content-Length', b'7177'), (b'Connection', b'keep-alive'), (b'Strict-Transport-Security', b'max-age=15552000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'Referrer-Policy', b'same-origin'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0'), (b'Expires', b'Thu, 01 Jan 1970 00:00:01 GMT'), (b'Set-Cookie', b'_cfuvid=F7W_WhbwF5WXg508YDDmiFSItGgZNegk9jmXi8IWN.U-1721893824418-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8b551eed6ee2-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz "HTTP/1.1 520 "
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz "520 "
Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\damod\Envs\gen_ai\Lib\site-packages\openai\_base_client.py", line 991, in _request
    response.raise_for_status()
  File "C:\Users\damod\Envs\gen_ai\Lib\site-packages\httpx\_models.py", line 759, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Server error '520 ' for url 'https://api.openai.com/v1/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/520
Retrying due to status code 520
1 retry left
Retrying request to /assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz in 0.800827 seconds
Request options: {'method': 'get', 'url': '/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_167f2cbb14a55740742ac9c0344c09a7'), (b'openai-processing-ms', b'79'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=PXIkhLm7sxtipGrALiq8Jn9Su2fNIIRLpyz53F9xzuU-1721893825-1.0.1.1-FozrYxfq42luA9J8abP_jkQVp.0EU3uyLkEpM_1ulqMCF8a9tKHn.TNfzVhzQizmknGtSAno7MgnYAA0dzW07A; path=/; expires=Thu, 25-Jul-24 08:20:25 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f17dfd66ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/assistants/asst_R7AJfXPPJnCjl0y0Xgo8cCYz "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_eb1d8de6b0816d91c8a2c1477a588bdc'), (b'openai-processing-ms', b'39'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f1bcacb6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV "200 OK"
Request options: {'method': 'post', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages', 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'files': None, 'json_data': {'content': 'You are a <Juniper> network test engineer. Your task is to write a python test script for <Bootup Configuration Retrieval Test> under category <VLAN> for <router> <MX240> which is used for <Unit Test>.\n            . Each test case and test script should be encapsulated within its own separate JSON object, and it should be an object under the "testname" key. All these JSON objects should be assembled within a Python list, resulting in a list like this: [{ "testname": "", "testcase": {}, "testscript": {} }]. Each test case should include a testname, objective, steps (list of expected results), and relevant test data. Make sure each test script JSON object includes the following fields: \'testname\', \'objective\', \'file_name\', \'init_scripts\'. The \'init_scripts\' field should contain pip install commands for all required packages, \'script\' (given in triple quotes), \'run_command\' (a command to execute the python file), and \'expected_result\'. The Python list with the JSON objects should not include any unrelated context or information. Find the starting delimiter as ###STARTLIST### and the ending delimiter as ###ENDLIST### and the list should be compatible to python list i should not get any error while converting into python list object.\n        ', 'role': 'user'}}
send_request_headers.started request=<Request [b'POST']>
send_request_headers.complete
send_request_body.started request=<Request [b'POST']>
send_request_body.complete
receive_response_headers.started request=<Request [b'POST']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_f88ffcd613d37da785583cabcf391050'), (b'openai-processing-ms', b'45'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f1dcc346ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: POST https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'POST']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: POST https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages "200 OK"
Request options: {'method': 'post', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs', 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'files': None, 'json_data': {'assistant_id': 'asst_R7AJfXPPJnCjl0y0Xgo8cCYz'}}
send_request_headers.started request=<Request [b'POST']>
send_request_headers.complete
send_request_body.started request=<Request [b'POST']>
send_request_body.complete
receive_response_headers.started request=<Request [b'POST']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_cc9da1ce6ca27ad23d28a2b632d3bd15'), (b'openai-processing-ms', b'451'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f215f436ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: POST https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'POST']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: POST https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_8ffc6fcb8dba690d89da16b213462e4e'), (b'openai-processing-ms', b'57'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f291d656ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_8b6bea45a902edc77da97b43610bc2f8'), (b'openai-processing-ms', b'57'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f2e39146ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_ca6ff5c2b9880eed69f75fe4a4f899ca'), (b'openai-processing-ms', b'69'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f335d8b6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_8870a4f5af5549dc74b7a09662cd9386'), (b'openai-processing-ms', b'39'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f3889be6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_8dc15a5832d0650a271718eb6d9bf44b'), (b'openai-processing-ms', b'54'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f3e3e956ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_7da621eaf883ed46e4ca489b6d1e24c0'), (b'openai-processing-ms', b'177'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f436af26ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_21443e77efc4ccee6275b4d4e6b45920'), (b'openai-processing-ms', b'63'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f49afc36ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_20cc0ba850f6275e919426fa02b5d461'), (b'openai-processing-ms', b'60'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f4edc5d6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_89a1e76ac26ee665b7b1e957d150941c'), (b'openai-processing-ms', b'46'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f53f8d36ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_c175b120696ae73b4c339fe3ab5bcee1'), (b'openai-processing-ms', b'129'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f590ca46ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_dea4fa052e19befdb9642068d9e43f74'), (b'openai-processing-ms', b'45'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f5ea9386ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_3a507fcdd55b5a33db169188b48d8091'), (b'openai-processing-ms', b'108'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f63bceb6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_cd37aa672cd1469315bf0b70d4b1ec23'), (b'openai-processing-ms', b'59'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f6929d16ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_93f505537f4677702f774dd7e755a403'), (b'openai-processing-ms', b'43'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f6e4dbc6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_f4353e83155943dba2bb464f589bc623'), (b'openai-processing-ms', b'60'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f7349ad6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_005954fb95fe6b83e3dabadf7881f2bd'), (b'openai-processing-ms', b'48'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f787dea6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_5e9983d1e57e2e5103fabcc8ba2cbe3d'), (b'openai-processing-ms', b'75'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f7d89f46ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_8250a7b2405dae017903043e4ad126c7'), (b'openai-processing-ms', b'42'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f82ce3e6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_5d75cadef5032693587ce13ed68e50fa'), (b'openai-processing-ms', b'66'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f87ca456ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_074f82f5d056566ceab116d51ba660e1'), (b'openai-processing-ms', b'41'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f8d5eaa6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_505ad5412f4144315cc53786eeccd1fd'), (b'openai-processing-ms', b'54'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f926aff6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_4efe0b5d2a81bdcac054c188a2c7a974'), (b'openai-processing-ms', b'44'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f978fbf6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_cb53aa7e6848293d06bc2f00db19171b'), (b'openai-processing-ms', b'65'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8f9c9c0a6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_88b3b8ea8d114d9e31500e54ea595afd'), (b'openai-processing-ms', b'50'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fa1c8286ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_6cc45a77d6936b4e36bf42e5339496b1'), (b'openai-processing-ms', b'63'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fa6dc476ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_a171141fee9639d6cb0d2c835a298ef8'), (b'openai-processing-ms', b'45'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fac09016ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_204c7c96898120c3f401b3eb3afc0fdc'), (b'openai-processing-ms', b'102'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fb11dcd6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_09f31e7e4ed1312b458ff462356f85af'), (b'openai-processing-ms', b'64'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fb68a486ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_899a8f7cd346d6d137c9091d7c84e3e1'), (b'openai-processing-ms', b'39'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fbbbf056ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_94438a6e06d761033a7679994d476e46'), (b'openai-processing-ms', b'47'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fc0cb536ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr', 'headers': {'OpenAI-Beta': 'assistants=v2'}}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_1aec48e8f3a01c99fb21bcc83c5049f8'), (b'openai-processing-ms', b'45'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fc5df3b6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/runs/run_tjXBnEtiQVzO2VrS9m6J8KQr "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages', 'params': {'order': 'asc'}, 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'json_data': None, 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x000001F5195F4EA0>}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_0f1cc7248bcaec12fe9eceee197a11a9'), (b'openai-processing-ms', b'50'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fc7b90d6ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages', 'params': {'order': 'asc', 'after': 'msg_d7C7DP0Njqp08STXEZUy08FB'}, 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'json_data': None, 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x000001F54431F9C0>}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_c3d86206502cd5734f53126ea7d2ee64'), (b'openai-processing-ms', b'50'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fcc5cd36ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc&after=msg_d7C7DP0Njqp08STXEZUy08FB "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc&after=msg_d7C7DP0Njqp08STXEZUy08FB "200 OK"
Request options: {'method': 'get', 'url': '/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages', 'params': {'order': 'asc', 'after': 'msg_c84rMCmAO5OsGWP0nZut5WHM'}, 'headers': {'OpenAI-Beta': 'assistants=v2'}, 'json_data': None, 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x000001F54431D580>}
send_request_headers.started request=<Request [b'GET']>
send_request_headers.complete
send_request_body.started request=<Request [b'GET']>
send_request_body.complete
receive_response_headers.started request=<Request [b'GET']>
receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 25 Jul 2024 07:50:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-my4nidyxgpvrwnwjaoxb7eiq'), (b'x-request-id', b'req_f05d02dc3593e977dff1353828424269'), (b'openai-processing-ms', b'46'), (b'strict-transport-security', b'max-age=15552000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8a8a8fce5e686ee2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc&after=msg_c84rMCmAO5OsGWP0nZut5WHM "HTTP/1.1 200 OK"
receive_response_body.started request=<Request [b'GET']>
receive_response_body.complete
response_closed.started
response_closed.complete
HTTP Request: GET https://api.openai.com/v1/threads/thread_EgNWrQZDj6iyOEMzQyPj0wnV/messages?order=asc&after=msg_c84rMCmAO5OsGWP0nZut5WHM "200 OK"
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x000001F57F36A160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x000001F57F36A0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x000001F57F38C220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x000001F57F369EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x000001F57F38C400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'r0_protocols_protocols.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x000001F57F36A480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x000001F57F3687C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x000001F57F36B9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/r0_protocols_protocols.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/r0_protocols_protocols.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/r0_protocols_protocols.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x000001F50038C690>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'r0_protocols_protocols.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001F50038C650>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x000001F57D9643D0>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x000001F57F369DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x000001F57F38C360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/r0_protocols_protocols.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T075059Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T075059Z
20240725/us-west-2/s3/aws4_request
67b559cdcee340971a27a23bc5d7def681927890f45b64064158637a08b93305
Signature:
b820a90ebde528cec95a5bdb0562be41abb2bff0bf6b87907efe45656410ee04
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x000001F57F38C180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/r0_protocols_protocols.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T075059Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=b820a90ebde528cec95a5bdb0562be41abb2bff0bf6b87907efe45656410ee04', 'amz-sdk-invocation-id': b'9c1c4837-9d82-4742-8a58-a6894419a463', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': '6lXGwct4HvGxAbRq7nPDxHTSdxWzXUb2WwVGIi7JraR3aQ9RBOG8BNWPsSeceOEQ5lIakKz4n8cZgWfVoaH4Sw==', 'x-amz-request-id': 'BG2CQT4SXE5YK4T4', 'Date': 'Thu, 25 Jul 2024 07:51:01 GMT', 'Last-Modified': 'Wed, 26 Jun 2024 16:34:33 GMT', 'ETag': '"46c192c1925260a2fc22a998765acd66"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'JSU6StYB61c3AEI9Cb3yv4ngcTZ7WK_m', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '4795'}
Response body:
<botocore.response.StreamingBody object at 0x000001F5446C9180>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x000001F50039BE10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x000001F57F36A160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x000001F57F36A0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x000001F57F38C220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x000001F57F369EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x000001F57F38C400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'r4_interfaces_interfaces.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x000001F57F36A480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x000001F57F3687C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x000001F57F36B9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/r4_interfaces_interfaces.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/r4_interfaces_interfaces.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/r4_interfaces_interfaces.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x000001F50038C690>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'r4_interfaces_interfaces.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001F50038C650>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x000001F57D9643D0>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x000001F57F369DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x000001F57F38C360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/r4_interfaces_interfaces.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T075100Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T075100Z
20240725/us-west-2/s3/aws4_request
4ba1930c93977aaa91e8225c19e01e277e3ae9dabe8ae08598c98e58a61df7f2
Signature:
e82fdbd0aa3c4c438bcdffad064c614c836e8906f9606f0fa8184426ef637e14
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x000001F57F38C180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/r4_interfaces_interfaces.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T075100Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=e82fdbd0aa3c4c438bcdffad064c614c836e8906f9606f0fa8184426ef637e14', 'amz-sdk-invocation-id': b'f3fdcb95-7290-4f8b-974d-be41bf9da21c', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': 'uKdT865UBFGg8jKNHFK6jLozVfGpt7yzk2llxN9ZrYs37h/xiKUsnCd4zgD2tFrPtoIA0y+TI1A989w6EVsK3A==', 'x-amz-request-id': 'BG2E4PBX14SWPD2G', 'Date': 'Thu, 25 Jul 2024 07:51:01 GMT', 'Last-Modified': 'Tue, 02 Jul 2024 21:17:06 GMT', 'ETag': '"66fab8e8ef76e935b0947b61ae286441"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'pBQCpOQDj1ye5XHKTUbWYYxAMcHN9Sun', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '3141'}
Response body:
<botocore.response.StreamingBody object at 0x000001F5446CB2E0>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x000001F50039BE10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x000001F57F36A160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x000001F57F36A0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x000001F57F38C220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x000001F57F369EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x000001F57F38C400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'CSVFiles/combined_interfaces_interfaces.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x000001F57F36A480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x000001F57F3687C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x000001F57F36B9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/CSVFiles/combined_interfaces_interfaces.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/CSVFiles/combined_interfaces_interfaces.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/CSVFiles/combined_interfaces_interfaces.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x000001F50038C690>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'CSVFiles/combined_interfaces_interfaces.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001F50038C650>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x000001F57D9643D0>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x000001F57F369DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x000001F57F38C360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/CSVFiles/combined_interfaces_interfaces.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T075100Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T075100Z
20240725/us-west-2/s3/aws4_request
0b1197bbd232aad6281e7edbf65f988269a7ab598d40fa224da4eae354e3d9c9
Signature:
da56fb197ae1c1e7a6848b8e9a9d55df8034f250833399dcc1cc4b2be68aab14
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x000001F57F38C180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/CSVFiles/combined_interfaces_interfaces.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T075100Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=da56fb197ae1c1e7a6848b8e9a9d55df8034f250833399dcc1cc4b2be68aab14', 'amz-sdk-invocation-id': b'34a7a3f9-cebb-4343-a4fa-d8515a85ad0a', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': 'nYpd9423b4T9QBHGOiPVRNylhB03m9XC/cdFkOCczL6XIkbQvZRZSzFARG75Ixsp3Xqxe3aSQUvOaMcn6o6nqw==', 'x-amz-request-id': 'BG25H5DH6FANEABE', 'Date': 'Thu, 25 Jul 2024 07:51:01 GMT', 'Last-Modified': 'Mon, 22 Jul 2024 18:05:38 GMT', 'ETag': '"00297d4f349b944cbcfb222426b74f81"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'OVqHr8lqAjKQCRTkYLOdo3SUyNpN_dCv', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '1880632'}
Response body:
<botocore.response.StreamingBody object at 0x000001F5446C8BE0>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x000001F50039BE10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.PutObject: calling handler <function validate_ascii_metadata at 0x000001F57F36AE80>
Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x000001F57F36A160>
Event before-parameter-build.s3.PutObject: calling handler <function convert_body_to_file_like_object at 0x000001F57F36B880>
Event before-parameter-build.s3.PutObject: calling handler <function validate_bucket_name at 0x000001F57F36A0C0>
Event before-parameter-build.s3.PutObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x000001F57F38C220>
Event before-parameter-build.s3.PutObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F518ACF7D0>>
Event before-parameter-build.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F518AD42D0>>
Event before-parameter-build.s3.PutObject: calling handler <function generate_idempotent_uuid at 0x000001F57F369EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x000001F57F38C400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F518ACF7D0>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'data/Juniper/Unit Test/Bootup Configuration Retrieval Test/multicast_group_increment.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.PutObject: calling handler <function conditionally_calculate_checksum at 0x000001F57F1EDC60>
Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x000001F57F36A480>
Adding expect 100 continue header to request.
Event before-call.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F518AD42D0>>
Event before-call.s3.PutObject: calling handler <function add_recursion_detection_header at 0x000001F57F3687C0>
Event before-call.s3.PutObject: calling handler <function inject_api_version_header_if_needed at 0x000001F57F36B9C0>
Making request for OperationModel(name=PutObject) with params: {'url_path': '/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment.csv', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'Content-MD5': '44oGfKTjB/7D/l/X1y0tig==', 'Expect': '100-continue'}, 'body': <_io.BytesIO object at 0x000001F5448B5850>, 'auth_path': '/genaidev/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x000001F518ABD3D0>, 'has_streaming_input': True, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'data/Juniper/Unit Test/Bootup Configuration Retrieval Test/multicast_group_increment.csv', 'Body': <_io.BytesIO object at 0x000001F5448B5850>}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.PutObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001F518ABD390>>
Event choose-signer.s3.PutObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x000001F518993C50>>
Event choose-signer.s3.PutObject: calling handler <function set_operation_specific_signer at 0x000001F57F369DA0>
Event before-sign.s3.PutObject: calling handler <function remove_arn_from_signing_path at 0x000001F57F38C360>
Event before-sign.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F518AD42D0>>
Calculating signature using v4 auth.
CanonicalRequest:
PUT
/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment.csv

content-md5:44oGfKTjB/7D/l/X1y0tig==
host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:UNSIGNED-PAYLOAD
x-amz-date:20240725T075108Z

content-md5;host;x-amz-content-sha256;x-amz-date
UNSIGNED-PAYLOAD
StringToSign:
AWS4-HMAC-SHA256
20240725T075108Z
20240725/us-west-2/s3/aws4_request
8ac6db3cdf984f55a357a1b307c3f1e9167610097a37b013bde8613ff7c7a056
Signature:
793f1e3ee0d10b2ed47f6661dc66061a543bdf9356981703d8efd478200bcd70
Event request-created.s3.PutObject: calling handler <function add_retry_headers at 0x000001F57F38C180>
Sending http request: <AWSPreparedRequest stream_output=False, method=PUT, url=https://genaidev.s3.us-west-2.amazonaws.com/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_increment.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'Content-MD5': b'44oGfKTjB/7D/l/X1y0tig==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240725T075108Z', 'X-Amz-Content-SHA256': b'UNSIGNED-PAYLOAD', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=793f1e3ee0d10b2ed47f6661dc66061a543bdf9356981703d8efd478200bcd70', 'amz-sdk-invocation-id': b'8076c69c-9d52-4909-b7a6-6c93bb614ca1', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1184'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Waiting for 100 Continue response.
100 Continue response seen, now sending request body.
Response headers: {'x-amz-id-2': 'tNovx9KIw3z8NDILx9Jzrzfu65O78HpVFhC/kBn7BTjeArCREuEHxQOzIhApRQJxJH7Ja46RpqnkR7//MHYI9Q==', 'x-amz-request-id': 'KSFXA1D6B1KKNVJ6', 'Date': 'Thu, 25 Jul 2024 07:51:09 GMT', 'x-amz-version-id': 'z3_qNkjHOwGTgm3K_D4kZQlpFhiKOUzv', 'x-amz-server-side-encryption': 'AES256', 'ETag': '"e38a067ca4e307fec3fe5fd7d72d2d8a"', 'Server': 'AmazonS3', 'Content-Length': '0'}
Response body:
b''
Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x000001F518AD4250>
No retry needed.
Event needs-retry.s3.PutObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F518ACF7D0>>
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x000001F57F36A160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x000001F57F36A0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x000001F57F38C220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x000001F57F369EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x000001F57F38C400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'r0_protocols_protocols.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x000001F57F36A480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x000001F57F3687C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x000001F57F36B9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/r0_protocols_protocols.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/r0_protocols_protocols.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/r0_protocols_protocols.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x000001F50038C690>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'r0_protocols_protocols.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001F50038C650>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x000001F57D9643D0>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x000001F57F369DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x000001F57F38C360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/r0_protocols_protocols.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T075109Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T075109Z
20240725/us-west-2/s3/aws4_request
d0a9211148e142a8d6645cd0499b377f419a4cb686ba806c06434023cd241acc
Signature:
bbae1f3f4048e4fad860690dabb26cc7188358b7cb128f498bfbbb27e2d3d5e5
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x000001F57F38C180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/r0_protocols_protocols.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T075109Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=bbae1f3f4048e4fad860690dabb26cc7188358b7cb128f498bfbbb27e2d3d5e5', 'amz-sdk-invocation-id': b'62b6f722-9c30-4ae8-b4cb-0ded4d393a65', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': 'axEP/MCKD9sJHILBcshhniCmAfnYaEC53uzAJ/jYH28gMygfrNZY17EkUpXInwV7Pu6PsAnSFhMZbeSOfeDejA==', 'x-amz-request-id': 'WRSKAZWDRKRBX8TK', 'Date': 'Thu, 25 Jul 2024 07:51:11 GMT', 'Last-Modified': 'Wed, 26 Jun 2024 16:34:33 GMT', 'ETag': '"46c192c1925260a2fc22a998765acd66"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'JSU6StYB61c3AEI9Cb3yv4ngcTZ7WK_m', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '4795'}
Response body:
<botocore.response.StreamingBody object at 0x000001F5446C8520>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x000001F50039BE10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x000001F57F36A160>
Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x000001F57F36A0C0>
Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x000001F57F38C220>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x000001F57F369EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x000001F57F38C400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'r4_interfaces_interfaces.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x000001F57F36A480>
Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x000001F57F3687C0>
Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x000001F57F36B9C0>
Making request for OperationModel(name=GetObject) with params: {'url_path': '/r4_interfaces_interfaces.csv', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19'}, 'body': b'', 'auth_path': '/genaidev/r4_interfaces_interfaces.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/r4_interfaces_interfaces.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x000001F50038C690>, 'has_streaming_input': False, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'r4_interfaces_interfaces.csv'}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001F50038C650>>
Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x000001F57D9643D0>>
Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x000001F57F369DA0>
Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x000001F57F38C360>
Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F50039BED0>>
Calculating signature using v4 auth.
CanonicalRequest:
GET
/r4_interfaces_interfaces.csv

host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20240725T075110Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
StringToSign:
AWS4-HMAC-SHA256
20240725T075110Z
20240725/us-west-2/s3/aws4_request
fc125676e3fe9c56f5021923e9b0d7e08688f364cbbc7a1d004b8a6e6d7a8399
Signature:
c82efeaf5d9c34574fe49ce91d7d124b74cd42345ed6af074b031c7972f86b9b
Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x000001F57F38C180>
Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://genaidev.s3.us-west-2.amazonaws.com/r4_interfaces_interfaces.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'X-Amz-Date': b'20240725T075110Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c82efeaf5d9c34574fe49ce91d7d124b74cd42345ed6af074b031c7972f86b9b', 'amz-sdk-invocation-id': b'8c0b2172-3213-4570-90bd-b4d312be2495', 'amz-sdk-request': b'attempt=1'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Response headers: {'x-amz-id-2': 'l0Sj04MeatCkd8v2BPstom/xKYN0d4GmfhoqPv4XD9r2zEC8Bup8Uv11qhlGVw3nArFT+5f9YyyD0g+mMl9yTA==', 'x-amz-request-id': 'WRSH2T5DGKVFVXFB', 'Date': 'Thu, 25 Jul 2024 07:51:11 GMT', 'Last-Modified': 'Tue, 02 Jul 2024 21:17:06 GMT', 'ETag': '"66fab8e8ef76e935b0947b61ae286441"', 'x-amz-server-side-encryption': 'AES256', 'x-amz-version-id': 'pBQCpOQDj1ye5XHKTUbWYYxAMcHN9Sun', 'Accept-Ranges': 'bytes', 'Content-Type': 'text/csv', 'Server': 'AmazonS3', 'Content-Length': '3141'}
Response body:
<botocore.response.StreamingBody object at 0x000001F5446C8520>
Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x000001F50039BE10>
No retry needed.
Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F500397E90>>
Event before-parameter-build.s3.PutObject: calling handler <function validate_ascii_metadata at 0x000001F57F36AE80>
Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x000001F57F36A160>
Event before-parameter-build.s3.PutObject: calling handler <function convert_body_to_file_like_object at 0x000001F57F36B880>
Event before-parameter-build.s3.PutObject: calling handler <function validate_bucket_name at 0x000001F57F36A0C0>
Event before-parameter-build.s3.PutObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x000001F57F38C220>
Event before-parameter-build.s3.PutObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F518ACF7D0>>
Event before-parameter-build.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.inject_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F518AD42D0>>
Event before-parameter-build.s3.PutObject: calling handler <function generate_idempotent_uuid at 0x000001F57F369EE0>
Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x000001F57F38C400>
Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F518ACF7D0>>
Calling endpoint provider with parameters: {'Bucket': 'genaidev', 'Region': 'us-west-2', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'data/Juniper/Unit Test/Bootup Configuration Retrieval Test/multicast_group_address.csv', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
Endpoint provider result: https://genaidev.s3.us-west-2.amazonaws.com
Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}
Event before-call.s3.PutObject: calling handler <function conditionally_calculate_checksum at 0x000001F57F1EDC60>
Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x000001F57F36A480>
Adding expect 100 continue header to request.
Event before-call.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F518AD42D0>>
Event before-call.s3.PutObject: calling handler <function add_recursion_detection_header at 0x000001F57F3687C0>
Event before-call.s3.PutObject: calling handler <function inject_api_version_header_if_needed at 0x000001F57F36B9C0>
Making request for OperationModel(name=PutObject) with params: {'url_path': '/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address.csv', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'Content-MD5': '2LnA3QXm33AukZJPSJ/5VQ==', 'Expect': '100-continue'}, 'body': <_io.BytesIO object at 0x000001F544583D30>, 'auth_path': '/genaidev/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address.csv', 'url': 'https://genaidev.s3.us-west-2.amazonaws.com/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address.csv', 'context': {'client_region': 'us-west-2', 'client_config': <botocore.config.Config object at 0x000001F518ABD3D0>, 'has_streaming_input': True, 'auth_type': 'v4', 's3_redirect': {'redirected': False, 'bucket': 'genaidev', 'params': {'Bucket': 'genaidev', 'Key': 'data/Juniper/Unit Test/Bootup Configuration Retrieval Test/multicast_group_address.csv', 'Body': <_io.BytesIO object at 0x000001F544583D30>}}, 'S3Express': {'bucket_name': 'genaidev'}, 'signing': {'region': 'us-west-2', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-2'}]}}}
Event request-created.s3.PutObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001F518ABD390>>
Event choose-signer.s3.PutObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x000001F518993C50>>
Event choose-signer.s3.PutObject: calling handler <function set_operation_specific_signer at 0x000001F57F369DA0>
Event before-sign.s3.PutObject: calling handler <function remove_arn_from_signing_path at 0x000001F57F38C360>
Event before-sign.s3.PutObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x000001F518AD42D0>>
Calculating signature using v4 auth.
CanonicalRequest:
PUT
/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address.csv

content-md5:2LnA3QXm33AukZJPSJ/5VQ==
host:genaidev.s3.us-west-2.amazonaws.com
x-amz-content-sha256:UNSIGNED-PAYLOAD
x-amz-date:20240725T075111Z

content-md5;host;x-amz-content-sha256;x-amz-date
UNSIGNED-PAYLOAD
StringToSign:
AWS4-HMAC-SHA256
20240725T075111Z
20240725/us-west-2/s3/aws4_request
986a4ac07d17303b624f69ccb498aeeede649e4ab43a089802cb3b1f5c95e6e2
Signature:
7d5954cc6268daaacd63e7fc2c1cc25bb2f5e4951880ef464b7c120737237c09
Event request-created.s3.PutObject: calling handler <function add_retry_headers at 0x000001F57F38C180>
Sending http request: <AWSPreparedRequest stream_output=False, method=PUT, url=https://genaidev.s3.us-west-2.amazonaws.com/data/Juniper/Unit%20Test/Bootup%20Configuration%20Retrieval%20Test/multicast_group_address.csv, headers={'User-Agent': b'Boto3/1.34.19 md/Botocore#1.34.19 ua/2.0 os/windows#10 md/arch#amd64 lang/python#3.11.1 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.34.19', 'Content-MD5': b'2LnA3QXm33AukZJPSJ/5VQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20240725T075111Z', 'X-Amz-Content-SHA256': b'UNSIGNED-PAYLOAD', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA3MUTZS7BNCEROH24/20240725/us-west-2/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=7d5954cc6268daaacd63e7fc2c1cc25bb2f5e4951880ef464b7c120737237c09', 'amz-sdk-invocation-id': b'b097d161-51b0-45df-9f99-e6cd795ddcad', 'amz-sdk-request': b'attempt=1', 'Content-Length': '226'}>
Certificate path: C:\Users\damod\Envs\gen_ai\Lib\site-packages\certifi\cacert.pem
Waiting for 100 Continue response.
100 Continue response seen, now sending request body.
Response headers: {'x-amz-id-2': '4Kwdyni/cLtcc4J1yZ2Bx5pueG6EZLMkXS8fH2q5etunmSEd9iLlgHmxgRk36ZY1TEulvnViakylspYxlXNO2g==', 'x-amz-request-id': 'Q2B0QRYJXF59QVP9', 'Date': 'Thu, 25 Jul 2024 07:51:12 GMT', 'x-amz-version-id': 'F9o90PwRHDXxRrZMp0XwqlfP1zaPWqow', 'x-amz-server-side-encryption': 'AES256', 'ETag': '"d8b9c0dd05e6df702e91924f489ff955"', 'Server': 'AmazonS3', 'Content-Length': '0'}
Response body:
b''
Event needs-retry.s3.PutObject: calling handler <botocore.retryhandler.RetryHandler object at 0x000001F518AD4250>
No retry needed.
Event needs-retry.s3.PutObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x000001F518ACF7D0>>
