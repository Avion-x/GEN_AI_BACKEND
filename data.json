[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2024-01-10T14:27:16.388Z", "user": 2, "content_type": 10, "object_id": "9", "object_repr": "Juniper - damu", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2024-01-31T06:00:11.488Z", "user": 9, "content_type": 10, "object_id": "13", "object_repr": "Avion-x - anju_goel", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2024-01-31T06:13:30.625Z", "user": 9, "content_type": 10, "object_id": "14", "object_repr": "Avion-x - deepak_agarwal", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2024-01-31T06:14:18.055Z", "user": 9, "content_type": 10, "object_id": "15", "object_repr": "Avion-x - prema_nair", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2024-02-01T05:26:29.947Z", "user": 9, "content_type": 10, "object_id": "15", "object_repr": "Juniper - prema_nair", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Customer\"]}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2024-02-01T05:26:36.156Z", "user": 9, "content_type": 10, "object_id": "14", "object_repr": "Juniper - deepak_agarwal", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Customer\"]}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2024-02-01T05:26:43.820Z", "user": 9, "content_type": 10, "object_id": "13", "object_repr": "Juniper - anju_goel", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Customer\"]}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2024-02-01T06:29:56.289Z", "user": 9, "content_type": 10, "object_id": "16", "object_repr": "Juniper - Tester1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2024-02-01T06:30:36.702Z", "user": 9, "content_type": 10, "object_id": "17", "object_repr": "Juniper - Admin2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2024-02-06T05:39:13.265Z", "user": 9, "content_type": 10, "object_id": "2", "object_repr": "Juniper - damodar", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Groups\", \"Comments\", \"Last updated by\"]}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2024-02-06T05:40:51.964Z", "user": 9, "content_type": 10, "object_id": "2", "object_repr": "Juniper - damodar", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Last login\", \"User permissions\"]}}]"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add Token", "content_type": 4, "codename": "add_token"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change Token", "content_type": 4, "codename": "change_token"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete Token", "content_type": 4, "codename": "delete_token"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view Token", "content_type": 4, "codename": "view_token"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add token", "content_type": 5, "codename": "add_tokenproxy"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change token", "content_type": 5, "codename": "change_tokenproxy"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete token", "content_type": 5, "codename": "delete_tokenproxy"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view token", "content_type": 5, "codename": "view_tokenproxy"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add content type", "content_type": 6, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change content type", "content_type": 6, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete content type", "content_type": 6, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view content type", "content_type": 6, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add session", "content_type": 7, "codename": "add_session"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change session", "content_type": 7, "codename": "change_session"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete session", "content_type": 7, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view session", "content_type": 7, "codename": "view_session"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add access type", "content_type": 8, "codename": "add_accesstype"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change access type", "content_type": 8, "codename": "change_accesstype"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete access type", "content_type": 8, "codename": "delete_accesstype"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view access type", "content_type": 8, "codename": "view_accesstype"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add customer", "content_type": 9, "codename": "add_customer"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change customer", "content_type": 9, "codename": "change_customer"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete customer", "content_type": 9, "codename": "delete_customer"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view customer", "content_type": 9, "codename": "view_customer"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add user", "content_type": 10, "codename": "add_user"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change user", "content_type": 10, "codename": "change_user"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete user", "content_type": 10, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view user", "content_type": 10, "codename": "view_user"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add customer config", "content_type": 11, "codename": "add_customerconfig"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change customer config", "content_type": 11, "codename": "change_customerconfig"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete customer config", "content_type": 11, "codename": "delete_customerconfig"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view customer config", "content_type": 11, "codename": "view_customerconfig"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add router details", "content_type": 12, "codename": "add_routerdetails"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change router details", "content_type": 12, "codename": "change_routerdetails"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete router details", "content_type": 12, "codename": "delete_routerdetails"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view router details", "content_type": 12, "codename": "view_routerdetails"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add user access", "content_type": 13, "codename": "add_useraccess"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change user access", "content_type": 13, "codename": "change_useraccess"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete user access", "content_type": 13, "codename": "delete_useraccess"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view user access", "content_type": 13, "codename": "view_useraccess"}}, {"model": "auth.permission", "pk": 53, "fields": {"name": "Can add test type", "content_type": 14, "codename": "add_testtype"}}, {"model": "auth.permission", "pk": 54, "fields": {"name": "Can change test type", "content_type": 14, "codename": "change_testtype"}}, {"model": "auth.permission", "pk": 55, "fields": {"name": "Can delete test type", "content_type": 14, "codename": "delete_testtype"}}, {"model": "auth.permission", "pk": 56, "fields": {"name": "Can view test type", "content_type": 14, "codename": "view_testtype"}}, {"model": "auth.permission", "pk": 57, "fields": {"name": "Can add product category", "content_type": 15, "codename": "add_productcategory"}}, {"model": "auth.permission", "pk": 58, "fields": {"name": "Can change product category", "content_type": 15, "codename": "change_productcategory"}}, {"model": "auth.permission", "pk": 59, "fields": {"name": "Can delete product category", "content_type": 15, "codename": "delete_productcategory"}}, {"model": "auth.permission", "pk": 60, "fields": {"name": "Can view product category", "content_type": 15, "codename": "view_productcategory"}}, {"model": "auth.permission", "pk": 61, "fields": {"name": "Can add product sub category", "content_type": 16, "codename": "add_productsubcategory"}}, {"model": "auth.permission", "pk": 62, "fields": {"name": "Can change product sub category", "content_type": 16, "codename": "change_productsubcategory"}}, {"model": "auth.permission", "pk": 63, "fields": {"name": "Can delete product sub category", "content_type": 16, "codename": "delete_productsubcategory"}}, {"model": "auth.permission", "pk": 64, "fields": {"name": "Can view product sub category", "content_type": 16, "codename": "view_productsubcategory"}}, {"model": "auth.permission", "pk": 65, "fields": {"name": "Can add product category prompt code", "content_type": 17, "codename": "add_productcategorypromptcode"}}, {"model": "auth.permission", "pk": 66, "fields": {"name": "Can change product category prompt code", "content_type": 17, "codename": "change_productcategorypromptcode"}}, {"model": "auth.permission", "pk": 67, "fields": {"name": "Can delete product category prompt code", "content_type": 17, "codename": "delete_productcategorypromptcode"}}, {"model": "auth.permission", "pk": 68, "fields": {"name": "Can view product category prompt code", "content_type": 17, "codename": "view_productcategorypromptcode"}}, {"model": "auth.permission", "pk": 69, "fields": {"name": "Can add product", "content_type": 18, "codename": "add_product"}}, {"model": "auth.permission", "pk": 70, "fields": {"name": "Can change product", "content_type": 18, "codename": "change_product"}}, {"model": "auth.permission", "pk": 71, "fields": {"name": "Can delete product", "content_type": 18, "codename": "delete_product"}}, {"model": "auth.permission", "pk": 72, "fields": {"name": "Can view product", "content_type": 18, "codename": "view_product"}}, {"model": "auth.permission", "pk": 73, "fields": {"name": "Can add prompt", "content_type": 19, "codename": "add_prompt"}}, {"model": "auth.permission", "pk": 74, "fields": {"name": "Can change prompt", "content_type": 19, "codename": "change_prompt"}}, {"model": "auth.permission", "pk": 75, "fields": {"name": "Can delete prompt", "content_type": 19, "codename": "delete_prompt"}}, {"model": "auth.permission", "pk": 76, "fields": {"name": "Can view prompt", "content_type": 19, "codename": "view_prompt"}}, {"model": "auth.permission", "pk": 77, "fields": {"name": "Can add product prompt", "content_type": 20, "codename": "add_productprompt"}}, {"model": "auth.permission", "pk": 78, "fields": {"name": "Can change product prompt", "content_type": 20, "codename": "change_productprompt"}}, {"model": "auth.permission", "pk": 79, "fields": {"name": "Can delete product prompt", "content_type": 20, "codename": "delete_productprompt"}}, {"model": "auth.permission", "pk": 80, "fields": {"name": "Can view product prompt", "content_type": 20, "codename": "view_productprompt"}}, {"model": "auth.permission", "pk": 81, "fields": {"name": "Can add product category prompt", "content_type": 21, "codename": "add_productcategoryprompt"}}, {"model": "auth.permission", "pk": 82, "fields": {"name": "Can change product category prompt", "content_type": 21, "codename": "change_productcategoryprompt"}}, {"model": "auth.permission", "pk": 83, "fields": {"name": "Can delete product category prompt", "content_type": 21, "codename": "delete_productcategoryprompt"}}, {"model": "auth.permission", "pk": 84, "fields": {"name": "Can view product category prompt", "content_type": 21, "codename": "view_productcategoryprompt"}}, {"model": "auth.permission", "pk": 85, "fields": {"name": "Can add test cases", "content_type": 22, "codename": "add_testcases"}}, {"model": "auth.permission", "pk": 86, "fields": {"name": "Can change test cases", "content_type": 22, "codename": "change_testcases"}}, {"model": "auth.permission", "pk": 87, "fields": {"name": "Can delete test cases", "content_type": 22, "codename": "delete_testcases"}}, {"model": "auth.permission", "pk": 88, "fields": {"name": "Can view test cases", "content_type": 22, "codename": "view_testcases"}}, {"model": "auth.permission", "pk": 89, "fields": {"name": "Can add foundational model", "content_type": 23, "codename": "add_foundationalmodel"}}, {"model": "auth.permission", "pk": 90, "fields": {"name": "Can change foundational model", "content_type": 23, "codename": "change_foundationalmodel"}}, {"model": "auth.permission", "pk": 91, "fields": {"name": "Can delete foundational model", "content_type": 23, "codename": "delete_foundationalmodel"}}, {"model": "auth.permission", "pk": 92, "fields": {"name": "Can view foundational model", "content_type": 23, "codename": "view_foundationalmodel"}}, {"model": "auth.permission", "pk": 93, "fields": {"name": "Can add test categories", "content_type": 24, "codename": "add_testcategories"}}, {"model": "auth.permission", "pk": 94, "fields": {"name": "Can change test categories", "content_type": 24, "codename": "change_testcategories"}}, {"model": "auth.permission", "pk": 95, "fields": {"name": "Can delete test categories", "content_type": 24, "codename": "delete_testcategories"}}, {"model": "auth.permission", "pk": 96, "fields": {"name": "Can view test categories", "content_type": 24, "codename": "view_testcategories"}}, {"model": "auth.permission", "pk": 97, "fields": {"name": "Onboarding users", "content_type": 1, "codename": "Onboarding_users"}}, {"model": "auth.permission", "pk": 98, "fields": {"name": "Removing Users", "content_type": 1, "codename": "Removing_Users"}}, {"model": "auth.permission", "pk": 99, "fields": {"name": "Approving Products ", "content_type": 1, "codename": "Approving_Products "}}, {"model": "auth.permission", "pk": 100, "fields": {"name": "Generating Test Cases", "content_type": 1, "codename": "Generating_Test_Cases"}}, {"model": "auth.permission", "pk": 101, "fields": {"name": "executing Test Cases", "content_type": 1, "codename": "executing_Test_Cases"}}, {"model": "auth.permission", "pk": 102, "fields": {"name": "Reset Password", "content_type": 1, "codename": "Reset_Password"}}, {"model": "auth.permission", "pk": 103, "fields": {"name": "Set Permissions to the user", "content_type": 1, "codename": "Set_Permissions_to_the_user"}}, {"model": "auth.permission", "pk": 104, "fields": {"name": "They can see all executed Test Cases", "content_type": 1, "codename": "see_all_executed_Test_Cases"}}, {"model": "auth.permission", "pk": 105, "fields": {"name": "Uplaod a CSV File to add multiple products", "content_type": 1, "codename": "Uplaod_CSV_File"}}, {"model": "auth.permission", "pk": 106, "fields": {"name": "Mark Test Cases as pass or fail ", "content_type": 1, "codename": "Mark_Test_Cases"}}, {"model": "auth.permission", "pk": 107, "fields": {"name": "Select failed Test Cases ", "content_type": 1, "codename": "Select_failed_Test_Cases "}}, {"model": "auth.permission", "pk": 108, "fields": {"name": "Push Test Result to Git ", "content_type": 1, "codename": "Push_to_Git "}}, {"model": "auth.permission", "pk": 109, "fields": {"name": "Push Test Result to S3 Bucket", "content_type": 1, "codename": "Push _to_S3"}}, {"model": "auth.permission", "pk": 110, "fields": {"name": "Adding  products", "content_type": 1, "codename": "Adding _products"}}, {"model": "auth.permission", "pk": 111, "fields": {"name": "Adding  catagoey", "content_type": 1, "codename": "Adding_catagoery"}}, {"model": "auth.permission", "pk": 112, "fields": {"name": "Adding  sub- catagoey", "content_type": 1, "codename": "Adding _sub_catagoey"}}, {"model": "auth.permission", "pk": 113, "fields": {"name": "Can add test script exec results", "content_type": 25, "codename": "add_testscriptexecresults"}}, {"model": "auth.permission", "pk": 114, "fields": {"name": "Can change test script exec results", "content_type": 25, "codename": "change_testscriptexecresults"}}, {"model": "auth.permission", "pk": 115, "fields": {"name": "Can delete test script exec results", "content_type": 25, "codename": "delete_testscriptexecresults"}}, {"model": "auth.permission", "pk": 116, "fields": {"name": "Can view test script exec results", "content_type": 25, "codename": "view_testscriptexecresults"}}, {"model": "auth.permission", "pk": 117, "fields": {"name": "Can add request tracking", "content_type": 26, "codename": "add_requesttracking"}}, {"model": "auth.permission", "pk": 118, "fields": {"name": "Can change request tracking", "content_type": 26, "codename": "change_requesttracking"}}, {"model": "auth.permission", "pk": 119, "fields": {"name": "Can delete request tracking", "content_type": 26, "codename": "delete_requesttracking"}}, {"model": "auth.permission", "pk": 120, "fields": {"name": "Can view request tracking", "content_type": 26, "codename": "view_requesttracking"}}, {"model": "auth.permission", "pk": 121, "fields": {"name": "Can add structured test cases", "content_type": 27, "codename": "add_structuredtestcases"}}, {"model": "auth.permission", "pk": 122, "fields": {"name": "Can change structured test cases", "content_type": 27, "codename": "change_structuredtestcases"}}, {"model": "auth.permission", "pk": 123, "fields": {"name": "Can delete structured test cases", "content_type": 27, "codename": "delete_structuredtestcases"}}, {"model": "auth.permission", "pk": 124, "fields": {"name": "Can view structured test cases", "content_type": 27, "codename": "view_structuredtestcases"}}, {"model": "auth.group", "pk": 1, "fields": {"name": "GROUP-Auth", "permissions": [97, 98]}}, {"model": "auth.group", "pk": 2, "fields": {"name": "GROUP-Adding Devices", "permissions": [110, 112, 111]}}, {"model": "auth.group", "pk": 3, "fields": {"name": "GROUP-Test Execution", "permissions": [1, 101, 100]}}, {"model": "auth.group", "pk": 4, "fields": {"name": "GROUP-storage", "permissions": [109, 108]}}, {"model": "auth.group", "pk": 5, "fields": {"name": "GROUP-permission", "permissions": [99, 102, 104, 103]}}, {"model": "auth.group", "pk": 6, "fields": {"name": "GROUP-Testselection", "permissions": [106, 107]}}, {"model": "auth.group", "pk": 7, "fields": {"name": "GROUP-Upload CSV", "permissions": [105]}}, {"model": "authtoken.token", "pk": "01d7c194a08e3732960089b8de27849d821a39aa", "fields": {"user": 15, "created": "2024-02-06T04:59:56.120Z"}}, {"model": "authtoken.token", "pk": "372d58aa0d16700e90b8cde0dc87a65ef0dd2fac", "fields": {"user": 9, "created": "2024-01-10T14:29:04.346Z"}}, {"model": "authtoken.token", "pk": "7f26828b01b8e4f420424b9e3ba2e8b4b866e4c7", "fields": {"user": 11, "created": "2024-01-30T13:52:48.043Z"}}, {"model": "authtoken.token", "pk": "936006a7ddc16403ec237b0024e43d3ab86c9b9f", "fields": {"user": 14, "created": "2024-02-01T05:25:29.028Z"}}, {"model": "authtoken.token", "pk": "9cf6b0dae7b871ea4da8a770ac44d26694ab2d1c", "fields": {"user": 10, "created": "2024-02-06T05:30:55.743Z"}}, {"model": "authtoken.token", "pk": "d03190df82c766c3aab6aaa35adb52fefd5d6263", "fields": {"user": 2, "created": "2024-01-08T06:07:50.674Z"}}, {"model": "authtoken.token", "pk": "e63783a0c05468d24e747bf43436d61975eb977f", "fields": {"user": 13, "created": "2024-02-01T05:25:10.182Z"}}, {"model": "authtoken.token", "pk": "f6ebe5900292bbe4e9687cc867d12d6b68fb3f67", "fields": {"user": 17, "created": "2024-02-05T07:49:16.712Z"}}, {"model": "authtoken.token", "pk": "fd5bc0c23bf8861275700defd0643a0def2a165d", "fields": {"user": 16, "created": "2024-02-03T21:44:25.648Z"}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "authtoken", "model": "token"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "authtoken", "model": "tokenproxy"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "user", "model": "accesstype"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "user", "model": "customer"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "user", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "user", "model": "customerconfig"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "user", "model": "routerdetails"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "user", "model": "useraccess"}}, {"model": "contenttypes.contenttype", "pk": 14, "fields": {"app_label": "product", "model": "testtype"}}, {"model": "contenttypes.contenttype", "pk": 15, "fields": {"app_label": "product", "model": "productcategory"}}, {"model": "contenttypes.contenttype", "pk": 16, "fields": {"app_label": "product", "model": "productsubcategory"}}, {"model": "contenttypes.contenttype", "pk": 17, "fields": {"app_label": "product", "model": "productcategorypromptcode"}}, {"model": "contenttypes.contenttype", "pk": 18, "fields": {"app_label": "product", "model": "product"}}, {"model": "contenttypes.contenttype", "pk": 19, "fields": {"app_label": "product", "model": "prompt"}}, {"model": "contenttypes.contenttype", "pk": 20, "fields": {"app_label": "product", "model": "productprompt"}}, {"model": "contenttypes.contenttype", "pk": 21, "fields": {"app_label": "product", "model": "productcategoryprompt"}}, {"model": "contenttypes.contenttype", "pk": 22, "fields": {"app_label": "product", "model": "testcases"}}, {"model": "contenttypes.contenttype", "pk": 23, "fields": {"app_label": "product", "model": "foundationalmodel"}}, {"model": "contenttypes.contenttype", "pk": 24, "fields": {"app_label": "product", "model": "testcategories"}}, {"model": "contenttypes.contenttype", "pk": 25, "fields": {"app_label": "product", "model": "testscriptexecresults"}}, {"model": "contenttypes.contenttype", "pk": 26, "fields": {"app_label": "user", "model": "requesttracking"}}, {"model": "contenttypes.contenttype", "pk": 27, "fields": {"app_label": "product", "model": "structuredtestcases"}}, {"model": "sessions.session", "pk": "03w76ve5kmfcy5j99tkuk9eu6hi1ljxu", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwi0:W1RT---2ydTMSz_qAhQ-mqaEeVQkKNDRKn8JkKj0rUU", "expire_date": "2024-02-19T11:00:16.561Z"}}, {"model": "sessions.session", "pk": "07hozfjkc40rygvhdu9aj6h7601fv7eo", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hCaVhpcuvcMk-YnowaSYWZlvLuSzELzdq8q9RITb2uZtp6WaY7iLECJw-_pOTxSHSTeud6aDK2uy-zlUOROu7y2mJ6X3f0LFO5ldCMa57MjzQ5QGbCnrFVISGAMKNY6Wzo6679zkMgypYDOU8CAQFa8P9llNvo:1rXJtb:CGcsuKpErvfZtyqZbXybsEVvu4oGsFgFHU2JmP9fHSk", "expire_date": "2024-02-20T11:45:47.838Z"}}, {"model": "sessions.session", "pk": "0guo62o6ds9ip7cnbebn91fol6vhsief", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV4EH:8JWzWF3W8a9COMyPLcB_udjxQnpaLgpvw6JaHO9uqRs", "expire_date": "2024-02-14T06:37:49.981Z"}}, {"model": "sessions.session", "pk": "0ikq5l38rfb3j7g3nwfk84r98pa4kdyh", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV7ha:PoDAROi8EEGdtrf6CZJgEg91REQ_TcoWenA0pY_x0IU", "expire_date": "2024-02-14T10:20:18.100Z"}}, {"model": "sessions.session", "pk": "0z7z95wbap7icblrx34fue2klfwor9eb", "fields": {"session_data": ".eJxVjDkOwjAUBe_iGlneYhtKes5g_Q0cQLaUpULcHSKlgPbNzHupAutSyzrLVEZWJ-XU4XdDoIe0DfAd2q1r6m2ZRtSbonc660tneZ539--gwly_NQ1RTKIc0Tph51w45sEYFA4JQ4rEACyCA-aULXgmbw15iC4HvkZU7w_qCjhU:1rVtGP:hMc7kOnGsP7r5OvaiDhFv_Qjr69ZB3d79FFxeexWwNk", "expire_date": "2024-02-16T13:07:25.214Z"}}, {"model": "sessions.session", "pk": "19ldmcew7zcuk168zg3pqdpl6holpjs4", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syqdjld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcQPzg6:1rVPZp:FT24-19MC-SmTWbkspt8XTg1wBS6XDCiHMA_R6aI7e8", "expire_date": "2024-02-15T05:25:29.038Z"}}, {"model": "sessions.session", "pk": "1hlpohhvmez6joxl5u7zx90i1tuux9mf", "fields": {"session_data": ".eJxVjLsOwjAMAP8lM4pS3DzKyM43RI7tkAJKpaadEP-OInWA9e50bxVx30rcm6xxZnVRZ3X6ZQnpKbULfmC9L5qWuq1z0j3Rh236trC8rkf7NyjYSt8i-2xGBA_BwGQcuBGJjLdGyDriwOCttWFwGSZJIQNLygOJ4SCQ1ecLzuQ4Cg:1rWwTF:4xBIWgvRBBsYtECdpQDUCl5QfBz6VTJjunFkx40kNT0", "expire_date": "2024-02-19T10:45:01.934Z"}}, {"model": "sessions.session", "pk": "1p80qvmp2w976agr4yxffcglwiizdxbi", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hCaVhpcuvcMk-YnowaSYWZlvLuSzELzdq8q9RITb2uZtp6WaY7iLECJw-_pOTxSHSTeud6aDK2uy-zlUOROu7y2mJ6X3f0LFO5ldCMa57MjzQ5QGbCnrFVISGAMKNY6Wzo6679zkMgypYDOU8CAQFa8P9llNvo:1rSf6B:9G4BoJ51-_IhGMAl5xZrwP6cs7csiqRpq35tTTOHFDI", "expire_date": "2024-02-07T15:23:31.840Z"}}, {"model": "sessions.session", "pk": "1sqkuhz5k235v4za5i2pn0jtepz1j9ff", "fields": {"session_data": ".eJxVjMsOwiAURP-FtSGAPF269xvI5V6QqoGktCvjv9smXehy5pyZN4uwLjWuI89xInZhip1-uwT4zG0H9IB27xx7W-Yp8V3hBx381im_rof7d1Bh1G1dMiFmQ2QcBAcJgydhEb3XWdgCmFQQxkqZREKQTmo8qy0ROCxOO_b5AiHNOOQ:1rWvy1:FOJ-_20NaK5wd864zdPaYN08QaYS69zvoj2ycsaZQNc", "expire_date": "2024-02-19T10:12:45.549Z"}}, {"model": "sessions.session", "pk": "1vqwjp5xype3h5ba9yjxdvauxw0ke1rt", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rPxRg:61QRr6K3VEtipx1j5GZn1q--4TeJV8heKR8dOdG9Oh8", "expire_date": "2024-01-31T04:22:32.682Z"}}, {"model": "sessions.session", "pk": "27nocla8q5rjkkzc6pjkhayv6jpwa1il", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syqdnld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcQ2Dg7:1rXFwF:perN1g2n-_0L43b-qYhf5q3W6BMZVhvrtoVT_AwGGH4", "expire_date": "2024-02-20T07:32:15.315Z"}}, {"model": "sessions.session", "pk": "28ehz9ea7r98slcsyf0wu54l9n8ckcgv", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgTEWX7nuGZoYZpGogKe3KeHfbpAvd_vf-e6sR1yWPa5N5nFhdlVOn340wPqXsgB9Y7lXHWpZ5Ir0r-qBND5XldTvcv0DGlrd3pLO1yWEXAFB6YPIdg7MXI8k7QrG-N162IAKCSUYgsEdOloJzwOrzBfDoOG8:1rN5cp:vYqzzL1nH2JlhUd-adj-H7wG44g78dctPbGxWgAXidA", "expire_date": "2024-01-23T06:30:11.946Z"}}, {"model": "sessions.session", "pk": "2nxunu2wzwosv545jppwueskyvq6lrwz", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV6dV:8-iUewcjIKCyzGT6XjaM95DBFtGMOnqzyauKHDw4CGc", "expire_date": "2024-02-14T09:12:01.181Z"}}, {"model": "sessions.session", "pk": "2un5gnsif9shjm7fram7t449tbfldw7r", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAMBRcuvcbCI9BqoYmpV0Z_11JutDtPefcF_Nh36rfO61-zuzMFDv9bjGkB7UB8j2028LT0rZ1jnwo_KCdX5dMz8vh_h3U0OuohTAoVCA0SiRjEYGAtNPGWjFJmaYCBaIrYJRFjZFyJJQOcpHi27D3B7IoNrc:1rNZTJ:oA1eZ-VzRxXarFnO34wWCD3dAAxFPfA5cxUuIZ73X9w", "expire_date": "2024-01-24T14:22:21.029Z"}}, {"model": "sessions.session", "pk": "2veko6idh6jkplweb6phuveej8sk2ehi", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV7n0:M_YV2U-UgETfhYnh1n5eNbTND3qQ6NBnGBtUNCFqm7A", "expire_date": "2024-02-14T10:25:54.200Z"}}, {"model": "sessions.session", "pk": "37e4u70sy2l8j3o4674mp5bji58d23t7", "fields": {"session_data": ".eJxVjLsOwjAMAP8lM4pS3DzKyM43RI7tkAJKpaadEP-OInWA9e50bxVx30rcm6xxZnVRZ3X6ZQnpKbULfmC9L5qWuq1z0j3Rh236trC8rkf7NyjYSt8i-2xGBA_BwGQcuBGJjLdGyDriwOCttWFwGSZJIQNLygOJ4SCQ1ecLzuQ4Cg:1rWwPK:3xNxwVIlv5TuGyx7Y8UGs8FXtQje2SYtjtTW2XWkAWE", "expire_date": "2024-02-19T10:40:58.878Z"}}, {"model": "sessions.session", "pk": "3qs89qo477lbxus59636p35kojdcbz27", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rOHWP:6pwgfSLw4IfgHRqjn950-QoHL7wnNIu7mPBTsPa8ZA4", "expire_date": "2024-01-26T13:24:29.759Z"}}, {"model": "sessions.session", "pk": "3su6q9c97mgvlh2h6hjnk0fckhle3muh", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rUogv:FINo7wTBToa3Kg9_ROlKC-uOO4trmCu32TnELcRK5GU", "expire_date": "2024-02-13T14:02:21.356Z"}}, {"model": "sessions.session", "pk": "4bhn5sb5vsfo9k9uuhoj294a7wjx3ssu", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rX6DC:kVs_tT2dLvRML4-6j8AMyqPN4PWwja2UCwQnN5gRs3c", "expire_date": "2024-02-19T21:09:06.407Z"}}, {"model": "sessions.session", "pk": "4gmjsxh6f4j2ygipbpa1eoguvhr3ezvs", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwXD:kpDcN-in6AjmGKUn8PpY3IkGaIZvJ7L_wHzzQHlNums", "expire_date": "2024-02-19T10:49:07.376Z"}}, {"model": "sessions.session", "pk": "4mo1iszwnbqhkc0jlwldv9i6zkntbxia", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-ZW1T0nMGa9fe4ABypDipEHeHSCmgfTPzXiLhtta0dV7SVMRZGHH63Qjzg9sOyh3bbZZ5busykdwVedAur3Ph5-Vw_w4q9vqtlSs6giOfdYiI4IfII6EzQKAU2GCBiwKy3iEYJBuNHmyImgkwjyjeH8iON20:1rXQWa:dBqx_7ccDmgUBIuIqrnMDtV6xSeOLs64SY5GjcTu8pQ", "expire_date": "2024-02-20T18:50:28.742Z"}}, {"model": "sessions.session", "pk": "4slrh9qj1qwayneqpda35x2mch391qts", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2pA0LQgu3XsG0g2NjBpI5rMy3l1JZqHbV1XvpSJta43bInOcsjorow6_G1N6SBsg36nduk69rfPEeih6p4u-9izPy-7-HVRa6qiLdxbQGculMCFDIFeOwSOeBLI44QToMYWAENB5FmMTfCPrJUNR7w_mCDe-:1rWzTr:F0hpmT8-4-DH2F9fNItXG8aPdo1pSGQpMVWFh6HE0dY", "expire_date": "2024-02-19T13:57:51.189Z"}}, {"model": "sessions.session", "pk": "4tiqsukfvkvmles1rxqubbxvk3gjdj4n", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV8ay:sj_3nIzwXc6hNmX80l0djcpplU8iQTc1ctpRGmNVzMY", "expire_date": "2024-02-14T11:17:32.997Z"}}, {"model": "sessions.session", "pk": "5dluz4abld50mu1gkqdul28cr1de7wvu", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syadjld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcRcTg8:1rWNoH:gFp_riVgOdncT_hgTT3oJi6MSY9MK1aqVNjUNOdcXzY", "expire_date": "2024-02-17T21:44:25.658Z"}}, {"model": "sessions.session", "pk": "5gsyaepb5ffo049r2ftws8dkfrbsipb6", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rVQXn:bhrt4vkjVG8_-BC16_F1ASgHz0RBS43n2AK2nqQjpi4", "expire_date": "2024-02-15T06:27:27.062Z"}}, {"model": "sessions.session", "pk": "6aukngtncu5jd3hhvvq4mxkv2b5craew", "fields": {"session_data": ".eJxVjMsOgjAQRf-la9PA1ErHpXu-oZlHK6ihCYWV8d-FhIVu7znnvk2kdRniWtMcRzVXA-b0uzHJM0070AdN92KlTMs8st0Ve9Bq-6LpdTvcv4OB6rDVrTTQeYFGQTG4jECOUAgxXDhn3igLsU_QqbA6H7SVBIRJMYs_m88X82Y49A:1rXEBr:ipwdiPDD4kCgdeUgkpPXn3lPwg8wsazNmCU1Fncz36Q", "expire_date": "2024-02-20T05:40:15.335Z"}}, {"model": "sessions.session", "pk": "6fwxq914g2l1tl2uan0dc2gj987qb8k5", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAMBRcuvcbCI9BqoYmpV0Z_11JutDtPefcF_Nh36rfO61-zuzMFDv9bjGkB7UB8j2028LT0rZ1jnwo_KCdX5dMz8vh_h3U0OuohTAoVCA0SiRjEYGAtNPGWjFJmaYCBaIrYJRFjZFyJJQOcpHi27D3B7IoNrc:1rNPc3:GGTzhbsYw6qD2XhciRKFbw0DKleVZA_4dWSn_JF6S6Q", "expire_date": "2024-01-24T03:50:43.665Z"}}, {"model": "sessions.session", "pk": "6ldp77deuadqp9rxdtzk11l9brg90htw", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGlnxd2NKes5grb1rHECOFCcV4u4QKQW0b2beS0Tc1hq3zkucSJyFFqffLWF-cNsB3bHdZpnnti5TkrsiD9rldSZ-Xg7376Bir98asmE1jLbYAt6BhjJqNtmjUjQ48kQcgrUGiLRCY1Lx6LJyGlwqbIN4fwDVBDeu:1rWvaz:-RSG2ZXpRGOCYQdWLZBrlr0WR4W6EYjVWLjD_oUe4hM", "expire_date": "2024-02-19T09:48:57.660Z"}}, {"model": "sessions.session", "pk": "6oajkec0g1q8wxta3embnhunernv9xi0", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV8U4:3w4riaqjyFRN4evHr85twThRU_HIRsiVcJ-WGNCVquA", "expire_date": "2024-02-14T11:10:24.991Z"}}, {"model": "sessions.session", "pk": "6p8qi5s6432gh4xmnqfdonn5zhyeo13h", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwUm:1bxack4Nt24U8h0K7zDP1us6SthLPWJcAImHjr5KL3k", "expire_date": "2024-02-19T10:46:36.523Z"}}, {"model": "sessions.session", "pk": "78eunvre6byt2lehhlkt75zochptok2k", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV7qp:EeNw6ZK2HMESwpR4aL7NZZLBWInogFJ3w1ANJSoQCJA", "expire_date": "2024-02-14T10:29:51.411Z"}}, {"model": "sessions.session", "pk": "7dylsalkbayk156ozdq8ucmuqequ5430", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2pA0LQgu3XsG0g2NjBpI5rMy3l1JZqHbV1XvpSJta43bInOcsjorow6_G1N6SBsg36nduk69rfPEeih6p4u-9izPy-7-HVRa6qiLdxbQGculMCFDIFeOwSOeBLI44QToMYWAENB5FmMTfCPrJUNR7w_mCDe-:1rWzRU:KAJEHqb1DgjqmI8ssAnSUcJ2Lv1GkZ4PTA9q7j9Y0N4", "expire_date": "2024-02-19T13:55:24.338Z"}}, {"model": "sessions.session", "pk": "7js4ijsnz38eqjquhwry2q3m174tr193", "fields": {"session_data": ".eJxVjEsOwiAUAO_C2hB4_IpL9z0DeQ-oVA0kpV0Z725IutDtzGTeLOCxl3D0vIU1sSsDdvllhPGZ6xDpgfXeeGx131biI-Gn7XxuKb9uZ_s3KNjL2JokszNEQgs_oXEahLJACpeYM6BbQFjrCJSfSICVEmM0Ahw48lob9vkCxpI2yg:1rX0bn:6yjiUCMpDcJfjpcAmVlop7u03Rn98k0tGR1RcFTtJX4", "expire_date": "2024-02-19T15:10:07.212Z"}}, {"model": "sessions.session", "pk": "80ci5xb4i8xv1n36wmqlqtosfblfybb3", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rOJhS:N3toDFtw8-fgyt0AOiaGHvLUG3NQeIqOIdmEXhhJoUI", "expire_date": "2024-01-26T15:44:02.694Z"}}, {"model": "sessions.session", "pk": "82g38171q5ia3vayfo3t88c3fbjrhamx", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAMBRcuvcbCI9BqoYmpV0Z_11JutDtPefcF_Nh36rfO61-zuzMFDv9bjGkB7UB8j2028LT0rZ1jnwo_KCdX5dMz8vh_h3U0OuohTAoVCA0SiRjEYGAtNPGWjFJmaYCBaIrYJRFjZFyJJQOcpHi27D3B7IoNrc:1rNGDu:KQIVCAJll-RTRZ_Ch2azy3WXpZv4dD1rlqJj9cQ4Tpo", "expire_date": "2024-01-23T17:49:10.032Z"}}, {"model": "sessions.session", "pk": "89cb13eqz16h9nntqqezjbk52jags4uj", "fields": {"session_data": ".eJxVjE0OwiAYBe_C2hAEasGl-56BfH-VqoGktCvj3W2TLnT7Zua9VYJ1yWltMqeJ1VVZdfrdEOgpZQf8gHKvmmpZ5gn1ruiDNj1UltftcP8OMrS81ejZRjB0JkMuBLFIHrET6gJHi5FIjJjYX2hDrufo_OgDWjMGcOhAfb4FtTi3:1rWwTf:VmvtVM0-r_9oTAJQ9p1gSyWpduwMnJkXpFD0SU4bX6w", "expire_date": "2024-02-19T10:45:27.599Z"}}, {"model": "sessions.session", "pk": "8w8l4cq5eylb2ubvl0r4u51ozjs7vz8i", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rVPCi:jC4hOfrDaEKGDynd34yM-hxyzXaXsNP3LM7s93kSv9g", "expire_date": "2024-02-15T05:01:36.380Z"}}, {"model": "sessions.session", "pk": "8yxdy59e8vxdqds4ni0jzzrcsyen68dn", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwh4:ZQZBlhY1hIVSO89SgYoLca6sBnMcsfGZB88vVLO6zEE", "expire_date": "2024-02-19T10:59:18.144Z"}}, {"model": "sessions.session", "pk": "99qx7lpzjc4pbe68k1u2a3zf0gkvw2dc", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syqdnld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcQ2Dg7:1rXbwC:JdWJBg78OLwlmBqsfJef7p9ySbZEuQ4JZvJlzfpMTCU", "expire_date": "2024-02-21T07:01:40.315Z"}}, {"model": "sessions.session", "pk": "9qphnkbgeyfgh0znilhnpay0sjafmmrm", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syadnld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcSCjg9:1rWtjA:dtlfcD2FrWbdcThnZokUwvgjUaXsBCodck6J3xchhN4", "expire_date": "2024-02-19T07:49:16.722Z"}}, {"model": "sessions.session", "pk": "9tcmo9qgaau0f17sljw9ecmt8au4c9ft", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEwvF269xvIwIBUDU1KuzL-uzbpQrf3nHNfLOK2triNssSJ2JkBO_1uCfOj9B3QHftt5nnu6zIlviv8oINfZyrPy-H-HTQc7VtXcAkEESkIVgYJmBFTBqWNMdpnUZyxykuvkiYXqqhIUlZLFnQGLdj7A9iuN2A:1rX04P:o0PYjRgqe8fo_BvS2zSnqHg2b6XHSqzN0zyR5eKm8LE", "expire_date": "2024-02-19T14:35:37.956Z"}}, {"model": "sessions.session", "pk": "9ybqxlj7ygtyjpy3q9gws0na9zkc21z0", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCYUmBcuvcMZGBAqoYmpV0Z765NutDtf-_9lwi0rTVsPS9hYnEWIE6_W6T0yG0HfKd2m2Wa27pMUe6KPGiX15nz83K4fweVev3WZixoLSkPg0ccE2UdbTSoSlLgkFnngTmDAU3eF0_GaWcAo9GJUJN4fwDQ8Dd6:1rWxrA:n_3gKtfE_35fjA7oBVuF5YoZqibt5Pj1B0Ocl7lh-48", "expire_date": "2024-02-19T12:13:48.877Z"}}, {"model": "sessions.session", "pk": "a9hkp53u2obm4iq27g2yo652zyjt297t", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syzy6_WwR8pnoAekC9N46trssc-aHwk3Y-NUqv2-n-HRToZa8VoUOPNpLKOKhRWGdFBDMm7UkOYJTQXrg8RqEkQs5S5kTWUXJmh5p9vu88OA4:1rV4Bl:rYB_8dklJCceOl8r2N1-CJ6GdSl_NOMjMCdLRtHcWPA", "expire_date": "2024-02-14T06:35:13.831Z"}}, {"model": "sessions.session", "pk": "acrp2xej99rddjge6qvaucsr0xm3sx24", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAQB8u3fsNZJgZpGpoUtqV8d-1SRe6veec-1IRt7XErckSJ1Zn5dTpd0tID6k74DvW26xprusyJb0r-qBNX2eW5-Vw_w4KtvKtByBiyJQsWRcSsBD35CCPkigTgB-N92jRee7Zs5jODQEYqAM2Jqj3BxKoOHc:1rWw2T:29JwYmctSlx4OI07vg8JrRUcERYQLCscezXaF8mqsZw", "expire_date": "2024-02-19T10:17:21.447Z"}}, {"model": "sessions.session", "pk": "aqnelh0ihz3iynbpqj7r2czkce76v9ib", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV7kc:2pieOqgnhb4bGzyw60k4WV3uyieLufeHeI9J5HM1QIE", "expire_date": "2024-02-14T10:23:26.097Z"}}, {"model": "sessions.session", "pk": "b4531917z72b4uva7g8ht93g6ug7a1x0", "fields": {"session_data": ".eJxVjMsOgjAQRf-la9PA1ErHpXu-oZlHK6ihCYWV8d-FhIVu7znnvk2kdRniWtMcRzVXA-b0uzHJM0070AdN92KlTMs8st0Ve9Bq-6LpdTvcv4OB6rDVrTTQeYFGQTG4jECOUAgxXDhn3igLsU_QqbA6H7SVBIRJMYs_m88X82Y49A:1rXECr:zYspF7xOBgU76I1y7uvM1Jguff_jajhvZMIZYVyr5bA", "expire_date": "2024-02-20T05:41:17.853Z"}}, {"model": "sessions.session", "pk": "b6tzz6mf0ilw8gm8yk3ymn648hrxxw43", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rOJlX:33X1U1yvdduAiBz85-kEh07kjxZBGIG3KaoercDLUL4", "expire_date": "2024-01-26T15:48:15.864Z"}}, {"model": "sessions.session", "pk": "bmt1tmyjcp6gypi5rep3dx6jljivcjq4", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syadjld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcRcTg8:1rWtoP:bPTFLh-_BBsWB58NW8Yx7uuMcN6cxjnhL1Lc5NwZJgs", "expire_date": "2024-02-19T07:54:41.527Z"}}, {"model": "sessions.session", "pk": "buh743wq2fe90fh1w6jhan9ucauov8i5", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syqdjld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcQPzg6:1rVQlp:NMF6Uh25L1RQ3gtURWdJJA637xQEbEAMU2a1hR69k4I", "expire_date": "2024-02-15T06:41:57.702Z"}}, {"model": "sessions.session", "pk": "bwc6os5vyxp2a1ui6h12oqqrfcp3ffcq", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV9b6:FGdXCM-0aoNzwlSMlyf3QJpA9Ccrs8fGz8_He3GezBM", "expire_date": "2024-02-14T12:21:44.739Z"}}, {"model": "sessions.session", "pk": "c36bhek3yex162lalywfmqlif8zvz6us", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rVsXc:aQZEOPbmTh01SliEe7H-LL-OtlqRY-QWUmAvIOEpJgM", "expire_date": "2024-02-16T12:21:08.995Z"}}, {"model": "sessions.session", "pk": "c68g6ukm0quo8pu1ot6gikmr23poxnoj", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hCaVhpcuvcMk-YnowaSYWZlvLuSzELzdq8q9RITb2uZtp6WaY7iLECJw-_pOTxSHSTeud6aDK2uy-zlUOROu7y2mJ6X3f0LFO5ldCMa57MjzQ5QGbCnrFVISGAMKNY6Wzo6679zkMgypYDOU8CAQFa8P9llNvo:1rXIKf:LkzFdafRWFrMvwzH3PPCukfRS30xrVnnv1neMRauK5Y", "expire_date": "2024-02-20T10:05:37.205Z"}}, {"model": "sessions.session", "pk": "c7xmlflrtk5ggprq9tzpqwillghiijvk", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rPabK:hJXTI8g1gc02Mecbf764bzHO7-cvLOFcFcqXO5qx_1M", "expire_date": "2024-01-30T03:58:58.666Z"}}, {"model": "sessions.session", "pk": "cglijxu950mxtism9ztt4ugwptzowv5r", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syzy6_WwR8pnoAekC9N46trssc-aHwk3Y-NUqv2-n-HRToZa8VoUOPNpLKOKhRWGdFBDMm7UkOYJTQXrg8RqEkQs5S5kTWUXJmh5p9vu88OA4:1rV3bh:971UR1hfrHQaLzyeFoKXyr4WaM8nfMZ0zPlWo4J6YcE", "expire_date": "2024-02-14T05:57:57.786Z"}}, {"model": "sessions.session", "pk": "ck2lif0csurlmbn255vd9ue4k7p1p798", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syqdnld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcQ2Dg7:1rXDnn:vBiFhGam_r1FvcFNbZ1l1I5JimAgAdJtWMAIJE3YKyw", "expire_date": "2024-02-20T05:15:23.935Z"}}, {"model": "sessions.session", "pk": "couopdx3p4a83m4yyz6ywfptfgr49e8s", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rPwHb:Vev2wMzN-LvST6cVOjtFVqEjzlBKxjwG6AoL0tMNuYY", "expire_date": "2024-01-31T03:08:03.191Z"}}, {"model": "sessions.session", "pk": "ctj3gyogxxdftv3nwwr63qxyvcjoot6b", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rUoXg:sPdxLxDPPcGYBWAvUrTVpgyDzLz4a9BmHAhU7dAaCxk", "expire_date": "2024-02-13T13:52:48.056Z"}}, {"model": "sessions.session", "pk": "cv3j7yye1p5iljfhvfiq4hl3nngl2zl7", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2pA0LQgu3XsG0g2NjBpI5rMy3l1JZqHbV1XvpSJta43bInOcsjorow6_G1N6SBsg36nduk69rfPEeih6p4u-9izPy-7-HVRa6qiLdxbQGculMCFDIFeOwSOeBLI44QToMYWAENB5FmMTfCPrJUNR7w_mCDe-:1rWzTV:PVS486L3a12AGKQ441B9P5lT92MfMCZhMH7s9ZtFOAM", "expire_date": "2024-02-19T13:57:29.828Z"}}, {"model": "sessions.session", "pk": "cyss84vg00vb01w1r2altqqwpz5q14tk", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pApRRhcuu8ZyDCAVA0kpV0Z765NutDtf-_9l_C0rcVvPS1-juIilDj9boH4keoO4p3qrUludV3mIHdFHrTLqcX0vB7u30GhXr51QDARyZmUsmOHEHQeyGo8u2yARkbDwGNEi0xAObhsE1iV1WAZWYv3B_QYOE4:1rNZr4:wlDOakaEV3RWAoX6XUGSUUnXeeOaMWWH3u0nBAR0bWI", "expire_date": "2024-01-24T14:46:54.706Z"}}, {"model": "sessions.session", "pk": "czmuwwxhy7q3dmn7f4b4hsyz63xrgxrb", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hCaVhpcuvcMk-YnowaSYWZlvLuSzELzdq8q9RITb2uZtp6WaY7iLECJw-_pOTxSHSTeud6aDK2uy-zlUOROu7y2mJ6X3f0LFO5ldCMa57MjzQ5QGbCnrFVISGAMKNY6Wzo6679zkMgypYDOU8CAQFa8P9llNvo:1rXE2p:ksVYoXiIZhje88Qm5HIfhZrbL-FSXGsmhs68Rd7PpL0", "expire_date": "2024-02-20T05:30:55.756Z"}}, {"model": "sessions.session", "pk": "d74gwlihye3eu6mhoomm6wyz95gjfqq0", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAMBRcuvcbCI9BqoYmpV0Z_11JutDtPefcF_Nh36rfO61-zuzMFDv9bjGkB7UB8j2028LT0rZ1jnwo_KCdX5dMz8vh_h3U0OuohTAoVCA0SiRjEYGAtNPGWjFJmaYCBaIrYJRFjZFyJJQOcpHi27D3B7IoNrc:1rNQl7:ZZDTMLGMxl3uG7cinsJTkbm66Qz_un5-nb95sDr4TfI", "expire_date": "2024-01-24T05:04:09.114Z"}}, {"model": "sessions.session", "pk": "da1g1jdy0g4272hxtx492glwoo9pr92x", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syzy6_WwR8pnoAekC9N46trssc-aHwk3Y-NUqv2-n-HRToZa8VoUOPNpLKOKhRWGdFBDMm7UkOYJTQXrg8RqEkQs5S5kTWUXJmh5p9vu88OA4:1rUrSp:9TVQtPRVD2mji8rUCph79V4VE0lcQWpdwGgx5L6buf4", "expire_date": "2024-02-13T16:59:59.013Z"}}, {"model": "sessions.session", "pk": "digln38vo0161zqr3c38jy31r6nyyrne", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rXBHG:HBpy9ffuBvq02b-_DQpkSnJ44aKSisTt71GCMwgD9f4", "expire_date": "2024-02-20T02:33:38.181Z"}}, {"model": "sessions.session", "pk": "dkzpr36seaj7w7743zwapnuydpm0c74k", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rUoYl:w5wTnBKwpqXVKKKLSYcDVDUclk2hjmSreKDezNSmkdc", "expire_date": "2024-02-13T13:53:55.056Z"}}, {"model": "sessions.session", "pk": "dq2119n9c1g52loggdynstonfwecy738", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rRqsB:z2EPvtw1JhPu2TUXyeqYsObchxjDIUxjQfdGm2IM1aA", "expire_date": "2024-02-05T09:45:43.569Z"}}, {"model": "sessions.session", "pk": "dwirgse5z14pwzurp6bs6pzzn1sghz64", "fields": {"session_data": ".eJxVjMsOgjAQRf-la9PA1ErHpXu-oZlHK6ihCYWV8d-FhIVu7znnvk2kdRniWtMcRzVXA-b0uzHJM0070AdN92KlTMs8st0Ve9Bq-6LpdTvcv4OB6rDVrTTQeYFGQTG4jECOUAgxXDhn3igLsU_QqbA6H7SVBIRJMYs_m88X82Y49A:1rXCpS:ThZG5i4yjqKuazP_vKJEZ-p1wv5iUdQ7TLwdsVkhPpU", "expire_date": "2024-02-20T04:13:02.707Z"}}, {"model": "sessions.session", "pk": "e32ykkkqyg3f2vjx4n3vqttn7eom9i46", "fields": {"session_data": "e30:1rUIMF:6UY7lty966i7KkDRAvo7tO5Sc4rFh9vXT6qdq2cDwjw", "expire_date": "2024-02-12T03:30:51.339Z"}}, {"model": "sessions.session", "pk": "f5pg9y2inngkky7yv0fmss7ng8rb7ywn", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2pA0LQgu3XsG0g2NjBpI5rMy3l1JZqHbV1XvpSJta43bInOcsjorow6_G1N6SBsg36nduk69rfPEeih6p4u-9izPy-7-HVRa6qiLdxbQGculMCFDIFeOwSOeBLI44QToMYWAENB5FmMTfCPrJUNR7w_mCDe-:1rWzXm:g4Odtv6d6c9OmD15ejgNyEKEZs4LRfkIMOBqk4Z6f_w", "expire_date": "2024-02-19T14:01:54.676Z"}}, {"model": "sessions.session", "pk": "ff2cz4nqvz4j2cti6s2hwd9k7950jj1p", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwn5:wBIVK6hwgyIWwlHlukqGEACqkysxEiUGZwWL0o4BQ4k", "expire_date": "2024-02-19T11:05:31.790Z"}}, {"model": "sessions.session", "pk": "g2n90xmb763xeh71zntpt6pthy9n3t1a", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGlm2g3-U9DmDtbte4wBypDipEHeHSCmgfTPzXiLBtta0dV7SlMVFaCVOvyMCPbjtJN-h3WZJc1uXCeWuyIN2Oc6Zn9fD_Tuo0Ou3hsCxlME5jRzJ5KINZqTIIQB5jwaGTBotKgvRkCJNluxZq-J8dIXF-wM6Izkg:1rSdV4:DRnYGAEaX4kX4dJbov5USjPQkneiqVr9ub-OLii7ftE", "expire_date": "2024-02-07T13:41:06.452Z"}}, {"model": "sessions.session", "pk": "gan94b2oftvyymfl5kyvbx55549tlr6j", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV7YZ:2vkLCalhKG4q64AX6MK5vqpPnwjWXS-TAT_Jhn4h_-o", "expire_date": "2024-02-14T10:10:59.822Z"}}, {"model": "sessions.session", "pk": "gkfd5tvk4nu8xawt6mr4alpfdpbq1r4h", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAQB8u3fsNZJgZpGpoUtqV8d-1SRe6veec-1IRt7XErckSJ1Zn5dTpd0tID6k74DvW26xprusyJb0r-qBNX2eW5-Vw_w4KtvKtByBiyJQsWRcSsBD35CCPkigTgB-N92jRee7Zs5jODQEYqAM2Jqj3BxKoOHc:1rWw1s:omRwfY4SEOIwpIAHpVWalbTPZVVpLFJEN2_R-W7szig", "expire_date": "2024-02-19T10:16:44.548Z"}}, {"model": "sessions.session", "pk": "gr0fojkfv6qe8lrjravc8ctlv36x645q", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV7ZG:0HAkn3ZM3s_vN-G4NeTtS8yZwzhX15DyWmtUoFZmHNw", "expire_date": "2024-02-14T10:11:42.063Z"}}, {"model": "sessions.session", "pk": "gt7rkmauzay4og4si10cjx5p8koi65dt", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rVQaF:7DWKc7YfnEsWxk-NGe9lLz41KRiXC0WuDTph-r3c-NY", "expire_date": "2024-02-15T06:29:59.519Z"}}, {"model": "sessions.session", "pk": "hdwd1ykads3e2yzz8xk4h9zys76r5768", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAMBRcuvcbCI9BqoYmpV0Z_11JutDtPefcF_Nh36rfO61-zuzMFDv9bjGkB7UB8j2028LT0rZ1jnwo_KCdX5dMz8vh_h3U0OuohTAoVCA0SiRjEYGAtNPGWjFJmaYCBaIrYJRFjZFyJJQOcpHi27D3B7IoNrc:1rNPyl:13N-HSVSXogKYbEp2CJ_3wQnwHWhTHAjFZWq2KoCaF0", "expire_date": "2024-01-24T04:14:11.405Z"}}, {"model": "sessions.session", "pk": "hq3giwwykevg7wvgzgso19wkncbuok23", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAMBRcuvcbCI9BqoYmpV0Z_11JutDtPefcF_Nh36rfO61-zuzMFDv9bjGkB7UB8j2028LT0rZ1jnwo_KCdX5dMz8vh_h3U0OuohTAoVCA0SiRjEYGAtNPGWjFJmaYCBaIrYJRFjZFyJJQOcpHi27D3B7IoNrc:1rNPuJ:5yl8SN_ZJxjtX82yskpR5TL1res3WTMt3FI7fx5I-Gk", "expire_date": "2024-01-24T04:09:35.148Z"}}, {"model": "sessions.session", "pk": "i1voqt4barcmn8oxm9v3v19ai0zu34vk", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syqdnld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcQ2Dg7:1rXDYq:2z8uy5CMpaHSLjep4o0MgFXjKFf3XuNEKsww4ePuHVU", "expire_date": "2024-02-20T04:59:56.133Z"}}, {"model": "sessions.session", "pk": "i36ivdxh7tw7afrvndlrrmy9xbza86kt", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV0fl:fuzUZlLA0wBPULrAT7789GNgDd3eCmgHaH-3Tmjc6x4", "expire_date": "2024-02-14T02:49:57.548Z"}}, {"model": "sessions.session", "pk": "i5n72zkcbypkx3s82au4e59ra66qtmwy", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHMQKbg0r3fQIaXVA0kpV0Z_12bdKHbe865L-F5W6vfRl78nMRZoDj9boHjI7cdpDu3W5ext3WZg9wVedAhrz3l5-Vw_w4qj_qtCzq2lMEVBGIyCrVDhlCQdLKqTECOkEuEpJWloAFDNKY4hU7nicX7A8TaNww:1rWuPt:6cTAqRHNnP6nmj5GXCCudM-twMfi8Wbt7bobtvGaB8I", "expire_date": "2024-02-19T08:33:25.502Z"}}, {"model": "sessions.session", "pk": "i6v9fbo8efmrne9z2t088tazps2vgx7r", "fields": {"session_data": ".eJxVjMsOgjAUBf-la9PcPqDUpXu-gdxHEdS0CYWV8d-FhIVuZ-actxpwW6dhq2kZZlFXZdXllxHyM-VDyAPzvWgueV1m0keiT1t1XyS9bmf7dzBhnfZ1SzCOxnfC0VHbATgQ5yIiNyFJtIzG2xC6McKOvATD4MlQQGjYWFSfL98DN7Y:1rMr4U:7RuLDpbuHXAmAvI3OfE6_ilo6kOtIBlqogEkk6oAnzA", "expire_date": "2024-01-22T14:57:46.308Z"}}, {"model": "sessions.session", "pk": "i92bqs47x1qbduqfw17oq2cvfl9ci0cp", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwnN:0qS8huQQF1gQ4wAy-NJXVAuY5a4N5qDMJLWO-r4Uydw", "expire_date": "2024-02-19T11:05:49.247Z"}}, {"model": "sessions.session", "pk": "iaz9fzrpns9zi6is7fpjd0qkrga3vgfy", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV8QL:_aZHCDL_Na7xqaFbEkMBfv2zouSf6aqmLFfuh0aZgB4", "expire_date": "2024-02-14T11:06:33.947Z"}}, {"model": "sessions.session", "pk": "ihdtwduwwrpq1sult2xe7hn4vvzbl43d", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGln-5OOlpM8ZrF17jQPIluKkQtydREoB1Ujz3sxbeNzW7LfGi5-juAojLr8dYXhyOUB8YLlXGWpZl5nkociTNjnVyK_b6f4dZGx5XzvdkemVUQQ8DmRdb5mUVpiCTbrbAyDZAQIbNUJwgcgCRIuoozHI4vMF1sM4JQ:1rSgNi:SD64Wpo6zR7_psGNSjoY5U3maWfIdjQdxj8N6-9fY5Q", "expire_date": "2024-02-07T16:45:42.806Z"}}, {"model": "sessions.session", "pk": "io7mwm8c0bsu60x1aga3fhh61s7cx8od", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rPyuY:I24Fjbe9hKI0Qdo7Z6TwHLjCWJ5X-zZ0L-HHRbbdykk", "expire_date": "2024-01-31T05:56:26.475Z"}}, {"model": "sessions.session", "pk": "j9qorl9sff2nsps35ygnbco9llngh22q", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwcV:KNefScxajIuPtBm2rKGj9cZ6cApVQDpkOrYWWjmR-T0", "expire_date": "2024-02-19T10:54:35.471Z"}}, {"model": "sessions.session", "pk": "jaega0lxrceufj4nunb5iljcdkxkm5g1", "fields": {"session_data": ".eJxVjEsOwiAUAO_C2hB4_IpL9z0DeQ-oVA0kpV0Z725IutDtzGTeLOCxl3D0vIU1sSsDdvllhPGZ6xDpgfXeeGx131biI-Gn7XxuKb9uZ_s3KNjL2JokszNEQgs_oXEahLJACpeYM6BbQFjrCJSfSICVEmM0Ahw48lob9vkCxpI2yg:1rX0et:xhPaT7FbT6YC60HTfqu7HO9Sfn3dvY2aV1_gtooxa_M", "expire_date": "2024-02-19T15:13:19.353Z"}}, {"model": "sessions.session", "pk": "jngb9ny6z64ukk3rhi83s48ihynl8f05", "fields": {"session_data": ".eJxVjEEOgjAQRe_StWnqtHQ6Lt1zhmaYKYIaSCisjHdXEha6_e-9_zKZt3XIWy1LHtVcDJjT79axPMq0A73zdJutzNO6jJ3dFXvQattZy_N6uH8HA9fhW2PQRIKNj5H6xjOJC2cJPSQISq6Aj6QoziUgcIwkPRL6BIix41jM-wO2bTar:1rUJ1g:XqXvv4XaGtZMOuFd8SBpQc_auwPMa2cilgS78ZjB6d0", "expire_date": "2024-02-12T04:13:40.492Z"}}, {"model": "sessions.session", "pk": "jtybk0oieh8f8nf27oz22g42wzp8dbe5", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hCaVhpcuvcMk-YnowaSYWZlvLuSzELzdq8q9RITb2uZtp6WaY7iLECJw-_pOTxSHSTeud6aDK2uy-zlUOROu7y2mJ6X3f0LFO5ldCMa57MjzQ5QGbCnrFVISGAMKNY6Wzo6679zkMgypYDOU8CAQFa8P9llNvo:1rXJm8:4Hk6txBugjIveXdX5NcqLn4kypWRXozoHVfak7A84ZM", "expire_date": "2024-02-20T11:38:04.979Z"}}, {"model": "sessions.session", "pk": "k0gs8zs7wcc6hqzmghm3ypprcjjdvrcd", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rVXfz:CkgqM1tyxQmj9fd6SAnFgFVr8iEf-U7_STYs-nUz8Wg", "expire_date": "2024-02-15T14:04:23.796Z"}}, {"model": "sessions.session", "pk": "k8lgua0qwt82q4wadkv80tljmywz5k6l", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rVkMl:MCL4U6wII4Hir0FOWhO7Y0T0Tb33nsSxNIFrp-4Anss", "expire_date": "2024-02-16T03:37:23.464Z"}}, {"model": "sessions.session", "pk": "km4xlx0vtm2d9icjb7nwrej0n6sdsf0q", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2pA0LQgu3XsG0g2NjBpI5rMy3l1JZqHbV1XvpSJta43bInOcsjorow6_G1N6SBsg36nduk69rfPEeih6p4u-9izPy-7-HVRa6qiLdxbQGculMCFDIFeOwSOeBLI44QToMYWAENB5FmMTfCPrJUNR7w_mCDe-:1rWzav:yHjeuU8sGBRL9mgsjd5U8v_8L7hQghgZvcmu1nF1SnY", "expire_date": "2024-02-19T14:05:09.385Z"}}, {"model": "sessions.session", "pk": "knlmtdd3qdc20yfidcfwkftaj4yt1xij", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV8hF:YD_Ax3QPnkImSHh7E5C_R2xGeXAxK5jKIuSINYjIEO0", "expire_date": "2024-02-14T11:24:01.523Z"}}, {"model": "sessions.session", "pk": "kpcbwgn22ognrrv180xr23369vba0ixz", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV9DG:adJumaH856kBrfq4LuucU04cjf0ZPLev_fNQHJgL5CM", "expire_date": "2024-02-14T11:57:06.041Z"}}, {"model": "sessions.session", "pk": "kyyfkmqe7k2nzy04vgl3vlhb1my1etui", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rWj6h:GYnpR_oU0n0VxG6VEyc7zDAtJ9XgcXt-HPqBGHnxcjM", "expire_date": "2024-02-18T20:28:51.717Z"}}, {"model": "sessions.session", "pk": "kzjgiuhxj5y5c50bk3iuneh2wty6t77q", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV8kX:Mk2ZQ00v5rxeZwJg7Gy0PEfiCeuQRVpqcQnzLTTeKCc", "expire_date": "2024-02-14T11:27:25.221Z"}}, {"model": "sessions.session", "pk": "l1h9nflferwwcnwc5jacvmoxe46wqnfw", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rWNnZ:f1xiM-i4dn_O1QktGvpYh364Ynd02LCGK6iBGVkV6Gk", "expire_date": "2024-02-17T21:43:41.867Z"}}, {"model": "sessions.session", "pk": "l2kcwfi0np0sbrfsastki0gpsmiebmad", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rVBmG:Hdx9Yi7Wibk_oUWtuJZ5V8i-XKM1Jtg7CkHgsBo-3O0", "expire_date": "2024-02-14T14:41:24.250Z"}}, {"model": "sessions.session", "pk": "l3xgp7jamp5kmfd3cj4xyls3vmxbxqrg", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAQB8u3fsNZJgZpGpoUtqV8d-1SRe6veec-1IRt7XErckSJ1Zn5dTpd0tID6k74DvW26xprusyJb0r-qBNX2eW5-Vw_w4KtvKtByBiyJQsWRcSsBD35CCPkigTgB-N92jRee7Zs5jODQEYqAM2Jqj3BxKoOHc:1rWw0h:9Bra0rZeZNYz8kc0JePtVdMFvlr1ShxnT9QTyswMqlY", "expire_date": "2024-02-19T10:15:31.394Z"}}, {"model": "sessions.session", "pk": "laghka6udgdw1gmo5h6050vp1vjs7xdw", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hCaVhpcuvcMk-YnowaSYWZlvLuSzELzdq8q9RITb2uZtp6WaY7iLECJw-_pOTxSHSTeud6aDK2uy-zlUOROu7y2mJ6X3f0LFO5ldCMa57MjzQ5QGbCnrFVISGAMKNY6Wzo6679zkMgypYDOU8CAQFa8P9llNvo:1rXJvQ:hiyppJ4Gj6SQpq0eDwUmTCgfMuq-qbP4j3fQrZ9tXVU", "expire_date": "2024-02-20T11:47:40.601Z"}}, {"model": "sessions.session", "pk": "lggwpa0qex90u21u62nr53zujotbozqt", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rWnJj:Usd_HaVfWyPWSH2z45jKI5TFgDNEiL8tT8rpQOrJQvQ", "expire_date": "2024-02-19T00:58:35.147Z"}}, {"model": "sessions.session", "pk": "m6jgxi5fbov2kdnvmjocifublsb64266", "fields": {"session_data": "e30:1rUIit:5v1QTyQDKEelF6nK7H8VS6Bb-2cgVFRbndmiYk-5GM4", "expire_date": "2024-02-12T03:54:15.883Z"}}, {"model": "sessions.session", "pk": "ma3aushlr4fyzx92xpqds6nsesawo7dn", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syzy6_WwR8pnoAekC9N46trssc-aHwk3Y-NUqv2-n-HRToZa8VoUOPNpLKOKhRWGdFBDMm7UkOYJTQXrg8RqEkQs5S5kTWUXJmh5p9vu88OA4:1rV2bP:AGb3Nkn1JlLB8CCLo_sTqLvhGPBRDrZToHKbPCjwlPI", "expire_date": "2024-02-14T04:53:35.010Z"}}, {"model": "sessions.session", "pk": "mn1dt8yic5nno3hzhofaxfmbm3ek7w4h", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAMBRcuvcbCI9BqoYmpV0Z_11JutDtPefcF_Nh36rfO61-zuzMFDv9bjGkB7UB8j2028LT0rZ1jnwo_KCdX5dMz8vh_h3U0OuohTAoVCA0SiRjEYGAtNPGWjFJmaYCBaIrYJRFjZFyJJQOcpHi27D3B7IoNrc:1rNEso:fVYhPqcg8frFEJ44xg2acUZRpW1bd1x06v_PbNZptwU", "expire_date": "2024-01-23T16:23:18.752Z"}}, {"model": "sessions.session", "pk": "mnsur8ujsoix4qr45exj4sfjmb19koem", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syqdnld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcQ2Dg7:1rXQWo:xe5UL4ImOxU7SMIwKHBV_x7OUJo6LW9KMFX3rdNBgnY", "expire_date": "2024-02-20T18:50:42.993Z"}}, {"model": "sessions.session", "pk": "mtzs62ml3md854bsjejrhk2z4cquiy36", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syzy6_WwR8pnoAekC9N46trssc-aHwk3Y-NUqv2-n-HRToZa8VoUOPNpLKOKhRWGdFBDMm7UkOYJTQXrg8RqEkQs5S5kTWUXJmh5p9vu88OA4:1rV2jq:tJRlqDoJl6uqtvBV5yhXOECFVjGJmTMJu3S_pR1AHeY", "expire_date": "2024-02-14T05:02:18.511Z"}}, {"model": "sessions.session", "pk": "mv4gh7rghodqsoy8iwmv2blsw1lgmmsg", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syzy6_WwR8pnoAekC9N46trssc-aHwk3Y-NUqv2-n-HRToZa8VoUOPNpLKOKhRWGdFBDMm7UkOYJTQXrg8RqEkQs5S5kTWUXJmh5p9vu88OA4:1rWzOz:ygnBJ48cMbRwmWhh6KIhOeXUHuaoR0RSyu_gLN4xTaA", "expire_date": "2024-02-19T13:52:49.591Z"}}, {"model": "sessions.session", "pk": "mzzb3n3hjubnmhzdqjyg0bzhlnnjbzej", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwW9:RjWs0j0JVu_-SyZwOC1TjGv40jPObO6vt86rru7adjs", "expire_date": "2024-02-19T10:48:01.011Z"}}, {"model": "sessions.session", "pk": "n4j6iuc8kdgf0rj32767nz92yrtypzld", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV8TA:EYtcoZ7UkjUSdpUpaEVs9ct448bQBPLrmx8TsJja72U", "expire_date": "2024-02-14T11:09:28.848Z"}}, {"model": "sessions.session", "pk": "n7rarxi5t9bkpdsinfatf54izb41u59v", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pCh0AAu3XsGMsxMpWogKe3KeHdt0oVu_3vvv1TCbS1p67KkmdVZRXX63TLSQ-oO-I711jS1ui5z1ruiD9r1tbE8L4f7d1Cwl2_tzWgDeufBQ4DRRnJC7IxEBGOJo0yBHWVHHCALwzRIBMrZ40AWQL0_1VA4Jg:1rSBlW:xnE9SSuRvXDGba_tvgjXQdmKKN3B2y8DTA4wrZ15viM", "expire_date": "2024-02-06T08:04:14.317Z"}}, {"model": "sessions.session", "pk": "n8objs97pidbc8h97w1tz4uanmifsgeb", "fields": {"session_data": ".eJxVjLsOwjAMAP8lM4pS3DzKyM43RI7tkAJKpaadEP-OInWA9e50bxVx30rcm6xxZnVRZ3X6ZQnpKbULfmC9L5qWuq1z0j3Rh236trC8rkf7NyjYSt8i-2xGBA_BwGQcuBGJjLdGyDriwOCttWFwGSZJIQNLygOJ4SCQ1ecLzuQ4Cg:1rWwQh:6uUgDAGVn3-6XZkjaKLNA5eDHolqB4U3suU-JI5fukg", "expire_date": "2024-02-19T10:42:23.434Z"}}, {"model": "sessions.session", "pk": "ng8c6i382peknt6spexk4z3zer263ibc", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syzy6_WwR8pnoAekC9N46trssc-aHwk3Y-NUqv2-n-HRToZa8VoUOPNpLKOKhRWGdFBDMm7UkOYJTQXrg8RqEkQs5S5kTWUXJmh5p9vu88OA4:1rUpR2:KNzeXROQahAbXN2nGy4quZ4s-6EMF19sXZDGrlIpLpk", "expire_date": "2024-02-13T14:50:00.722Z"}}, {"model": "sessions.session", "pk": "nki51vg8ge9euguxg1v1v992tth370z2", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV7nu:JwRuzGzVQpOJMZwVYutAT3z_jt4cHvPRRQfvse6U0E4", "expire_date": "2024-02-14T10:26:50.620Z"}}, {"model": "sessions.session", "pk": "o1tjd2kt3y6epe3hoaijh1gy1bf4ex9a", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV8BZ:BYOmvmjTsbP18PfYyqb9pC_JE-jduBX5-q3Dblz1CUk", "expire_date": "2024-02-14T10:51:17.143Z"}}, {"model": "sessions.session", "pk": "o1yentx3f4jobrk44ow8w6mv11wvgr6v", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-ZW1T0nMGa9fe4ABypDipEHeHSCmgfTPzXiLhtta0dV7SVMRZGHH63Qjzg9sOyh3bbZZ5busykdwVedAur3Ph5-Vw_w4q9vqtlSs6giOfdYiI4IfII6EzQKAU2GCBiwKy3iEYJBuNHmyImgkwjyjeH8iON20:1rXbFK:Jo8sv3DLop6584_AaVx7Yd3r3divOkXIT-zlhWVnLk8", "expire_date": "2024-02-21T06:17:22.099Z"}}, {"model": "sessions.session", "pk": "obvoe3jdnes73fg9vt3usadbp16abaxc", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rUnfH:Wma1gaDqUFjNyrz14eJAb3EpQUCLWoDrnOXvahNh2uo", "expire_date": "2024-02-13T12:56:35.305Z"}}, {"model": "sessions.session", "pk": "ogbl5zo9snoxhp5u492sq2p8rxukfslr", "fields": {"session_data": ".eJxVjE0OwiAYBe_C2hAEasGl-56BfH-VqoGktCvj3W2TLnT7Zua9VYJ1yWltMqeJ1VVZdfrdEOgpZQf8gHKvmmpZ5gn1ruiDNj1UltftcP8OMrS81ejZRjB0JkMuBLFIHrET6gJHi5FIjJjYX2hDrufo_OgDWjMGcOhAfb4FtTi3:1rWwTv:cnr-4ShDaBCGOOZ1Olxw6eGpJ7wpakYlNnAoqaqrZmE", "expire_date": "2024-02-19T10:45:43.724Z"}}, {"model": "sessions.session", "pk": "ok1gbdnf70mxy4rkurjnuu43e2rgm1mb", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV7dj:6PMGeHOOfKcPQFYxpccnUj2qPdb_TfK-AGAXH8t7EQ4", "expire_date": "2024-02-14T10:16:19.510Z"}}, {"model": "sessions.session", "pk": "oqvr94w69yzpxbap5czlgg4ip16xdmab", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rWM5P:1FJMkfXkudkqi9i9Tsyb1ySkQQt762JM_Kk1i2OVunc", "expire_date": "2024-02-17T19:53:59.559Z"}}, {"model": "sessions.session", "pk": "p4hbkx88ezh7srpva0qjm04itb26faz4", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pDpQAq6dO8ZCMwMUjWQlHZlvLtt0oVu_3vvv1WI61LC2mUOE6uLQnX63VKkp9Qd8CPWe9PU6jJPSe-KPmjXt8byuh7u30GJvWw10IjiMbNBNJJJGBzw6NFZgHRmEJtp40mE2IKgOPbkE6MZBgtWfb71QjhQ:1rWtyI:oYhuzw3o2pU-8NJ8xAg2myi2NFGi40UKz0ZbzCIByFs", "expire_date": "2024-02-19T08:04:54.816Z"}}, {"model": "sessions.session", "pk": "pn78pu13ouo2m2a1vx18wrqoq35qddzb", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syqdnld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcQ2Dg7:1rXDnU:uTCjVCYywVlabwv57FRPVdWX5RALyFb_3b59bVoij1w", "expire_date": "2024-02-20T05:15:04.817Z"}}, {"model": "sessions.session", "pk": "ppmkccpcx0tnommdgsftxe6vxscth2an", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgTEWX7nuGZoYZpGogKe3KeHfbpAvd_vf-e6sR1yWPa5N5nFhdlVOn340wPqXsgB9Y7lXHWpZ5Ir0r-qBND5XldTvcv0DGlrd3pLO1yWEXAFB6YPIdg7MXI8k7QrG-N162IAKCSUYgsEdOloJzwOrzBfDoOG8:1rNBpm:vbu67HRlM5CPjZghcQpjcNnxgqBOxo4BBWRncceufZw", "expire_date": "2024-01-23T13:07:58.659Z"}}, {"model": "sessions.session", "pk": "prs2zhyr2d8mn93yrdvo5vb6vjqlgbik", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwXu:nlUNn4JUojDm3kq1JzYpWoJKSQchl1QW8abRdyg8XsU", "expire_date": "2024-02-19T10:49:50.482Z"}}, {"model": "sessions.session", "pk": "py5lz0rza6xzxgnis6ufqmgsgwhkm1fb", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV8my:cnprJ5MK9biBTUCDSOUHzCoxZHXvRVhVgKM49I5dc6A", "expire_date": "2024-02-14T11:29:56.627Z"}}, {"model": "sessions.session", "pk": "q24kppusbile0bxw8gyx3h1dazktv6as", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rVPZW:9n4edB1WzHE1FeJJiRQFFCW4pbeIZ72GZwtaaT3_diw", "expire_date": "2024-02-15T05:25:10.192Z"}}, {"model": "sessions.session", "pk": "q5n5zlhi65fltno2optkjx6wn0db3tl2", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSE8RqAu3fsNhGGmUjWQlHZl_HfbpAvd3nPOfYuY1qXEtfMcJxIXYcTpd8OUn1x3QI9U703mVpd5Qrkr8qBd3hrx63q4fwcl9bLVidkrxXaAbAyH4ALiaNFYAKSBwIEfHVvG5AwQqjOh3jCSJx-U1uLzBfJAOCY:1rWy52:Za556AKHejs_Yyjsj6PFwDlQOA8z_yO3O2EE9htlJy4", "expire_date": "2024-02-19T12:28:08.345Z"}}, {"model": "sessions.session", "pk": "qxzfr25d4jk5i0qdbua6tgm69xxnxtn6", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syadjld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcRcTg8:1rWtio:qmFH3fc1HW4Zf8IqB6kUINP5msbFlIaxPmk0Hf651KE", "expire_date": "2024-02-19T07:48:54.262Z"}}, {"model": "sessions.session", "pk": "r9vjhnjayp8lbwmzdglhqi9rxdruovly", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syadjld4yAz1QPQg-o98ax1XWZIz8UftLOp0bpdTvdv4MCvey1InTo0UZSGQc1CuusiGDGpD3JAYwS2guXxyiURMhZypzIOkrO7FCzzxcRcTg8:1rWtk2:mW-whru8Y5BZywf-cvgMSSZ7Rm1zyMi6irv3GBbmuGI", "expire_date": "2024-02-19T07:50:10.587Z"}}, {"model": "sessions.session", "pk": "retupifujyebs6fnssxz0n8xs43xgc2c", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rNcCJ:aGUMMdcTiR8RDe7j6uwfzmxnCOKHeTjwDx6UsO3nqrA", "expire_date": "2024-01-24T17:16:59.197Z"}}, {"model": "sessions.session", "pk": "rhp1644d7zhilt3boy8pc8v4fnynz5k1", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwV7:Q1EazkkDiX-OKLbeC-rtzBXM0ZwNBrIgg6ys3qjztfg", "expire_date": "2024-02-19T10:46:57.592Z"}}, {"model": "sessions.session", "pk": "rm73q3kf24bursoqe23ahweh8z3g1raa", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGlm2g3-U9DmDtbte4wBypDipEHeHSCmgfTPzXiLBtta0dV7SlMVFaCVOvyMCPbjtJN-h3WZJc1uXCeWuyIN2Oc6Zn9fD_Tuo0Ou3hsCxlME5jRzJ5KINZqTIIQB5jwaGTBotKgvRkCJNluxZq-J8dIXF-wM6Izkg:1rSGjP:Tl0m55gQGDtN9_ZMt-rN2BJnWv2JT41iGdDhb3uW8XE", "expire_date": "2024-02-06T13:22:23.869Z"}}, {"model": "sessions.session", "pk": "rmd15kasoko5zj4rgsenlyjr37pxfyfu", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rS5Y9:KNjv2is2ZnYeJM5O2ezV1Qe5BWR9vB8-rGwkUwpvTrI", "expire_date": "2024-02-06T01:26:01.637Z"}}, {"model": "sessions.session", "pk": "rtzo96yplllgrdfbshmdhed6xnfr4un0", "fields": {"session_data": ".eJxVjDEOwjAMRe-SGUWuGzmBkZ0zRHbikAJqpaadKu4OlTrA-t97fzOR16XGtekch2wuBs3pdxNOTx13kB883iebpnGZB7G7Yg_a7G3K-roe7t9B5Va_tUjxXlgTKnlChYQOkIrzQIBd6DGAI-qF4YzqiTN23Gei4BIUEfP-ANbPN1o:1rWwY6:v948cvNKm_-7DVJgxeE5FJnBnhNMArUmP9JMfy94wYo", "expire_date": "2024-02-19T10:50:02.916Z"}}, {"model": "sessions.session", "pk": "rvwpe7c6f0ts93v80bvef19l0mln03wa", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pACAwWX7j0DGWaoVA1NSrsy3l1JutDtf-_9l4i4byXuLa9xZnEWWpx-t4T0yLUDvmO9LZKWuq1zkl2RB23yunB-Xg7376BgK72GIbgExmj2nL0zDACYRksqIJAbTPCadJpGJj9pg19dKQvKJbLWBPH-AM81NxQ:1rWze9:Ha-kImIEXDhqhHNkrMM5zwAUvGrKf9qXJmOnddusYGw", "expire_date": "2024-02-19T14:08:29.852Z"}}, {"model": "sessions.session", "pk": "rxv3gepsp2u4h5x2u580ny0cek46ng5p", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV9bd:G-YiSNm2nz0nn1qQGjMlFgZZoVUs4JOphZXy27BLlfA", "expire_date": "2024-02-14T12:22:17.823Z"}}, {"model": "sessions.session", "pk": "s4y94v3ls50kizj6iyexfmjhkj9kc7ow", "fields": {"session_data": ".eJxVjDsOwyAQBe9CHSGw-aZM7zOgZReCkwgkY1dR7h5bcpG0b2bemwXY1hK2npYwE7syzy6_WwR8pnoAekC9N46trssc-aHwk3Y-NUqv2-n-HRToZa8VoUOPNpLKOKhRWGdFBDMm7UkOYJTQXrg8RqEkQs5S5kTWUXJmh5p9vu88OA4:1rV45D:0QW2IWEERmzkQ3iFZHemC7aGXulTbOeLJBVRrLhdOl8", "expire_date": "2024-02-14T06:28:27.930Z"}}, {"model": "sessions.session", "pk": "s5peyq207y8uqsayzqhw3v2osoi5ud39", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rXDye:4Rik5GRI1200vVjEELZiVQsr3tgqIW3zGxodzdsXz60", "expire_date": "2024-02-20T05:26:36.480Z"}}, {"model": "sessions.session", "pk": "s6jdygezip2xvnkaig82mhjh7xpgxacg", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGlnZOPGHkp4zRF7vMw4gR8qnQtwdIqWA9s3Me6khbmsZtgXzMIo6q1adfjeO6YG6A7nHept0muo6j6x3RR900ddJ8Lwc7t9BiUv51r0kEz24a4gzkIwDnPFiIQGUmGzufC9NYDBTazyytXCBiEAIUO8PGTc5AA:1rWxZo:xusm2DEhPxO80cVJDS3BWK6dwEZ2XC4ur1sxhmx3HLc", "expire_date": "2024-02-19T11:55:52.449Z"}}, {"model": "sessions.session", "pk": "scky4wii8s0a1k982fo92gzbs71si2am", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHMQKbg0r3fQIaXVA0kpV0Z_12bdKHbe865L-F5W6vfRl78nMRZoDj9boHjI7cdpDu3W5ext3WZg9wVedAhrz3l5-Vw_w4qj_qtCzq2lMEVBGIyCrVDhlCQdLKqTECOkEuEpJWloAFDNKY4hU7nicX7A8TaNww:1rWuCy:HwfkMA8USW9sUgu0j98u-ABVaX4CiX37TENDp6QqHjA", "expire_date": "2024-02-19T08:20:04.152Z"}}, {"model": "sessions.session", "pk": "sdateev4klewzcpo98xfir0wdpew29tk", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rWtjf:I1lmukkpziZYzW5se3PaAUl4kRUlJ3UKrzOcBogKr_A", "expire_date": "2024-02-19T07:49:47.537Z"}}, {"model": "sessions.session", "pk": "sfwfvs55edj7n6uw79qm4em9y47sah6i", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGlnxd2NKes5grb1rHECOFCcV4u4QKQW0b2beS0Tc1hq3zkucSJyFFqffLWF-cNsB3bHdZpnnti5TkrsiD9rldSZ-Xg7376Bir98asmE1jLbYAt6BhjJqNtmjUjQ48kQcgrUGiLRCY1Lx6LJyGlwqbIN4fwDVBDeu:1rWvbL:wb0ZIkD1pYaP_MlTqffEKi4QmJpbD1vqYTlT4fsZuEU", "expire_date": "2024-02-19T09:49:19.519Z"}}, {"model": "sessions.session", "pk": "t7pdpgjieigqvyqqct636l5rm58fsg64", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHMQKbg0r3fQIaXVA0kpV0Z_12bdKHbe865L-F5W6vfRl78nMRZoDj9boHjI7cdpDu3W5ext3WZg9wVedAhrz3l5-Vw_w4qj_qtCzq2lMEVBGIyCrVDhlCQdLKqTECOkEuEpJWloAFDNKY4hU7nicX7A8TaNww:1rWuOB:51SMt8b07zxFchWHBmenXOZ4nPOiIfM8EYETqHIhLtw", "expire_date": "2024-02-19T08:31:39.513Z"}}, {"model": "sessions.session", "pk": "tvjk4lbnfq8j6w85sj6tcr243sv6cni9", "fields": {"session_data": ".eJxVjEEOwiAQAP_C2RB2uy3g0XvfQGDZStW0SWlPxr8bkh70OjOZtwrx2Es4qmxhzuqqUF1-WYr8lKWJ_IjLfdW8Lvs2J90SfdqqxzXL63a2f4MSa2lb1xuKHUdnDXWGAAUcmMmx9N4yELpE4gEJMk0oKOz9MCC5zpJhUJ8vqn02Sw:1rV7kk:W-J_-e12zDZZ1b6jGsXFiXgukOAceXDZgkdkohDP_pI", "expire_date": "2024-02-14T10:23:34.878Z"}}, {"model": "sessions.session", "pk": "ud45vb308jy1dxdwp30yriztgvl6w4v1", "fields": {"session_data": ".eJxVjEsOAiEQBe_C2hCaVhpcuvcMk-YnowaSYWZlvLuSzELzdq8q9RITb2uZtp6WaY7iLECJw-_pOTxSHSTeud6aDK2uy-zlUOROu7y2mJ6X3f0LFO5ldCMa57MjzQ5QGbCnrFVISGAMKNY6Wzo6679zkMgypYDOU8CAQFa8P9llNvo:1rXIkp:j01Uqz-678z68UL_E1KUzhHLhv6d_cYfSZr9bXy7alY", "expire_date": "2024-02-20T10:32:39.671Z"}}, {"model": "sessions.session", "pk": "ur8j7e6bv52zu8mnhlg1mwip3deetyw0", "fields": {"session_data": ".eJxVjLsOwjAMAP8lM4pS3DzKyM43RI7tkAJKpaadEP-OInWA9e50bxVx30rcm6xxZnVRZ3X6ZQnpKbULfmC9L5qWuq1z0j3Rh236trC8rkf7NyjYSt8i-2xGBA_BwGQcuBGJjLdGyDriwOCttWFwGSZJIQNLygOJ4SCQ1ecLzuQ4Cg:1rWwSr:u6lrmGXxA_CmUzYGzwuqnoyXoIZUM4aDQlkecGg2NDo", "expire_date": "2024-02-19T10:44:37.316Z"}}, {"model": "sessions.session", "pk": "ut8civvyo64z3agse9qw2m3jrxok21i2", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pACwgwu3XsGMlOmUjU0Ke3KeHfbpAvd_vfef6tE61LS2mROY1YXZdXpd2Pqn1J3kB9U75Pup7rMI-td0Qdt-jZleV0P9--gUCtbDYCOOwcRERDYDWKYoYuBDAeBbLw1DAaHAC6TxxhchA0An8VGH9TnC7q5NrY:1rWISb:A5cvjwzOaC33ouC4u2f6tIFyWs23U_sbGLr6BOBt-SQ", "expire_date": "2024-02-17T16:01:41.113Z"}}, {"model": "sessions.session", "pk": "v3729iewrcb1czz92aq39kpyii9bul7r", "fields": {"session_data": ".eJxVjEsOwiAUAO_C2hB4_IpL9z0DeQ-oVA0kpV0Z725IutDtzGTeLOCxl3D0vIU1sSsDdvllhPGZ6xDpgfXeeGx131biI-Gn7XxuKb9uZ_s3KNjL2JokszNEQgs_oXEahLJACpeYM6BbQFjrCJSfSICVEmM0Ahw48lob9vkCxpI2yg:1rX0Z5:BpBI0xJGz6pBmpLJ2MkxRj4ya5tGoOf7sLR7J3UO8Bk", "expire_date": "2024-02-19T15:07:19.535Z"}}, {"model": "sessions.session", "pk": "v8d0ho51tixposmx1glxsvt8l5jizaxu", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rX1By:PATMk26vYoYil0FAeRxl6jlTS7n6vrR_i_1ksb15YOM", "expire_date": "2024-02-19T15:47:30.698Z"}}, {"model": "sessions.session", "pk": "vnzpfobcsc86a58bclgw66k6hfyrdvuy", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rWNpA:4xqjkInodJQuGhc7dKma7IAZ7xLfK6Lla1otfzNz4oo", "expire_date": "2024-02-17T21:45:20.915Z"}}, {"model": "sessions.session", "pk": "vqnkj7n9hcwgj9aesu9jc3fihyl3h8ic", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-ZW1T0nMGa9fe4ABypDipEHeHSCmgfTPzXiLhtta0dV7SVMRZGHH63Qjzg9sOyh3bbZZ5busykdwVedAur3Ph5-Vw_w4q9vqtlSs6giOfdYiI4IfII6EzQKAU2GCBiwKy3iEYJBuNHmyImgkwjyjeH8iON20:1rXWsQ:TIcorJjy5ih-uZE0PSJ_M8F4IfZekxj95RaBMXLgI3U", "expire_date": "2024-02-21T01:37:26.885Z"}}, {"model": "sessions.session", "pk": "w7t1jsd1pb19xsmfw2z95gvynpmt3vsk", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rNnFB:gFanPRWuYq5oJnsBnevfSzIpOwYccBt0r4Dqg_D03rM", "expire_date": "2024-01-25T05:04:41.428Z"}}, {"model": "sessions.session", "pk": "wjfuyayk4sra2wfbnkl5fwepwxpxrhtn", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHtm5n3ZhG2tcat5yVOxK5MKnb5HRPgM7eD0APafeY4t3WZEj8UftLOx5ny63a6fwcVet1rTegxoEukCw5aCeedSGBVNoHkAFYLE4QvKgktEUqRsmRynrK3OzTs8wUPpjg5:1rX4rD:HRTwdLnzjSnM6Tc9nrW7r9PBvGTbxYO8BM0geNeBXQw", "expire_date": "2024-02-19T19:42:19.530Z"}}, {"model": "sessions.session", "pk": "wk6wno9uzmndl8vifhjta6pgptuhldty", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rUoa4:2iiVXGSDwCnBJezGPPpQy0bUj5XoAYadpOhxSfdgRWQ", "expire_date": "2024-02-13T13:55:16.750Z"}}, {"model": "sessions.session", "pk": "wkd843j13odm6eysnxu2vly5kr7pqzzd", "fields": {"session_data": "e30:1rUIij:Zv0nkeaYsnxf0RaEmZAEemSd3nEpKtsLmNae0Ea0n00", "expire_date": "2024-02-12T03:54:05.323Z"}}, {"model": "sessions.session", "pk": "wmx7x9g9db8m64wcumyuicd9fnjpsn02", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGln-ZW1T0nMGa9fe4ABypDipEHeHSCmgfTPzXiLhtta0dV7SVMRZGHH63Qjzg9sOyh3bbZZ5busykdwVedAur3Ph5-Vw_w4q9vqtlSs6giOfdYiI4IfII6EzQKAU2GCBiwKy3iEYJBuNHmyImgkwjyjeH8iON20:1rXapp:mLC6BpD1YHOSGE7jokcVy6pe9g9QKfnmPKygaD4ENNg", "expire_date": "2024-02-21T05:51:01.474Z"}}, {"model": "sessions.session", "pk": "xih605vy6bdek9a1eg5ohbd7pulhmpvn", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSHAMBRcuvcbCI9BqoYmpV0Z_11JutDtPefcF_Nh36rfO61-zuzMFDv9bjGkB7UB8j2028LT0rZ1jnwo_KCdX5dMz8vh_h3U0OuohTAoVCA0SiRjEYGAtNPGWjFJmaYCBaIrYJRFjZFyJJQOcpHi27D3B7IoNrc:1rNFe5:81VyPhA_wkCHQvP2lhP-S7ZDB8OD0E4r9oVAYHR3PVw", "expire_date": "2024-01-23T17:12:09.762Z"}}, {"model": "sessions.session", "pk": "xsjijiipz0niqcofu8844oq05yxl6app", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV88t:m-rd1Lnkc4wbHPhCm0ReUEVDCejny5qBpYCRt1Wrke4", "expire_date": "2024-02-14T10:48:31.425Z"}}, {"model": "sessions.session", "pk": "yd94y3kjoivxp5c4e2221ryva0xjr733", "fields": {"session_data": "e30:1rUIoW:1GlohbGhFJRtmlJ6bmSM0dtyvtdF47FyPt9a_S3XCJk", "expire_date": "2024-02-12T04:00:04.683Z"}}, {"model": "sessions.session", "pk": "yfhnckpl3xuq47cybc6ed9onvg0nmass", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV8AW:5Ny3bHVKhSuOkLRn_uUJYOOGX9xNHlL14_YUMUrjyE0", "expire_date": "2024-02-14T10:50:12.308Z"}}, {"model": "sessions.session", "pk": "ynhch5b3zhvqm5g9ach27tc76e2binlh", "fields": {"session_data": ".eJxVjEEOgjAQRe_StWnqtHQ6Lt1zhmaYKYIaSCisjHdXEha6_e-9_zKZt3XIWy1LHtVcDJjT79axPMq0A73zdJutzNO6jJ3dFXvQattZy_N6uH8HA9fhW2PQRIKNj5H6xjOJC2cJPSQISq6Aj6QoziUgcIwkPRL6BIix41jM-wO2bTar:1rUIzN:h7A4MYqEmcWWQ_I29aRkRnQ0Gg2Oj9gm0kJKDRCvVuU", "expire_date": "2024-02-12T04:11:17.596Z"}}, {"model": "sessions.session", "pk": "yqy1pqqoeel672pfdsxayta5mnk1jeip", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEMw6O4dO83EAZGqRqalHZl_HfbpAvd3nPOfYuY1qXGtfMcxyLOQovT70YpP7ntoDxSu08yT22ZR5K7Ig_a5XUq_Loc7t9BTb1u9QDOAWrAW9acyaEFXwJzAEXGIzunBuMzMBptsnIbDpatRRM0WyLx-QKzJzaG:1rWu7L:YVY3Y2FU2Z3ChpZ894bYjEMFLOYPz4fHT7lDpT6-A-k", "expire_date": "2024-02-19T08:14:15.277Z"}}, {"model": "sessions.session", "pk": "yub93t15x04cmfj5wuhgz4876754qbvi", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEwvF269xvIwIBUDU1KuzL-uzbpQrf3nHNfLOK2triNssSJ2JkBO_1uCfOj9B3QHftt5nnu6zIlviv8oINfZyrPy-H-HTQc7VtXcAkEESkIVgYJmBFTBqWNMdpnUZyxykuvkiYXqqhIUlZLFnQGLdj7A9iuN2A:1rX05z:iTY_Uj7dI6yZCib3tUGk1K6xbGvBn09396-dzgzjen4", "expire_date": "2024-02-19T14:37:15.918Z"}}, {"model": "sessions.session", "pk": "z9q28dgd4oar931jxiqyjbr5ytlccj51", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pA67RRw6b5nIDMwSNVAUtqV8e7apAvd_vfefylP25r91mTxc1QXBer0uzGFh5QdxDuVW9WhlnWZWe-KPmjTU43yvB7u30Gmlr81x5SYMXYB02CTWGcMUBAEl2wAYBQXCLHvR-AzDujQAVgynZie3KjeHwwEN-0:1rOJZg:dKlXpdDbCH7Ivl38k8fsQYW-vCbEYbBaarlCLoIAuFM", "expire_date": "2024-01-26T15:36:00.137Z"}}, {"model": "sessions.session", "pk": "zetg62oko7w9a20smc7oz6aij4vn04h8", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2pApBQZcuvcMBIapVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hzuIsvDj9binSg-sO8j3WW5PU6rrMSe6KPGiX15b5eTncv4MSe_nWyWAegZXVbsojee-UBmUGAj9hSgkYmQwOSI4IwCnWaD17ZQFRaRTvD9WoNv0:1rNZZp:0AoS-v-AgW-CSQK6NOhVVOyN--IcNR8xUp8U5aNhxMo", "expire_date": "2024-01-24T14:29:05.353Z"}}, {"model": "sessions.session", "pk": "zi3pu03f8nq4evvd5qxl2isjf7d76n75", "fields": {"session_data": ".eJxVjMsOwiAQRf-FtSEML8Gl-34DmWFQqoYmpV0Z_92QdKHbe865b5Fw32rae1nTzOIiAMTpdyTMz9IG4Qe2-yLz0rZ1JjkUedAup4XL63q4fwcVex01ap-1VdpAxsDEOmZS3gFFsGwNoaPI5oZQ2EYAb87GqYAhWO0dK_H5Agb9N4c:1rV7jU:t-wc4dZZupOC-Tm8tQxFATr8ljOy_dmzb6Q-afaeuls", "expire_date": "2024-02-14T10:22:16.523Z"}}, {"model": "sessions.session", "pk": "zxutsbbiduu4t6us0olsq4vjxbrak8r1", "fields": {"session_data": "e30:1rUIUl:MSSay2Cl0BJJAf4sKqoagH5-14IND6VgNhpoAA3xHls", "expire_date": "2024-02-12T03:39:39.172Z"}}, {"model": "user.customer", "pk": 1, "fields": {"code": "AvionX", "name": "AvionX", "address": "US", "status": true, "valid_till": null, "comments": "These are Avion-x network", "created_at": null, "last_updated_at": null, "last_updated_by": "Avion-X"}}, {"model": "user.customer", "pk": 2, "fields": {"code": "Cisco", "name": "Cisco", "address": "US", "status": true, "valid_till": null, "comments": "These are Cisco Devices", "created_at": null, "last_updated_at": null, "last_updated_by": ""}}, {"model": "user.customer", "pk": 3, "fields": {"code": "Juniper", "name": "Juniper", "address": "US", "status": true, "valid_till": null, "comments": "These are Juniper Devices", "created_at": null, "last_updated_at": null, "last_updated_by": ""}}, {"model": "user.customer", "pk": 4, "fields": {"code": "", "name": "", "address": "", "status": false, "valid_till": null, "comments": "", "created_at": null, "last_updated_at": null, "last_updated_by": ""}}, {"model": "user.customerconfig", "pk": 1, "fields": {"customer": 3, "config_type": "repo_folder_path", "config_value": "data/JUNIPER/${device_code}/${test_type}/${test_category}/${test_code}", "status": false, "valid_till": null, "comments": "", "created_at": null, "last_updated_at": null, "last_updated_by": ""}}, {"model": "user.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$600000$2CB38X3y68Sn3OwwbcCA3v$0qFVPDcctdrnpjDhFbgyDebZE0IEJxVMJfI2K+3RoBA=", "last_login": "2024-02-07T06:44:44.685Z", "is_superuser": true, "username": "damodar", "first_name": "Damodar", "last_name": "Reddy", "email": "damodar@avion-x.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-04T11:25:28Z", "customer": 3, "valid_till": null, "comments": "updated groups", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-02-06T11:21:39.648Z", "last_updated_by": "1", "groups": [1, 2, 5], "user_permissions": [54, 55, 56, 25, 26, 27, 28, 29, 30, 31]}}, {"model": "user.user", "pk": 7, "fields": {"password": "pbkdf2_sha256$320000$Z0MFMKUkuR2F6ExP3dcf78$W/eNl8IUmgOUrZMD8eFNCJmVQ8/VfzahxbLa6dSqWr4=", "last_login": "2024-01-23T13:19:30.579Z", "is_superuser": true, "username": "harsha", "first_name": "Hrasha", "last_name": "Sree", "email": "harsha@avion-x.com", "is_staff": true, "is_active": true, "date_joined": null, "customer": 2, "valid_till": null, "comments": "", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": null, "last_updated_by": "", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 8, "fields": {"password": "pbkdf2_sha256$600000$rhA2gn5YCrchFAbApMxBzY$OaoWhC+v8dZFzijrTgONsVy0jhIKlq6prn4M40VgLZQ=", "last_login": null, "is_superuser": true, "username": "shubham", "first_name": "Shubham", "last_name": "Ramapurs", "email": "shubham@avion-x", "is_staff": true, "is_active": true, "date_joined": null, "customer": 2, "valid_till": null, "comments": "", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": null, "last_updated_by": "", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 9, "fields": {"password": "pbkdf2_sha256$720000$qkCEg2pqf0py5xyn6Mr3r6$3QptNxNxGhPR8ELM4kE3saxQ2JnEZUqoEwelfoI40f4=", "last_login": "2024-02-06T18:58:44.292Z", "is_superuser": true, "username": "damu", "first_name": "Damodar Reddy", "last_name": "Veluru", "email": "damodar@avion-x.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-10T14:26:03Z", "customer": 1, "valid_till": null, "comments": "admin", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-01-10T14:27:15.592Z", "last_updated_by": "1", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 10, "fields": {"password": "pbkdf2_sha256$720000$ZlBYJFLnlLHjC5Y6pESyYO$gcrW7xZ0RWmTr5d3IfiYvZQJ7U3aQLZZ0R0s77cuibg=", "last_login": "2024-02-06T11:47:40.589Z", "is_superuser": true, "username": "sreeharsha", "first_name": "Harsha", "last_name": "Sree", "email": "harsha.bharadwaj9@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-23T13:21:08.480Z", "customer": 1, "valid_till": null, "comments": "", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-01-23T13:21:08.572Z", "last_updated_by": "", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 11, "fields": {"password": "pbkdf2_sha256$720000$PSUXqLnbX73OkA1RVZQKPD$qkUjna6W52VScQKNQvFx0rHNL/vZRcn95ZUciOCmRoU=", "last_login": "2024-02-06T05:26:36.468Z", "is_superuser": true, "username": "venky", "first_name": "Venkey", "last_name": "Valluru", "email": "venky@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-24T13:49:55.814Z", "customer": 1, "valid_till": null, "comments": "", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-01-24T13:49:55.971Z", "last_updated_by": "", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 12, "fields": {"password": "pbkdf2_sha256$720000$rV6qfPH9TDsoW31ZnXnVcp$rJd7TuxFg8iE7JcIp+wNdoZq1nqFzSomwD8nuplBFQk=", "last_login": null, "is_superuser": true, "username": "admin", "first_name": "Admin", "last_name": "1", "email": "venkaiah@avion-x.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-24T14:27:13.578Z", "customer": 1, "valid_till": null, "comments": "", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-01-24T15:16:21.404Z", "last_updated_by": "", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 13, "fields": {"password": "pbkdf2_sha256$720000$QH4REXuQxnTTthIRv9qeDR$Z3AVj8/gySx7JLGZwiK9AwCwCUxPOasMK3GnfzS4iLk=", "last_login": "2024-02-06T02:33:38.170Z", "is_superuser": true, "username": "anju_goel", "first_name": "Anju", "last_name": "Goel", "email": "anju@avion-x.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-31T05:58:29Z", "customer": 3, "valid_till": "2025-01-31", "comments": "Added from admin", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-02-01T05:26:43.812Z", "last_updated_by": "1", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 14, "fields": {"password": "pbkdf2_sha256$720000$QH4REXuQxnTTthIRv9qeDR$Z3AVj8/gySx7JLGZwiK9AwCwCUxPOasMK3GnfzS4iLk=", "last_login": "2024-02-01T06:41:57.692Z", "is_superuser": true, "username": "deepak_agarwal", "first_name": "Deepak", "last_name": "Agarwal", "email": "deepak@avion-x.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-31T06:00:12Z", "customer": 3, "valid_till": "2025-01-31", "comments": "Added from admin", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-02-01T05:26:36.150Z", "last_updated_by": "1", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 15, "fields": {"password": "pbkdf2_sha256$720000$QH4REXuQxnTTthIRv9qeDR$Z3AVj8/gySx7JLGZwiK9AwCwCUxPOasMK3GnfzS4iLk=", "last_login": "2024-02-07T07:01:39.253Z", "is_superuser": true, "username": "prema_nair", "first_name": "Premalatha", "last_name": "Nair", "email": "prema@avion-x.com", "is_staff": true, "is_active": true, "date_joined": "2024-01-31T06:13:31Z", "customer": 3, "valid_till": "2025-01-31", "comments": "Added from admin", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-02-01T05:26:29.940Z", "last_updated_by": "1", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 16, "fields": {"password": "pbkdf2_sha256$720000$QH4REXuQxnTTthIRv9qeDR$Z3AVj8/gySx7JLGZwiK9AwCwCUxPOasMK3GnfzS4iLk=", "last_login": "2024-02-05T07:54:41.516Z", "is_superuser": false, "username": "Tester1", "first_name": "Tester", "last_name": "1", "email": "tester@juniper.com", "is_staff": false, "is_active": true, "date_joined": "2024-02-01T06:28:49Z", "customer": 3, "valid_till": "2025-02-01", "comments": "Added from admin", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-02-01T06:29:56.282Z", "last_updated_by": "1", "groups": [], "user_permissions": []}}, {"model": "user.user", "pk": 17, "fields": {"password": "pbkdf2_sha256$720000$QH4REXuQxnTTthIRv9qeDR$Z3AVj8/gySx7JLGZwiK9AwCwCUxPOasMK3GnfzS4iLk=", "last_login": "2024-02-05T07:49:16.706Z", "is_superuser": false, "username": "Admin2", "first_name": "Admin", "last_name": "2", "email": "admin2@juniper.com", "is_staff": false, "is_active": true, "date_joined": "2024-02-01T06:29:57Z", "customer": 3, "valid_till": "2025-02-01", "comments": "Added from admin", "created_at": "2024-02-02T09:09:20.669Z", "last_updated_at": "2024-02-01T06:30:36.695Z", "last_updated_by": "1", "groups": [], "user_permissions": []}}, {"model": "user.requesttracking", "pk": 702, "fields": {"request_id": "b2d099c04d1c4ba9b834c8594ca3afde", "start_time": "2024-02-07T09:18:54.966Z", "end_time": "2024-02-07T09:18:54.984Z", "created_by": 2, "time_taken": 0.017283, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 703, "fields": {"request_id": "f50b8e88912f4e62b2ef3ea33f98322e", "start_time": "2024-02-07T09:18:54.987Z", "end_time": "2024-02-07T09:18:55.007Z", "created_by": 2, "time_taken": 0.020007, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 704, "fields": {"request_id": "3e06cfb1195041d8ae04f366739d36f3", "start_time": "2024-02-07T09:18:55.018Z", "end_time": "2024-02-07T09:18:57.233Z", "created_by": 2, "time_taken": 2.214933, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 705, "fields": {"request_id": "e65ae45d6a8b4a9fbfbe0bd5c28508f0", "start_time": "2024-02-07T09:18:55.026Z", "end_time": "2024-02-07T09:18:55.052Z", "created_by": 2, "time_taken": 0.026415, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 706, "fields": {"request_id": "0e9891e8eec04193aa7698d727e9bf0a", "start_time": "2024-02-07T09:18:55.188Z", "end_time": "2024-02-07T09:18:55.208Z", "created_by": 2, "time_taken": 0.01981, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 707, "fields": {"request_id": "8a69a946fd7641ccb2f92024551016fd", "start_time": "2024-02-07T09:18:55.578Z", "end_time": "2024-02-07T09:18:55.596Z", "created_by": 2, "time_taken": 0.017814, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 708, "fields": {"request_id": "2202b7c6ef124696aaa6a2289332ca06", "start_time": "2024-02-07T09:18:56.186Z", "end_time": "2024-02-07T09:18:56.203Z", "created_by": 2, "time_taken": 0.017301, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 709, "fields": {"request_id": "4e8bf67b715d44edb986509e9fd610af", "start_time": "2024-02-07T09:18:59.242Z", "end_time": "2024-02-07T09:18:59.901Z", "created_by": 2, "time_taken": 0.658748, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 710, "fields": {"request_id": "16446ddf640e4ff4a7e51c6033f0bf1f", "start_time": "2024-02-07T09:19:01.095Z", "end_time": "2024-02-07T09:19:01.791Z", "created_by": 2, "time_taken": 0.695367, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 711, "fields": {"request_id": "2b85c917e5794cc39c8082ca787c255a", "start_time": "2024-02-07T09:20:32.130Z", "end_time": "2024-02-07T09:20:32.150Z", "created_by": 2, "time_taken": 0.019732, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 712, "fields": {"request_id": "013552be7aa04fdbaaefb13012e66e77", "start_time": "2024-02-07T09:20:32.146Z", "end_time": "2024-02-07T09:20:32.156Z", "created_by": 2, "time_taken": 0.010333, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 713, "fields": {"request_id": "ef606723140b4c1e9438bcb04dfed463", "start_time": "2024-02-07T09:20:32.148Z", "end_time": "2024-02-07T09:20:34.322Z", "created_by": 2, "time_taken": 2.173924, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 714, "fields": {"request_id": "67ed531cab5c40f09144136cb5269218", "start_time": "2024-02-07T09:20:32.164Z", "end_time": "2024-02-07T09:20:32.186Z", "created_by": 2, "time_taken": 0.021084, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 715, "fields": {"request_id": "fccebaba24164ef894aabbf0c1dd730b", "start_time": "2024-02-07T09:20:32.243Z", "end_time": "2024-02-07T09:20:32.262Z", "created_by": 2, "time_taken": 0.019468, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 716, "fields": {"request_id": "b56d900103bc48fda631abb690aa7786", "start_time": "2024-02-07T09:20:32.723Z", "end_time": "2024-02-07T09:20:32.741Z", "created_by": 2, "time_taken": 0.017907, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 717, "fields": {"request_id": "33385664caf345d492ad2d6e36d356e4", "start_time": "2024-02-07T09:20:33.390Z", "end_time": "2024-02-07T09:20:33.407Z", "created_by": 2, "time_taken": 0.017536, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 718, "fields": {"request_id": "d3d09df296024e8e8eeb437d87d722f0", "start_time": "2024-02-07T09:20:36.260Z", "end_time": "2024-02-07T09:20:36.928Z", "created_by": 2, "time_taken": 0.667668, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 719, "fields": {"request_id": "382d2726e85941b1842ac1b92d90aeab", "start_time": "2024-02-07T09:20:38.094Z", "end_time": "2024-02-07T09:20:38.811Z", "created_by": 2, "time_taken": 0.716484, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 720, "fields": {"request_id": "2aaccc88af0b4e35bde05d42eacdaa10", "start_time": "2024-02-07T09:21:06.623Z", "end_time": "2024-02-07T09:21:06.640Z", "created_by": 2, "time_taken": 0.016382, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 721, "fields": {"request_id": "98195169665240b3aaeacd8632ecdce3", "start_time": "2024-02-07T09:21:06.624Z", "end_time": "2024-02-07T09:21:06.645Z", "created_by": 2, "time_taken": 0.020868, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 722, "fields": {"request_id": "1b714a6355e44bbb88cf19065247ffda", "start_time": "2024-02-07T09:21:06.665Z", "end_time": "2024-02-07T09:21:06.674Z", "created_by": 2, "time_taken": 0.008598, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 723, "fields": {"request_id": "8496ede412b0436d8c5addc008f858c0", "start_time": "2024-02-07T09:21:06.666Z", "end_time": "2024-02-07T09:21:08.899Z", "created_by": 2, "time_taken": 2.232609, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 724, "fields": {"request_id": "ce56fa8c267c459396b482c72bbbf9b5", "start_time": "2024-02-07T09:21:06.711Z", "end_time": "2024-02-07T09:21:06.729Z", "created_by": 2, "time_taken": 0.017872, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 725, "fields": {"request_id": "27d43b4239d44061b244da4fd098bd6b", "start_time": "2024-02-07T09:21:07.227Z", "end_time": "2024-02-07T09:21:07.245Z", "created_by": 2, "time_taken": 0.017553, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 726, "fields": {"request_id": "801004e4daec479c9e066ca29335a2fd", "start_time": "2024-02-07T09:21:07.804Z", "end_time": "2024-02-07T09:21:07.818Z", "created_by": 2, "time_taken": 0.014008, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 727, "fields": {"request_id": "64bae180cb624be2ba60a5a5d598cd73", "start_time": "2024-02-07T09:21:10.916Z", "end_time": "2024-02-07T09:21:11.703Z", "created_by": 2, "time_taken": 0.787193, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 728, "fields": {"request_id": "e33996b913dc4df0b18b2b02664dacee", "start_time": "2024-02-07T09:21:12.923Z", "end_time": "2024-02-07T09:21:13.755Z", "created_by": 2, "time_taken": 0.831767, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 729, "fields": {"request_id": "ade794c20eb046879ce39c6d4787880f", "start_time": "2024-02-07T09:23:04.816Z", "end_time": "2024-02-07T09:24:34.294Z", "created_by": 2, "time_taken": 89.478459, "api": "/product/generate_test_cases/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [2],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "POST", "status": "400", "error_message": "(1452, 'Cannot add or update a child row: a foreign key constraint fails (`GEN_AI`.`product_testcases`, CONSTRAINT `product_testcases_request_id_e94d05bb_fk_user_requesttracking_id` FOREIGN KEY (`request_id`) REFERENCES `user_requesttracking` (`id`))')"}}, {"model": "user.requesttracking", "pk": 730, "fields": {"request_id": "52f20c5943204138a0b16d293bd29981", "start_time": "2024-02-07T09:24:10.344Z", "end_time": "2024-02-07T09:24:10.360Z", "created_by": 2, "time_taken": 0.015096, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 731, "fields": {"request_id": "89dc5cd585f54d358635a73bf8d9d6fb", "start_time": "2024-02-07T09:24:10.345Z", "end_time": "2024-02-07T09:24:10.381Z", "created_by": 2, "time_taken": 0.035857, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 732, "fields": {"request_id": "eb7524dbeae14fd59dce1461d6e4528e", "start_time": "2024-02-07T09:24:10.347Z", "end_time": "2024-02-07T09:24:12.708Z", "created_by": 2, "time_taken": 2.361516, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 733, "fields": {"request_id": "7d730b0489974cfdb6836580c0416f88", "start_time": "2024-02-07T09:24:10.357Z", "end_time": "2024-02-07T09:24:10.384Z", "created_by": 2, "time_taken": 0.026757, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 734, "fields": {"request_id": "dd71af3e521e4f49b4661566ae08bfb4", "start_time": "2024-02-07T09:24:10.656Z", "end_time": "2024-02-07T09:24:10.677Z", "created_by": 2, "time_taken": 0.020911, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 735, "fields": {"request_id": "85042c33d6594b5687e8a35c67c851e9", "start_time": "2024-02-07T09:24:10.954Z", "end_time": "2024-02-07T09:24:10.971Z", "created_by": 2, "time_taken": 0.016496, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 736, "fields": {"request_id": "40ee66f466ff4f728b183abd1f5f8eca", "start_time": "2024-02-07T09:24:12.174Z", "end_time": "2024-02-07T09:24:12.188Z", "created_by": 2, "time_taken": 0.014567, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 737, "fields": {"request_id": "952f5cdd0fe642a3869d86f5d207b99a", "start_time": "2024-02-07T09:24:14.647Z", "end_time": "2024-02-07T09:24:15.297Z", "created_by": 2, "time_taken": 0.649649, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 738, "fields": {"request_id": "6430f00e73dd4e6a87e355a0f7e2c1eb", "start_time": "2024-02-07T09:24:16.470Z", "end_time": "2024-02-07T09:24:17.226Z", "created_by": 2, "time_taken": 0.755576, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 739, "fields": {"request_id": "ce19942faf0c4c5096abc20071104fa8", "start_time": "2024-02-07T09:24:30.426Z", "end_time": "2024-02-07T09:24:30.444Z", "created_by": 2, "time_taken": 0.018485, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 740, "fields": {"request_id": "3543cf21af6b46e0a34fa31ae80c04e5", "start_time": "2024-02-07T09:24:30.434Z", "end_time": "2024-02-07T09:24:30.449Z", "created_by": 2, "time_taken": 0.015354, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 741, "fields": {"request_id": "d663271d6d0a48628938c184ff9dde75", "start_time": "2024-02-07T09:24:30.463Z", "end_time": "2024-02-07T09:24:30.475Z", "created_by": 2, "time_taken": 0.011787, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 742, "fields": {"request_id": "e1d797504d1f4d40b1cdaeae27f239b1", "start_time": "2024-02-07T09:24:30.466Z", "end_time": "2024-02-07T09:24:32.693Z", "created_by": 2, "time_taken": 2.226401, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 743, "fields": {"request_id": "fd95b49f5ba449ad9c2a979f31c54100", "start_time": "2024-02-07T09:24:30.602Z", "end_time": "2024-02-07T09:24:30.621Z", "created_by": 2, "time_taken": 0.018725, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 744, "fields": {"request_id": "cdef1710c3b84b18be68bf3df71fd847", "start_time": "2024-02-07T09:24:31.035Z", "end_time": "2024-02-07T09:24:31.052Z", "created_by": 2, "time_taken": 0.016859, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 745, "fields": {"request_id": "63f697f5ddbe404aac1ae3cdd34f3ab8", "start_time": "2024-02-07T09:24:31.613Z", "end_time": "2024-02-07T09:24:31.627Z", "created_by": 2, "time_taken": 0.014554, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 746, "fields": {"request_id": "b4298b3d60fe4cde9f0835222c3a8acf", "start_time": "2024-02-07T09:24:34.699Z", "end_time": "2024-02-07T09:24:35.272Z", "created_by": 2, "time_taken": 0.572433, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 747, "fields": {"request_id": "01045df6501b4261a3083936eb7ac45a", "start_time": "2024-02-07T09:24:36.472Z", "end_time": "2024-02-07T09:24:37.165Z", "created_by": 2, "time_taken": 0.692618, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 748, "fields": {"request_id": "886bd0c3e9634e66a01fd9e775ab6a31", "start_time": "2024-02-07T09:25:52.376Z", "end_time": "2024-02-07T09:25:53.806Z", "created_by": 2, "time_taken": 1.429469, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 749, "fields": {"request_id": "d2f2c1d1a6064b9eb4526cf79506f162", "start_time": "2024-02-07T09:26:18.036Z", "end_time": "2024-02-07T09:26:19.235Z", "created_by": 2, "time_taken": 1.19932, "api": "/product/productcategory/", "payload": "", "request_method": "POST", "status": "['This field is required.']", "error_message": "b'{\"category\":[\"This field is required.\"],\"description\":[\"This field is required.\"],\"status\":[\"This field is required.\"],\"comments\":[\"This field is required.\"],\"customer\":[\"This field is required.\"],\"last_updated_by\":[\"This field is required.\"]}'"}}, {"model": "user.requesttracking", "pk": 750, "fields": {"request_id": "aa5a0d5980c7421fad69ba3ac5826c5d", "start_time": "2024-02-07T09:26:29.684Z", "end_time": "2024-02-07T09:26:33.173Z", "created_by": 2, "time_taken": 3.489324, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 751, "fields": {"request_id": "c4cb1d26d1ca4ed2baf86e5dc066f3bb", "start_time": "2024-02-07T09:26:33.304Z", "end_time": "2024-02-07T09:26:33.317Z", "created_by": 2, "time_taken": 0.012356, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 752, "fields": {"request_id": "9bf477d7a8624cf1807205683dd1d606", "start_time": "2024-02-07T09:26:33.307Z", "end_time": "2024-02-07T09:26:35.602Z", "created_by": 2, "time_taken": 2.294971, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 753, "fields": {"request_id": "03a2a798e14446cda6b484455d929020", "start_time": "2024-02-07T09:26:33.318Z", "end_time": "2024-02-07T09:26:33.350Z", "created_by": 2, "time_taken": 0.032168, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 754, "fields": {"request_id": "57540410725d47fea45b79c7503bb5d4", "start_time": "2024-02-07T09:26:33.337Z", "end_time": "2024-02-07T09:26:33.353Z", "created_by": 2, "time_taken": 0.015276, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 755, "fields": {"request_id": "3cbbb258c559421b927d031edf667f31", "start_time": "2024-02-07T09:26:33.465Z", "end_time": "2024-02-07T09:26:33.484Z", "created_by": 2, "time_taken": 0.018725, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 756, "fields": {"request_id": "73d2b62afb9c473da74e4fc55ef1dd66", "start_time": "2024-02-07T09:26:33.934Z", "end_time": "2024-02-07T09:26:33.955Z", "created_by": 2, "time_taken": 0.020906, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 757, "fields": {"request_id": "2451124e99824d12a52b1e22c507c826", "start_time": "2024-02-07T09:26:34.553Z", "end_time": "2024-02-07T09:26:34.569Z", "created_by": 2, "time_taken": 0.015645, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 758, "fields": {"request_id": "aed3e6403dfb4b01bb90d546d46012ff", "start_time": "2024-02-07T09:26:37.589Z", "end_time": "2024-02-07T09:26:38.245Z", "created_by": 2, "time_taken": 0.655851, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 759, "fields": {"request_id": "fe7b2bdafc10446d96b2efed1bede669", "start_time": "2024-02-07T09:26:39.418Z", "end_time": "2024-02-07T09:26:40.234Z", "created_by": 2, "time_taken": 0.815966, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 760, "fields": {"request_id": "0879a4cfd00c4736b460bb7401917e3d", "start_time": "2024-02-07T09:26:49.762Z", "end_time": "2024-02-07T09:30:25.447Z", "created_by": 2, "time_taken": 215.684802, "api": "/product/generate_test_cases/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [2],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "POST", "status": "400", "error_message": "(1452, 'Cannot add or update a child row: a foreign key constraint fails (`GEN_AI`.`product_testcases`, CONSTRAINT `product_testcases_request_id_e94d05bb_fk_user_requesttracking_id` FOREIGN KEY (`request_id`) REFERENCES `user_requesttracking` (`id`))')"}}, {"model": "user.requesttracking", "pk": 761, "fields": {"request_id": "90b31a280e8e49a99c2caebc3c2f882d", "start_time": "2024-02-07T09:26:58.843Z", "end_time": "2024-02-07T09:26:58.867Z", "created_by": 2, "time_taken": 0.023852, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 762, "fields": {"request_id": "f5d492bcdc8a473f81d8f3d5e74c7c86", "start_time": "2024-02-07T09:26:58.873Z", "end_time": "2024-02-07T09:26:58.895Z", "created_by": 2, "time_taken": 0.021889, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 763, "fields": {"request_id": "97644f8803a6408e820948290881c288", "start_time": "2024-02-07T09:26:58.874Z", "end_time": "2024-02-07T09:26:58.891Z", "created_by": 2, "time_taken": 0.016668, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 764, "fields": {"request_id": "16de570cf168482c968dcf5184dbe28f", "start_time": "2024-02-07T09:26:58.902Z", "end_time": "2024-02-07T09:26:58.911Z", "created_by": 2, "time_taken": 0.009213, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 765, "fields": {"request_id": "0a284242844745c5ab9a7d959d5d9cd8", "start_time": "2024-02-07T09:26:58.939Z", "end_time": "2024-02-07T09:27:01.614Z", "created_by": 2, "time_taken": 2.674815, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 766, "fields": {"request_id": "a0ae498e9b1d4920b9f19e00d10aed3f", "start_time": "2024-02-07T09:26:59.502Z", "end_time": "2024-02-07T09:26:59.521Z", "created_by": 2, "time_taken": 0.019192, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 767, "fields": {"request_id": "957e83178bab4c5f9065a742331f4010", "start_time": "2024-02-07T09:27:00.282Z", "end_time": "2024-02-07T09:27:00.320Z", "created_by": 2, "time_taken": 0.037973, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 768, "fields": {"request_id": "97fe8e50f94a4139a8508e393cd2b463", "start_time": "2024-02-07T09:27:03.684Z", "end_time": "2024-02-07T09:27:04.258Z", "created_by": 2, "time_taken": 0.573583, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 769, "fields": {"request_id": "5e39f0caf5f94c948bbbbd8124112e0f", "start_time": "2024-02-07T09:27:05.499Z", "end_time": "2024-02-07T09:27:06.179Z", "created_by": 2, "time_taken": 0.679856, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 770, "fields": {"request_id": "e241a0af6407492d8b67343e5d7c2a3c", "start_time": "2024-02-07T09:27:37.381Z", "end_time": "2024-02-07T09:27:39.675Z", "created_by": 2, "time_taken": 2.293084, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 771, "fields": {"request_id": "222c22130ebe462d88ae1dd72cbf1901", "start_time": "2024-02-07T09:27:37.392Z", "end_time": "2024-02-07T09:27:37.409Z", "created_by": 2, "time_taken": 0.016688, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 772, "fields": {"request_id": "579f5b40f8254105a7950ecc28c697e3", "start_time": "2024-02-07T09:27:37.415Z", "end_time": "2024-02-07T09:27:37.435Z", "created_by": 2, "time_taken": 0.019675, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 773, "fields": {"request_id": "fefcc1ac20f842dea698d5246db51ebc", "start_time": "2024-02-07T09:27:37.443Z", "end_time": "2024-02-07T09:27:37.458Z", "created_by": 2, "time_taken": 0.015373, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 774, "fields": {"request_id": "789c077b9fbd477ea65238ece6b27abf", "start_time": "2024-02-07T09:27:37.473Z", "end_time": "2024-02-07T09:27:37.495Z", "created_by": 2, "time_taken": 0.021216, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 775, "fields": {"request_id": "2dd0e66d33bd4ca4835776e856a0c9bc", "start_time": "2024-02-07T09:27:38.232Z", "end_time": "2024-02-07T09:27:38.250Z", "created_by": 2, "time_taken": 0.017894, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 776, "fields": {"request_id": "385056d2f190443e9b44bddc609563a7", "start_time": "2024-02-07T09:27:38.711Z", "end_time": "2024-02-07T09:27:38.724Z", "created_by": 2, "time_taken": 0.012407, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 777, "fields": {"request_id": "85541adcfffe46dfab8c6c5e85341f56", "start_time": "2024-02-07T09:27:41.546Z", "end_time": "2024-02-07T09:27:42.198Z", "created_by": 2, "time_taken": 0.651643, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 778, "fields": {"request_id": "0f34995148e0436ba8af85a138f2fb79", "start_time": "2024-02-07T09:27:43.345Z", "end_time": "2024-02-07T09:27:44.004Z", "created_by": 2, "time_taken": 0.658791, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 779, "fields": {"request_id": "4c7f5ecb8a044e2cace4f6bdb56a78f7", "start_time": "2024-02-07T09:28:20.843Z", "end_time": "2024-02-07T09:28:20.861Z", "created_by": 2, "time_taken": 0.01752, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 780, "fields": {"request_id": "453f97211b5449abb53984d9511bf4c9", "start_time": "2024-02-07T09:28:20.845Z", "end_time": "2024-02-07T09:28:20.858Z", "created_by": 2, "time_taken": 0.01275, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 781, "fields": {"request_id": "bdc05ac4d5c447d9bb940dab103f188c", "start_time": "2024-02-07T09:28:20.897Z", "end_time": "2024-02-07T09:28:20.914Z", "created_by": 2, "time_taken": 0.016613, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 782, "fields": {"request_id": "59da31ce72fb4ccba0b31493e5a4884e", "start_time": "2024-02-07T09:28:20.921Z", "end_time": "2024-02-07T09:28:23.136Z", "created_by": 2, "time_taken": 2.214966, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 783, "fields": {"request_id": "c9ac234c8a80428e8ba9a046953645ec", "start_time": "2024-02-07T09:28:21.015Z", "end_time": "2024-02-07T09:28:21.035Z", "created_by": 2, "time_taken": 0.019343, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 784, "fields": {"request_id": "3cf910521d4347a785e93f8fdb6967ec", "start_time": "2024-02-07T09:28:21.524Z", "end_time": "2024-02-07T09:28:21.544Z", "created_by": 2, "time_taken": 0.020585, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 785, "fields": {"request_id": "bfb4a0eb879f4b40be97087287cad993", "start_time": "2024-02-07T09:28:22.009Z", "end_time": "2024-02-07T09:28:22.024Z", "created_by": 2, "time_taken": 0.014993, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 786, "fields": {"request_id": "26f74430440e4ab28427c86078389755", "start_time": "2024-02-07T09:28:25.206Z", "end_time": "2024-02-07T09:28:25.921Z", "created_by": 2, "time_taken": 0.715226, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 787, "fields": {"request_id": "a5cea11018404662be882bc1d50b8b79", "start_time": "2024-02-07T09:28:27.172Z", "end_time": "2024-02-07T09:28:27.836Z", "created_by": 2, "time_taken": 0.664129, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 788, "fields": {"request_id": "ef99294e09944db9819b0ab8112762a7", "start_time": "2024-02-07T09:28:37.581Z", "end_time": "2024-02-07T09:28:39.889Z", "created_by": 2, "time_taken": 2.307866, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 789, "fields": {"request_id": "d061706f42e7491fbbf5699813479a8d", "start_time": "2024-02-07T09:28:37.582Z", "end_time": "2024-02-07T09:28:37.593Z", "created_by": 2, "time_taken": 0.010788, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 790, "fields": {"request_id": "307bc11930a1462fa0fda4986d5c7e53", "start_time": "2024-02-07T09:28:37.620Z", "end_time": "2024-02-07T09:28:37.644Z", "created_by": 2, "time_taken": 0.02342, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 791, "fields": {"request_id": "0aef0779e0384e2eb65afe9161291836", "start_time": "2024-02-07T09:28:37.632Z", "end_time": "2024-02-07T09:28:37.653Z", "created_by": 2, "time_taken": 0.020233, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 792, "fields": {"request_id": "50fca515e3f24c45999ef11a7e33eb4d", "start_time": "2024-02-07T09:28:37.715Z", "end_time": "2024-02-07T09:28:37.734Z", "created_by": 2, "time_taken": 0.018839, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 793, "fields": {"request_id": "05616bf165284fe4be62a4fe7913c5b1", "start_time": "2024-02-07T09:28:38.256Z", "end_time": "2024-02-07T09:28:38.274Z", "created_by": 2, "time_taken": 0.017942, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 794, "fields": {"request_id": "2a6ed7a899c24f57ad7a06fca6763d9a", "start_time": "2024-02-07T09:28:38.902Z", "end_time": "2024-02-07T09:28:38.915Z", "created_by": 2, "time_taken": 0.012781, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 795, "fields": {"request_id": "b4e5c9c6cd394e5b8a1be171ffd040e0", "start_time": "2024-02-07T09:28:41.781Z", "end_time": "2024-02-07T09:28:42.377Z", "created_by": 2, "time_taken": 0.595765, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 796, "fields": {"request_id": "176eedc9e6c34ccd82b775028c36acd2", "start_time": "2024-02-07T09:28:43.529Z", "end_time": "2024-02-07T09:28:44.207Z", "created_by": 2, "time_taken": 0.677667, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 797, "fields": {"request_id": "0bf5c3e2a1b64ceda39e224a2cdf58d0", "start_time": "2024-02-07T09:28:56.679Z", "end_time": "2024-02-07T09:28:56.694Z", "created_by": 2, "time_taken": 0.014136, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 798, "fields": {"request_id": "3ab912b479834d6db165a0be019838a5", "start_time": "2024-02-07T09:28:56.697Z", "end_time": "2024-02-07T09:28:56.706Z", "created_by": 2, "time_taken": 0.008862, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 799, "fields": {"request_id": "28a1f00daa27465fab5649ecda4cdc3a", "start_time": "2024-02-07T09:28:56.721Z", "end_time": "2024-02-07T09:28:56.737Z", "created_by": 2, "time_taken": 0.016479, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 800, "fields": {"request_id": "df1e1ffce1344e709ce9afbe041f8e38", "start_time": "2024-02-07T09:28:56.744Z", "end_time": "2024-02-07T09:28:58.898Z", "created_by": 2, "time_taken": 2.153194, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 801, "fields": {"request_id": "141e8b7225774760829d3a8bb78a4c56", "start_time": "2024-02-07T09:28:56.827Z", "end_time": "2024-02-07T09:28:56.845Z", "created_by": 2, "time_taken": 0.018001, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 802, "fields": {"request_id": "b145598776754f168179eee034840678", "start_time": "2024-02-07T09:28:57.341Z", "end_time": "2024-02-07T09:28:57.357Z", "created_by": 2, "time_taken": 0.016535, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 803, "fields": {"request_id": "dc669ae3cfef4b0cb3a04ad8badddecb", "start_time": "2024-02-07T09:28:57.823Z", "end_time": "2024-02-07T09:28:57.835Z", "created_by": 2, "time_taken": 0.012374, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 804, "fields": {"request_id": "b999acce898f41cc97908c81830efb04", "start_time": "2024-02-07T09:29:00.973Z", "end_time": "2024-02-07T09:29:01.603Z", "created_by": 2, "time_taken": 0.629121, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 805, "fields": {"request_id": "8a48808ac3924750951df670a5976c52", "start_time": "2024-02-07T09:29:02.836Z", "end_time": "2024-02-07T09:29:03.502Z", "created_by": 2, "time_taken": 0.666165, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 806, "fields": {"request_id": "9b2bc12f5e09438f8f76bd5922562ef8", "start_time": "2024-02-07T09:30:09.350Z", "end_time": "2024-02-07T09:30:11.686Z", "created_by": 2, "time_taken": 2.336401, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 807, "fields": {"request_id": "ecb01745b1f144e49d533dc9dba3b1ed", "start_time": "2024-02-07T09:30:09.373Z", "end_time": "2024-02-07T09:30:09.382Z", "created_by": 2, "time_taken": 0.008219, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 808, "fields": {"request_id": "e0b82612957d41f89eeb86238b48da72", "start_time": "2024-02-07T09:30:09.390Z", "end_time": "2024-02-07T09:30:09.408Z", "created_by": 2, "time_taken": 0.018216, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 809, "fields": {"request_id": "50ee5563b49d45e6aa50e4b1a75f1586", "start_time": "2024-02-07T09:30:09.424Z", "end_time": "2024-02-07T09:30:09.438Z", "created_by": 2, "time_taken": 0.013764, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 810, "fields": {"request_id": "23a6b17107d1472d9d66ca9ef05c652d", "start_time": "2024-02-07T09:30:09.514Z", "end_time": "2024-02-07T09:30:09.538Z", "created_by": 2, "time_taken": 0.024303, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 811, "fields": {"request_id": "1abbdf0b04f147b996a38128c3601f4b", "start_time": "2024-02-07T09:30:10.029Z", "end_time": "2024-02-07T09:30:10.056Z", "created_by": 2, "time_taken": 0.026801, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 812, "fields": {"request_id": "20311c386973428fa62a308ca9b84c82", "start_time": "2024-02-07T09:30:10.678Z", "end_time": "2024-02-07T09:30:10.691Z", "created_by": 2, "time_taken": 0.013128, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 813, "fields": {"request_id": "af85cc09fe1c47e3942ea34ac1aa6f2e", "start_time": "2024-02-07T09:30:13.587Z", "end_time": "2024-02-07T09:30:14.293Z", "created_by": 2, "time_taken": 0.706415, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 814, "fields": {"request_id": "468b0e3a6d2347688c3c959c87774593", "start_time": "2024-02-07T09:30:15.442Z", "end_time": "2024-02-07T09:30:16.142Z", "created_by": 2, "time_taken": 0.700129, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 815, "fields": {"request_id": "0b3166fbd84d4191ad0a896cbfe683f2", "start_time": "2024-02-07T09:49:06.512Z", "end_time": "2024-02-07T09:49:06.535Z", "created_by": 2, "time_taken": 0.022625, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 816, "fields": {"request_id": "165244a2eaf44cdb9e71a023c3d3885c", "start_time": "2024-02-07T09:49:06.513Z", "end_time": "2024-02-07T09:49:06.524Z", "created_by": 2, "time_taken": 0.011185, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 817, "fields": {"request_id": "647c9867ccb141c5a0c30a8a1f344b36", "start_time": "2024-02-07T09:49:35.895Z", "end_time": "2024-02-07T09:49:35.919Z", "created_by": 2, "time_taken": 0.02424, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 818, "fields": {"request_id": "6772f55b83d94d7db3ab9a2a7da37855", "start_time": "2024-02-07T09:49:43.332Z", "end_time": "2024-02-07T09:49:43.355Z", "created_by": 2, "time_taken": 0.022997, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 819, "fields": {"request_id": "789cbf38f6c84c309960287cce64e916", "start_time": "2024-02-07T09:49:45.595Z", "end_time": "2024-02-07T09:49:45.615Z", "created_by": 2, "time_taken": 0.020013, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 820, "fields": {"request_id": "2df3e11c2d7b482db46e51b6000ebf67", "start_time": "2024-02-07T09:49:47.581Z", "end_time": "2024-02-07T09:49:47.599Z", "created_by": 2, "time_taken": 0.017952, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 821, "fields": {"request_id": "acf5dfd261d0482a95edbb92a450c33c", "start_time": "2024-02-07T09:49:47.581Z", "end_time": "2024-02-07T09:49:47.603Z", "created_by": 2, "time_taken": 0.021511, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 822, "fields": {"request_id": "2ad5346314594300af48bd84b1dc6c15", "start_time": "2024-02-07T09:50:00.510Z", "end_time": "2024-02-07T09:50:00.554Z", "created_by": 2, "time_taken": 0.043744, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 823, "fields": {"request_id": "a7fdf8f9cede43ada0ed16a9bdd336f8", "start_time": "2024-02-07T09:50:08.393Z", "end_time": "2024-02-07T09:50:08.417Z", "created_by": 2, "time_taken": 0.023756, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 824, "fields": {"request_id": "5d39b63916a044418370ff2a96a9a525", "start_time": "2024-02-07T09:50:15.511Z", "end_time": "2024-02-07T09:50:15.527Z", "created_by": 2, "time_taken": 0.016294, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 825, "fields": {"request_id": "f6f2e89b08b740e1831df8f382e11687", "start_time": "2024-02-07T09:50:17.492Z", "end_time": "2024-02-07T09:50:17.513Z", "created_by": 2, "time_taken": 0.020324, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 826, "fields": {"request_id": "db471cb6e4594e3baac9cb7af953d033", "start_time": "2024-02-07T09:50:17.494Z", "end_time": "2024-02-07T09:50:17.517Z", "created_by": 2, "time_taken": 0.023567, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 827, "fields": {"request_id": "7662dbeeedb54a9c9c2ba4fa3d14b087", "start_time": "2024-02-07T09:50:19.464Z", "end_time": "2024-02-07T09:50:19.490Z", "created_by": 2, "time_taken": 0.02633, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 828, "fields": {"request_id": "fe787dd5f4624bfba8d83167ac493feb", "start_time": "2024-02-07T09:50:21.480Z", "end_time": "2024-02-07T09:50:21.500Z", "created_by": 2, "time_taken": 0.019071, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 829, "fields": {"request_id": "143ac025fa144b6c9865b99b466089fe", "start_time": "2024-02-07T09:50:34.708Z", "end_time": "2024-02-07T09:50:34.725Z", "created_by": 2, "time_taken": 0.016704, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 830, "fields": {"request_id": "77d19263449841fb9e0ff124bb43b07f", "start_time": "2024-02-07T09:51:03.567Z", "end_time": "2024-02-07T09:51:03.591Z", "created_by": 2, "time_taken": 0.023831, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 831, "fields": {"request_id": "24f15c900f0f4d9c8e4769c1ce2fdcaf", "start_time": "2024-02-07T09:51:16.355Z", "end_time": "2024-02-07T09:51:16.373Z", "created_by": 2, "time_taken": 0.017707, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 832, "fields": {"request_id": "1934075ca63b423a9387f23f25109ad0", "start_time": "2024-02-07T09:51:16.381Z", "end_time": "2024-02-07T09:51:16.403Z", "created_by": 2, "time_taken": 0.022558, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 833, "fields": {"request_id": "af047febefa347b588dc9bb6db011744", "start_time": "2024-02-07T09:51:16.953Z", "end_time": "2024-02-07T09:51:16.973Z", "created_by": 2, "time_taken": 0.019309, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 834, "fields": {"request_id": "2a13bcd7bc5b45ce93aa733a923ca0ca", "start_time": "2024-02-07T09:51:19.262Z", "end_time": "2024-02-07T09:51:19.301Z", "created_by": 2, "time_taken": 0.03936, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 835, "fields": {"request_id": "ce6635cb7b2343fb83de3f2deb6f8443", "start_time": "2024-02-07T09:51:19.305Z", "end_time": "2024-02-07T09:51:19.329Z", "created_by": 2, "time_taken": 0.023931, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 836, "fields": {"request_id": "8d39da33714c490ba4da93f1c01868fb", "start_time": "2024-02-07T09:51:19.305Z", "end_time": "2024-02-07T09:51:19.328Z", "created_by": 2, "time_taken": 0.022779, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 837, "fields": {"request_id": "ac81590028d54d1ca1eeb0bfbd976217", "start_time": "2024-02-07T09:51:25.133Z", "end_time": "2024-02-07T09:51:25.155Z", "created_by": 2, "time_taken": 0.022776, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 838, "fields": {"request_id": "4050463ae1bb41b3a035a003e2c2ba7a", "start_time": "2024-02-07T09:51:25.161Z", "end_time": "2024-02-07T09:51:25.182Z", "created_by": 2, "time_taken": 0.021025, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 839, "fields": {"request_id": "3fb23f6efae84e91924ce4bbdd2cbbb4", "start_time": "2024-02-07T09:51:25.162Z", "end_time": "2024-02-07T09:51:27.297Z", "created_by": 2, "time_taken": 2.134185, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 840, "fields": {"request_id": "50fc1ddf2aac451b8f22efe4e597385f", "start_time": "2024-02-07T09:51:25.448Z", "end_time": "2024-02-07T09:51:25.457Z", "created_by": 2, "time_taken": 0.008665, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 841, "fields": {"request_id": "a05cbc97660b42dab5cacd32ae1591d8", "start_time": "2024-02-07T09:51:26.368Z", "end_time": "2024-02-07T09:51:26.381Z", "created_by": 2, "time_taken": 0.012299, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 842, "fields": {"request_id": "55bb5891d7d64aac8da2b2eade5cb7b8", "start_time": "2024-02-07T09:51:29.238Z", "end_time": "2024-02-07T09:51:29.909Z", "created_by": 2, "time_taken": 0.670342, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 843, "fields": {"request_id": "d2409d421ff64c2c82f3df31005afe09", "start_time": "2024-02-07T09:51:31.076Z", "end_time": "2024-02-07T09:51:31.920Z", "created_by": 2, "time_taken": 0.843701, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 844, "fields": {"request_id": "ea90cfd0039645a1a972c65b8072aa5b", "start_time": "2024-02-07T09:52:33.772Z", "end_time": "2024-02-07T09:52:33.797Z", "created_by": 2, "time_taken": 0.0243, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 845, "fields": {"request_id": "67b004c49ab54cfa9011591cb7b096a3", "start_time": "2024-02-07T09:52:36.094Z", "end_time": "2024-02-07T09:52:36.114Z", "created_by": 2, "time_taken": 0.020154, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 846, "fields": {"request_id": "f59d804e50254e378c104e435b126112", "start_time": "2024-02-07T09:52:36.111Z", "end_time": "2024-02-07T09:52:36.142Z", "created_by": 2, "time_taken": 0.031265, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 847, "fields": {"request_id": "203d81443532490189722bd032942a30", "start_time": "2024-02-07T09:52:36.702Z", "end_time": "2024-02-07T09:52:36.718Z", "created_by": 2, "time_taken": 0.015433, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 848, "fields": {"request_id": "97ef45168aa7459f985ce027ee8e832d", "start_time": "2024-02-07T09:52:38.567Z", "end_time": "2024-02-07T09:52:38.595Z", "created_by": 2, "time_taken": 0.02836, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 849, "fields": {"request_id": "78a6b48176014b2e9681adb03eaaf13c", "start_time": "2024-02-07T09:52:38.580Z", "end_time": "2024-02-07T09:52:38.593Z", "created_by": 2, "time_taken": 0.012593, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 850, "fields": {"request_id": "41d455a5375f4d94bb919ddca18963c0", "start_time": "2024-02-07T09:52:38.591Z", "end_time": "2024-02-07T09:52:38.608Z", "created_by": 2, "time_taken": 0.017393, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 851, "fields": {"request_id": "8bdc8bcc35664f6f8f5cce68b7005ec3", "start_time": "2024-02-07T09:52:51.518Z", "end_time": "2024-02-07T09:52:51.538Z", "created_by": 2, "time_taken": 0.019323, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 852, "fields": {"request_id": "d6d63aef8f364259a0873e944ee82aa2", "start_time": "2024-02-07T09:52:51.519Z", "end_time": "2024-02-07T09:52:51.537Z", "created_by": 2, "time_taken": 0.017782, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 853, "fields": {"request_id": "04942816e7974761b93b46ae69971d41", "start_time": "2024-02-07T09:52:51.541Z", "end_time": "2024-02-07T09:52:51.565Z", "created_by": 2, "time_taken": 0.023712, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 854, "fields": {"request_id": "bc42d4f91fbd4a328ffcf8281e385994", "start_time": "2024-02-07T09:53:29.971Z", "end_time": "2024-02-07T09:53:29.996Z", "created_by": 2, "time_taken": 0.024878, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 855, "fields": {"request_id": "a3c4546e6fc949ca9a347f52b181657c", "start_time": "2024-02-07T09:53:34.727Z", "end_time": "2024-02-07T09:53:34.746Z", "created_by": 2, "time_taken": 0.018802, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 856, "fields": {"request_id": "987fb7ae7c4b4dadb99efce1ab532517", "start_time": "2024-02-07T09:53:34.737Z", "end_time": "2024-02-07T09:53:34.762Z", "created_by": 2, "time_taken": 0.02539, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 857, "fields": {"request_id": "9556ef866ccb499fb1f6a69ca7d10b46", "start_time": "2024-02-07T09:53:35.351Z", "end_time": "2024-02-07T09:53:35.366Z", "created_by": 2, "time_taken": 0.015666, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 858, "fields": {"request_id": "96c01df1c28a42108df7e29e8a6f2089", "start_time": "2024-02-07T09:55:34.479Z", "end_time": "2024-02-07T09:55:34.495Z", "created_by": 2, "time_taken": 0.016107, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 859, "fields": {"request_id": "2d4108a985fe475bbae1b6cfabe3e61c", "start_time": "2024-02-07T09:55:37.012Z", "end_time": "2024-02-07T09:55:37.029Z", "created_by": 2, "time_taken": 0.01714, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 860, "fields": {"request_id": "a2d6dbdc16e54bbea63593da4fd3d1eb", "start_time": "2024-02-07T09:55:39.378Z", "end_time": "2024-02-07T09:55:39.387Z", "created_by": 2, "time_taken": 0.009736, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 861, "fields": {"request_id": "b0ddf730b9bf4ad28ad0e1418f3a0cdb", "start_time": "2024-02-07T09:55:40.433Z", "end_time": "2024-02-07T09:55:43.559Z", "created_by": 2, "time_taken": 3.126152, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "500", "error_message": "b'<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\\n  <title>AttributeError\\n          at /product/product/</title>\\n  <style type=\"text/css\">\\n    html * { padding:0; margin:0; }\\n    body * { padding:10px 20px; }\\n    body * * { padding:0; }\\n    body { font:small sans-serif; background-color:#fff; color:#000; }\\n    body>div { border-bottom:1px solid #ddd; }\\n    h1 { font-weight:normal; }\\n    h2 { margin-bottom:.8em; }\\n    h3 { margin:1em 0 .5em 0; }\\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\\n    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }\\n    summary { cursor: pointer; }\\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\\n    thead th {\\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\\n    }\\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\\n    table.vars { margin:5px 10px 2px 40px; width: auto; }\\n    table.vars td, table.req td { font-family:monospace; }\\n    table td.code { width:100%; }\\n    table td.code pre { overflow:hidden; }\\n    table.source th { color:#666; }\\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\\n    ul.traceback { list-style-type:none; color: #222; }\\n    ul.traceback li.cause { word-break: break-word; }\\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\\n    div.context { padding:10px 0; overflow:hidden; }\\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\\n    div.context ol li pre { display:inline; }\\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\\n    div.context ol.context-line li span { position:absolute; right:32px; }\\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\\n    .user div.context ol li { color:#666; }\\n    div.commands, summary.commands { margin-left: 40px; }\\n    div.commands a, summary.commands { color:#555; text-decoration:none; }\\n    .user div.commands a { color: black; }\\n    #summary { background: #ffc; }\\n    #summary h2 { font-weight: normal; color: #666; }\\n    #explanation { background:#eee; }\\n    #template, #template-not-exist { background:#f6f6f6; }\\n    #template-not-exist ul { margin: 0 0 10px 20px; }\\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\\n    #unicode-hint { background:#eee; }\\n    #traceback { background:#eee; }\\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\\n    #summary table { border:none; background:transparent; }\\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\\n    #requestinfo h3 { margin-bottom:-1em; }\\n    .error { background: #ffc; }\\n    .specific { color:#cc3300; font-weight:bold; }\\n    h2 span.commands { font-size:.7em; font-weight:normal; }\\n    span.commands a:link {color:#5E5694;}\\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\\n    .append-bottom { margin-bottom: 10px; }\\n    .fname { user-select: all; }\\n  </style>\\n  \\n  <script>\\n    function hideAll(elems) {\\n      for (var e = 0; e < elems.length; e++) {\\n        elems[e].style.display = \\'none\\';\\n      }\\n    }\\n    window.onload = function() {\\n      hideAll(document.querySelectorAll(\\'ol.pre-context\\'));\\n      hideAll(document.querySelectorAll(\\'ol.post-context\\'));\\n      hideAll(document.querySelectorAll(\\'div.pastebin\\'));\\n    }\\n    function toggle() {\\n      for (var i = 0; i < arguments.length; i++) {\\n        var e = document.getElementById(arguments[i]);\\n        if (e) {\\n          e.style.display = e.style.display == \\'none\\' ? \\'block\\': \\'none\\';\\n        }\\n      }\\n      return false;\\n    }\\n    function switchPastebinFriendly(link) {\\n      s1 = \"Switch to copy-and-paste view\";\\n      s2 = \"Switch back to interactive view\";\\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\\n      toggle(\\'browserTraceback\\', \\'pastebinTraceback\\');\\n      return false;\\n    }\\n  </script>\\n  \\n</head>\\n<body>\\n<div id=\"summary\">\\n  <h1>AttributeError\\n       at /product/product/</h1>\\n  <pre class=\"exception_value\">&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_sub_category&#x27;</pre>\\n  <table class=\"meta\">\\n\\n    <tr>\\n      <th>Request Method:</th>\\n      <td>GET</td>\\n    </tr>\\n    <tr>\\n      <th>Request URL:</th>\\n      <td>http://127.0.0.1:8000/product/product/</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Django Version:</th>\\n      <td>4.2.9</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Exception Type:</th>\\n      <td>AttributeError</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Value:</th>\\n      <td><pre>&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_sub_category&#x27;</pre></td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Location:</th>\\n      <td><span class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\fields.py</span>, line 1837, in to_representation</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Raised during:</th>\\n      <td>product.views.ProductView</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Python Executable:</th>\\n      <td>C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\Scripts\\\\python.exe</td>\\n    </tr>\\n    <tr>\\n      <th>Python Version:</th>\\n      <td>3.8.2</td>\\n    </tr>\\n    <tr>\\n      <th>Python Path:</th>\\n      <td><pre>[&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Desktop\\\\\\\\MyProjects\\\\\\\\Django projects\\\\\\\\GEN_AI_BACKEND&#x27;,\\n &#x27;c:\\\\\\\\users\\\\\\\\dchan\\\\\\\\appdata\\\\\\\\local\\\\\\\\programs\\\\\\\\python\\\\\\\\python38\\\\\\\\python38.zip&#x27;,\\n &#x27;c:\\\\\\\\users\\\\\\\\dchan\\\\\\\\appdata\\\\\\\\local\\\\\\\\programs\\\\\\\\python\\\\\\\\python38\\\\\\\\DLLs&#x27;,\\n &#x27;c:\\\\\\\\users\\\\\\\\dchan\\\\\\\\appdata\\\\\\\\local\\\\\\\\programs\\\\\\\\python\\\\\\\\python38\\\\\\\\lib&#x27;,\\n &#x27;c:\\\\\\\\users\\\\\\\\dchan\\\\\\\\appdata\\\\\\\\local\\\\\\\\programs\\\\\\\\python\\\\\\\\python38&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs\\\\\\\\gen_ai&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\lib\\\\\\\\site-packages&#x27;]</pre></td>\\n    </tr>\\n    <tr>\\n      <th>Server time:</th>\\n      <td>Wed, 07 Feb 2024 09:55:43 +0000</td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n\\n\\n<div id=\"traceback\">\\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\\n    Switch to copy-and-paste view</a></span>\\n  </h2>\\n  <div id=\"browserTraceback\">\\n    <ul class=\"traceback\">\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py</code>, line 55, in inner\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758720\">\\n              \\n                <ol start=\"48\" class=\"pre-context\" id=\"pre2971364758720\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>        return inner</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>        @wraps(get_response)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>        def inner(request):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"55\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>                response = get_response(request)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'56\\' class=\"post-context\" id=\"post2971364758720\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>            except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>            return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre>        return inner</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758720\\', \\'post2971364758720\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758720\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AttributeError(&quot;&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_sub_category&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>get_response</td>\\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002B3CF28A3D0&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py</code>, line 197, in _get_response\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758784\">\\n              \\n                <ol start=\"190\" class=\"pre-context\" id=\"pre2971364758784\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>        if response is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"197\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'198\\' class=\"post-context\" id=\"post2971364758784\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>            except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>                if response is None:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>                    raise</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758784\\', \\'post2971364758784\\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758784\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000002B3D1A5B430&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>middleware_method</td>\\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002B3CF28A3D0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>wrapped_callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000002B3D1A5B430&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py</code>, line 56, in wrapper_view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758656\">\\n              \\n                <ol start=\"49\" class=\"pre-context\" id=\"pre2971364758656\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>def csrf_exempt(view_func):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>    @wraps(view_func)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>    def wrapper_view(*args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"56\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'57\\' class=\"post-context\" id=\"post2971364758656\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>    wrapper_view.csrf_exempt = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758656\\', \\'post2971364758656\\')\"><pre>    return wrapper_view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758656\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/product/product/&#x27;&gt;,)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>view_func</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000002B3D1A5B3A0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py</code>, line 104, in view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758976\">\\n              \\n                <ol start=\"97\" class=\"pre-context\" id=\"pre2971364758976\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>            self = cls(**initkwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>                raise AttributeError(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>                )</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"104\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'105\\' class=\"post-context\" id=\"post2971364758976\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>        view.view_class = cls</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758976\\', \\'post2971364758976\\')\"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758976\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>cls</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;product.views.ProductView&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>initkwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 509, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758912\">\\n              \\n                <ol start=\"502\" class=\"pre-context\" id=\"pre2971364758912\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>        except Exception as exc:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"509\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>            response = self.handle_exception(exc)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'510\\' class=\"post-context\" id=\"post2971364758912\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>        return self.response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758912\\', \\'post2971364758912\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758912\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method ProductView.get of &lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 469, in handle_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364759616\">\\n              \\n                <ol start=\"462\" class=\"pre-context\" id=\"pre2971364759616\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>        response = exception_handler(exc, context)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>        if response is None:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"469\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'470\\' class=\"post-context\" id=\"post2971364759616\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>        response.exception = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>        return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759616\\', \\'post2971364759616\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364759616\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>context</td>\\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\\n &#x27;kwargs&#x27;: {},\\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;,\\n &#x27;view&#x27;: &lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AttributeError(&quot;&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_sub_category&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exception_handler</td>\\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000002B3D06249D0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 480, in raise_uncaught_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971340459456\">\\n              \\n                <ol start=\"473\" class=\"pre-context\" id=\"pre2971340459456\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>            request = self.request</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"480\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>        raise exc</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'481\\' class=\"post-context\" id=\"post2971340459456\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>    # be overridden.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971340459456\\', \\'post2971340459456\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971340459456\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AttributeError(&quot;&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_sub_category&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>renderer_format</td>\\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>use_plaintext_traceback</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 506, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758848\">\\n              \\n                <ol start=\"499\" class=\"pre-context\" id=\"pre2971364758848\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>            # Get the appropriate handler method</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"506\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'507\\' class=\"post-context\" id=\"post2971364758848\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>        except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>            response = self.handle_exception(exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758848\\', \\'post2971364758848\\')\"><pre>        return self.response</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758848\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method ProductView.get of &lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Desktop\\\\MyProjects\\\\Django projects\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 175, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758592\">\\n              \\n                <ol start=\"168\" class=\"pre-context\" id=\"pre2971364758592\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>    def get_queryset(self):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>        return Product.objects.filter(customer_id=self.request.user.customer_id, status=1, valid_till__gt=date.today())</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>    def get(self, request, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>        queryset = self.filter_queryset(self.get_queryset())</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>        serializer = ProductSerializer(queryset, many=True)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"175\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>        return JsonResponse({&#x27;data&#x27;: serializer.data}, safe=False)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'176\\' class=\"post-context\" id=\"post2971364758592\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>    def post(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>        serializer = self.get_serializer(data=request.data)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>        serializer.is_valid(raise_exception=True)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>        serializer.save()</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758592\\', \\'post2971364758592\\')\"><pre>        return JsonResponse(serializer.data, status=201)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758592\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>queryset</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002B3D1FBCF70&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>serializer</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    sub_category = SerializerMethodField()\\n    category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 768, in data\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971366142336\">\\n              \\n                <ol start=\"761\" class=\"pre-context\" id=\"pre2971366142336\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>        return representation.list_repr(self, indent=1)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>    # Include a backlink to the serializer class on return objects.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>    # Allows renderers such as HTMLFormRenderer to get the full field info.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>    @property</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>    def data(self):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"768\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>        ret = super().data</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'769\\' class=\"post-context\" id=\"post2971366142336\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>        return ReturnList(ret, serializer=self)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>    @property</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>    def errors(self):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>        ret = super().errors</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971366142336\\', \\'post2971366142336\\')\"><pre>        if isinstance(ret, list) and len(ret) == 1 and getattr(ret[0], &#x27;code&#x27;, None) == &#x27;null&#x27;:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971366142336\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>__class__</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;rest_framework.serializers.ListSerializer&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    sub_category = SerializerMethodField()\\n    category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 253, in data\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758528\">\\n              \\n                <ol start=\"246\" class=\"pre-context\" id=\"pre2971364758528\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>                &#x27;You should either call `.is_valid()` first, &#x27;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>                &#x27;or access `.initial_data` instead.&#x27;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>            )</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>            raise AssertionError(msg)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>        if not hasattr(self, &#x27;_data&#x27;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>            if self.instance is not None and not getattr(self, &#x27;_errors&#x27;, None):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"253\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>                self._data = self.to_representation(self.instance)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'254\\' class=\"post-context\" id=\"post2971364758528\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>            elif hasattr(self, &#x27;_validated_data&#x27;) and not getattr(self, &#x27;_errors&#x27;, None):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>                self._data = self.to_representation(self.validated_data)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>            else:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>                self._data = self.get_initial()</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre>        return self._data</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758528\\', \\'post2971364758528\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758528\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    sub_category = SerializerMethodField()\\n    category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 686, in to_representation\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758464\">\\n              \\n                <ol start=\"679\" class=\"pre-context\" id=\"pre2971364758464\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        List of object instances -&gt; List of dicts of primitive datatypes.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        # Dealing with nested relationships, data can be a Manager,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        # so, first get a queryset from the Manager if needed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        iterable = data.all() if isinstance(data, models.Manager) else data</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"686\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        return [</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'687\\' class=\"post-context\" id=\"post2971364758464\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>            self.child.to_representation(item) for item in iterable</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        ]</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>    def validate(self, attrs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre>        return attrs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758464\\', \\'post2971364758464\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758464\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>data</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>iterable</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    sub_category = SerializerMethodField()\\n    category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 687, in &lt;listcomp&gt;\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364758400\">\\n              \\n                <ol start=\"680\" class=\"pre-context\" id=\"pre2971364758400\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>        List of object instances -&gt; List of dicts of primitive datatypes.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>        # Dealing with nested relationships, data can be a Manager,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>        # so, first get a queryset from the Manager if needed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>        iterable = data.all() if isinstance(data, models.Manager) else data</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>        return [</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"687\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>            self.child.to_representation(item) for item in iterable</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'688\\' class=\"post-context\" id=\"post2971364758400\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>        ]</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>    def validate(self, attrs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>        return attrs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364758400\\', \\'post2971364758400\\')\"><pre>    def update(self, instance, validated_data):</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364758400\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>.0</td>\\n                    <td class=\"code\"><pre>&lt;list_iterator object at 0x000002B3D31957C0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>item</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    sub_category = SerializerMethodField()\\n    category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 522, in to_representation\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364761216\">\\n              \\n                <ol start=\"515\" class=\"pre-context\" id=\"pre2971364761216\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>            #</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>            # For related fields with `use_pk_only_optimization` we need to</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>            # resolve the pk value.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>            check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>            if check_for_none is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>                ret[field.field_name] = None</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>            else:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"522\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>                ret[field.field_name] = field.to_representation(attribute)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'523\\' class=\"post-context\" id=\"post2971364761216\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>        return ret</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>    def validate(self, attrs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre>        return attrs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364761216\\', \\'post2971364761216\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364761216\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>attribute</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>check_for_none</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>field</td>\\n                    <td class=\"code\"><pre>SerializerMethodField()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>fields</td>\\n                    <td class=\"code\"><pre>&lt;generator object Serializer._readable_fields at 0x000002B3D1EA5350&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>instance</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>ret</td>\\n                    <td class=\"code\"><pre>OrderedDict([(&#x27;id&#x27;, 5)])</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;):\\n    id = IntegerField(read_only=True)\\n    sub_category = SerializerMethodField()\\n    category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\fields.py</code>, line 1837, in to_representation\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2971364759744\">\\n              \\n                <ol start=\"1830\" class=\"pre-context\" id=\"pre2971364759744\">\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>        # The method name defaults to `get_{field_name}`.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>        if self.method_name is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>            self.method_name = &#x27;get_{field_name}&#x27;.format(field_name=field_name)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>        super().bind(field_name, parent)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>    def to_representation(self, value):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1837\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>        method = getattr(self.parent, self.method_name)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1838\\' class=\"post-context\" id=\"post2971364759744\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>        return method(value)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>class ModelField(Field):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>    &quot;&quot;&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2971364759744\\', \\'post2971364759744\\')\"><pre>    A generic field that can be used against an arbitrary model field.</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2971364759744\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>SerializerMethodField()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>value</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n    </ul>\\n  </div>\\n\\n  <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\\n    <input type=\"hidden\" name=\"title\"\\n      value=\"AttributeError at /product/product/\">\\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\\nEnvironment:\\n\\n\\nRequest Method: GET\\nRequest URL: http://127.0.0.1:8000/product/product/\\n\\nDjango Version: 4.2.9\\nPython Version: 3.8.2\\nInstalled Applications:\\n[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]\\nInstalled Middleware:\\n[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]\\n\\n\\n\\nTraceback (most recent call last):\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py\", line 55, in inner\\n    response = get_response(request)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 197, in _get_response\\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py\", line 56, in wrapper_view\\n    return view_func(*args, **kwargs)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py\", line 104, in view\\n    return self.dispatch(request, *args, **kwargs)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 509, in dispatch\\n    response = self.handle_exception(exc)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 469, in handle_exception\\n    self.raise_uncaught_exception(exc)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 480, in raise_uncaught_exception\\n    raise exc\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 506, in dispatch\\n    response = handler(request, *args, **kwargs)\\n  File \"C:\\\\Users\\\\dchan\\\\Desktop\\\\MyProjects\\\\Django projects\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 175, in get\\n    return JsonResponse({&#x27;data&#x27;: serializer.data}, safe=False)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 768, in data\\n    ret = super().data\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 253, in data\\n    self._data = self.to_representation(self.instance)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 686, in to_representation\\n    return [\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 687, in &lt;listcomp&gt;\\n    self.child.to_representation(item) for item in iterable\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 522, in to_representation\\n    ret[field.field_name] = field.to_representation(attribute)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\fields.py\", line 1837, in to_representation\\n    method = getattr(self.parent, self.method_name)\\n\\nException Type: AttributeError at /product/product/\\nException Value: &#x27;ProductSerializer&#x27; object has no attribute &#x27;get_sub_category&#x27;\\n</textarea>\\n  <br><br>\\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\\n  </div>\\n</form>\\n\\n</div>\\n\\n\\n<div id=\"requestinfo\">\\n  <h2>Request information</h2>\\n\\n\\n  \\n    <h3 id=\"user-info\">USER</h3>\\n    <p>Juniper - damodar</p>\\n  \\n\\n  <h3 id=\"get-info\">GET</h3>\\n  \\n    <p>No GET data</p>\\n  \\n\\n  <h3 id=\"post-info\">POST</h3>\\n  \\n    <p>No POST data</p>\\n  \\n\\n  <h3 id=\"files-info\">FILES</h3>\\n  \\n    <p>No FILES data</p>\\n  \\n\\n  <h3 id=\"cookie-info\">COOKIES</h3>\\n  \\n    <p>No cookie data</p>\\n  \\n\\n  <h3 id=\"meta-info\">META</h3>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Variable</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ALLUSERSPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\crashpad_22124_JYKBDZNVGTWMTVZW&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COLORTERM</td>\\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMPUTERNAME</td>\\n          <td class=\"code\"><pre>&#x27;DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMSPEC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\cmd.exe&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_LENGTH</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;text/plain&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DJANGO_SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DRIVERDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Drivers\\\\\\\\DriverData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EFC_660</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GATEWAY_INTERFACE</td>\\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GIT_ASKPASS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEPATH</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\Users\\\\\\\\dchan&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT</td>\\n          <td class=\"code\"><pre>&#x27;*/*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT_ENCODING</td>\\n          <td class=\"code\"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_AUTHORIZATION</td>\\n          <td class=\"code\"><pre>&#x27;Basic ZGFtb2RhcjoxMjM0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CACHE_CONTROL</td>\\n          <td class=\"code\"><pre>&#x27;no-cache&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CONNECTION</td>\\n          <td class=\"code\"><pre>&#x27;keep-alive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_HOST</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_POSTMAN_TOKEN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_USER_AGENT</td>\\n          <td class=\"code\"><pre>&#x27;PostmanRuntime/7.36.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGCCSVC_DB</td>\\n          <td class=\"code\"><pre>&#x27;AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA5nWnNLJ9f0m6cNhIBYx3TQQAAAACAAAAAAAQZgAAAAEAACAAAAAuWdB2lDmu34jM2z5vpcE7AAYIkaBf/yoQxwh5fjtu1gAAAAAOgAAAAAIAACAAAAA79pI7yx5QydqftHE6vHoebmXFuuEo4Sl/2mpCnMQzH2AAAABhjVGXeRxng5wiiTxdYscz76/pmVM2sBuVQgxilUm341xHn0l3PHKpoc0AN4h8A7FQ3HHOkxRmvLFmOacJywUlCFTMTRrwFCIdfBjQMGDw5+NgoX4zqTYqnoiR8KxyPqxAAAAAOeRVJa7MNOXqP+ZS7SFu9YSzTuWO3gqJG6ixsnrw9u8VeukKKcOKhd9wJuhSledyfbjbn5GAwOy1KDrvWXmGWw==&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANG</td>\\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALAPPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGONSERVER</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_OF_PROCESSORS</td>\\n          <td class=\"code\"><pre>&#x27;8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_SYMLINK</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\nodejs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVECONSUMER</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>OS</td>\\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\Scripts;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\NVIDIA Corporation\\\\\\\\NVIDIA NvDLISR;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\dotnet\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;%NVM_HOME%;%NVM_SYMLINK%;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\Program Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Docker\\\\\\\\Docker\\\\\\\\resources\\\\\\\\bin;C:\\\\\\\\Program Files (x86)\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python38\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python38\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python36\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python36\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\NVIDIA Corporation\\\\\\\\NVIDIA NvDLISR;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\dotnet\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\JetBrains\\\\\\\\PyCharm Community Edition &#x27;\\n &#x27;2022.2.1\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Python34\\\\\\\\Scripts;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\.dotnet\\\\\\\\tools&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATHEXT</td>\\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH_INFO</td>\\n          <td class=\"code\"><pre>&#x27;/product/product/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_ARCHITECTURE</td>\\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_IDENTIFIER</td>\\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 140 Stepping 2, GenuineIntel&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_LEVEL</td>\\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_REVISION</td>\\n          <td class=\"code\"><pre>&#x27;8c02&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;(gen_ai) $P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PSMODULEPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\WindowsPowerShell\\\\\\\\Modules;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\Modules&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PUBLIC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\Public&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYCHARM COMMUNITY EDITION</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\JetBrains\\\\\\\\PyCharm Community Edition 2022.2.1\\\\\\\\bin;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>QUERY_STRING</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_ADDR</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_HOST</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REQUEST_METHOD</td>\\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>RUN_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PORT</td>\\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PROTOCOL</td>\\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_SOFTWARE</td>\\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSIONNAME</td>\\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM</td>\\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM_VERSION</td>\\n          <td class=\"code\"><pre>&#x27;1.86.0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN</td>\\n          <td class=\"code\"><pre>&#x27;DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERNAME</td>\\n          <td class=\"code\"><pre>&#x27;dchan&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VENV</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUALENVWRAPPER_PROJECT_FILENAME</td>\\n          <td class=\"code\"><pre>&#x27;.project&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs\\\\\\\\gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_IPC_HANDLE</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-git-a662e7630b-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WINDIR</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WORKON_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ZES_ENABLE_SYSMAN</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\NVIDIA Corporation\\\\\\\\NVIDIA NvDLISR;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\dotnet\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;%NVM_HOME%;%NVM_SYMLINK%;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\Program Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Docker\\\\\\\\Docker\\\\\\\\resources\\\\\\\\bin;C:\\\\\\\\Program Files (x86)\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python38\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python38\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python36\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python36\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\NVIDIA Corporation\\\\\\\\NVIDIA NvDLISR;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\dotnet\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\JetBrains\\\\\\\\PyCharm Community Edition &#x27;\\n &#x27;2022.2.1\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Python34\\\\\\\\Scripts;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\.dotnet\\\\\\\\tools&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;$P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>__PSLOCKDOWNPOLICY</td>\\n          <td class=\"code\"><pre>&#x27;0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.errors</td>\\n          <td class=\"code\"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.file_wrapper</td>\\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.input</td>\\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x000002B3D1FBC670&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multiprocess</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multithread</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.run_once</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.url_scheme</td>\\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.version</td>\\n          <td class=\"code\"><pre>(1, 0)</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n\\n  <h3 id=\"settings-info\">Settings</h3>\\n  <h4>Using settings module <code>user.settings</code></h4>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Setting</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ABSOLUTE_URL_OVERRIDES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ADMINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ALLOWED_HOSTS</td>\\n          <td class=\"code\"><pre>[&#x27;*&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPEND_SLASH</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTHENTICATION_BACKENDS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_PASSWORD_VALIDATORS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_USER_MODEL</td>\\n          <td class=\"code\"><pre>&#x27;user.User&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>BASE_DIR</td>\\n          <td class=\"code\"><pre>WindowsPath(&#x27;C:/Users/dchan/Desktop/MyProjects/Django projects/GEN_AI_BACKEND&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\\n          <td class=\"code\"><pre>600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_ORIGINS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_CREDENTIALS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>31449600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_MASKED</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_FAILURE_VIEW</td>\\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_HEADER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_TRUSTED_ORIGINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_USE_SESSIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\\n             &#x27;AUTOCOMMIT&#x27;: True,\\n             &#x27;CONN_HEALTH_CHECKS&#x27;: False,\\n             &#x27;CONN_MAX_AGE&#x27;: 0,\\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,\\n             &#x27;HOST&#x27;: &#x27;gen-ai.c54r5svdjqsu.us-west-2.rds.amazonaws.com&#x27;,\\n             &#x27;NAME&#x27;: &#x27;GEN_AI&#x27;,\\n             &#x27;OPTIONS&#x27;: {},\\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\\n             &#x27;PORT&#x27;: &#x27;3306&#x27;,\\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\\n                      &#x27;COLLATION&#x27;: None,\\n                      &#x27;MIGRATE&#x27;: True,\\n                      &#x27;MIRROR&#x27;: None,\\n                      &#x27;NAME&#x27;: None},\\n             &#x27;TIME_ZONE&#x27;: None,\\n             &#x27;USER&#x27;: &#x27;admin&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASE_ROUTERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\\n          <td class=\"code\"><pre>1000</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>\\n          <td class=\"code\"><pre>100</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\\n &#x27;%Y-%m-%d %H:%M&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%Y %H:%M&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\\n &#x27;%m/%d/%Y&#x27;,\\n &#x27;%m/%d/%y&#x27;,\\n &#x27;%b %d %Y&#x27;,\\n &#x27;%b %d, %Y&#x27;,\\n &#x27;%d %b %Y&#x27;,\\n &#x27;%d %b, %Y&#x27;,\\n &#x27;%B %d %Y&#x27;,\\n &#x27;%B %d, %Y&#x27;,\\n &#x27;%d %B %Y&#x27;,\\n &#x27;%d %B, %Y&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DECIMAL_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_AUTO_FIELD</td>\\n          <td class=\"code\"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_CHARSET</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FILE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FROM_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_INDEX_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DISALLOWED_USER_AGENTS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST</td>\\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_PASSWORD</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_USER</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_PORT</td>\\n          <td class=\"code\"><pre>25</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_CERTFILE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_KEYFILE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SUBJECT_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_TIMEOUT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_LOCALTIME</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_SSL</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_TLS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_HANDLERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_PERMISSIONS</td>\\n          <td class=\"code\"><pre>420</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_TEMP_DIR</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIRST_DAY_OF_WEEK</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIXTURE_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORCE_SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMAT_MODULE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORM_RENDERER</td>\\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGNORABLE_404_URLS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INSTALLED_APPS</td>\\n          <td class=\"code\"><pre>[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INTERNAL_IPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES</td>\\n          <td class=\"code\"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\\n (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),\\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\\n (&#x27;de&#x27;, &#x27;German&#x27;),\\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\\n (&#x27;en&#x27;, &#x27;English&#x27;),\\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\\n (&#x27;fr&#x27;, &#x27;French&#x27;),\\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\\n (&#x27;ms&#x27;, &#x27;Malay&#x27;),\\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\\n (&#x27;nb&#x27;, &#x27;Norwegian Bokm\\xc3\\xa5l&#x27;),\\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES_BIDI</td>\\n          <td class=\"code\"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_CODE</td>\\n          <td class=\"code\"><pre>&#x27;en-us&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;django_language&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALE_PATHS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING</td>\\n          <td class=\"code\"><pre>{&#x27;disable_existing_loggers&#x27;: False,\\n &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},\\n              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,\\n                       &#x27;filename&#x27;: &#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Desktop\\\\\\\\MyProjects\\\\\\\\Django &#x27;\\n                                   &#x27;projects\\\\\\\\GEN_AI_BACKEND/log/log_file.log&#x27;,\\n                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},\\n &#x27;root&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;], &#x27;level&#x27;: &#x27;NOTSET&#x27;},\\n &#x27;version&#x27;: 1}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/profile/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/login/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGOUT_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MANAGERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_ROOT</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_URL</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MESSAGE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIDDLEWARE</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIGRATION_MODULES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MONTH_DAY_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F j&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_GROUPING</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_HASHERS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_RESET_TIMEOUT</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PREPEND_WWW</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REST_FRAMEWORK</td>\\n          <td class=\"code\"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework.authentication.TokenAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.BasicAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.SessionAuthentication&#x27;],\\n &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],\\n &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;rest_framework.renderers.JSONRenderer&#x27;]}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ROOT_URLCONF</td>\\n          <td class=\"code\"><pre>&#x27;user.urls&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY_FALLBACKS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_PRELOAD</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_SECONDS</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_PROXY_SSL_HEADER</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REDIRECT_EXEMPT</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REFERRER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_HOST</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_REDIRECT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;root@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_CACHE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>1209600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;sessionid&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_ENGINE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_FILE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SERIALIZER</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SIGNING_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SILENCED_SYSTEM_CHECKS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_FINDERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_ROOT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_URL</td>\\n          <td class=\"code\"><pre>&#x27;/static/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STORAGES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},\\n &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMPLATES</td>\\n          <td class=\"code\"><pre>[{&#x27;APP_DIRS&#x27;: True,\\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\\n  &#x27;DIRS&#x27;: [],\\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\\n                                     &#x27;django.template.context_processors.request&#x27;,\\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_NON_SERIALIZED_APPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_RUNNER</td>\\n          <td class=\"code\"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;,&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_ZONE</td>\\n          <td class=\"code\"><pre>&#x27;UTC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_DEPRECATED_PYTZ</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_I18N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_L10N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_TZ</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_HOST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_PORT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WSGI_APPLICATION</td>\\n          <td class=\"code\"><pre>&#x27;user.wsgi.application&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>X_FRAME_OPTIONS</td>\\n          <td class=\"code\"><pre>&#x27;DENY&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>YEAR_MONTH_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F Y&#x27;</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n  <div id=\"explanation\">\\n    <p>\\n      You\\xe2\\x80\\x99re seeing this error because you have <code>DEBUG = True</code> in your\\n      Django settings file. Change that to <code>False</code>, and Django will\\n      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'"}}, {"model": "user.requesttracking", "pk": 862, "fields": {"request_id": "2d0df78054fd4fdb88b70396de322e28", "start_time": "2024-02-07T09:55:41.245Z", "end_time": "2024-02-07T09:55:41.254Z", "created_by": 2, "time_taken": 0.009285, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 863, "fields": {"request_id": "df2e7e3c3a4449c9bef4410ecf7d55c4", "start_time": "2024-02-07T09:55:49.946Z", "end_time": "2024-02-07T09:55:49.963Z", "created_by": 2, "time_taken": 0.016539, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 864, "fields": {"request_id": "833b206f7b824af0bc54a2062cab0a2d", "start_time": "2024-02-07T09:56:12.499Z", "end_time": "2024-02-07T09:56:15.563Z", "created_by": 2, "time_taken": 3.062746, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 865, "fields": {"request_id": "cab27562638f4c189f207ada142b8569", "start_time": "2024-02-07T09:56:22.838Z", "end_time": "2024-02-07T09:56:22.852Z", "created_by": 2, "time_taken": 0.01422, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 866, "fields": {"request_id": "c3456cbcb9ce42899a3b2b34674535e5", "start_time": "2024-02-07T09:56:22.838Z", "end_time": "2024-02-07T09:56:22.860Z", "created_by": 2, "time_taken": 0.021272, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 867, "fields": {"request_id": "93d0df865a84448b846e5ab9dd8f7ee5", "start_time": "2024-02-07T09:56:22.942Z", "end_time": "2024-02-07T09:56:22.957Z", "created_by": 2, "time_taken": 0.015431, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 868, "fields": {"request_id": "0440075e5d314913b4db62271ca4f419", "start_time": "2024-02-07T09:56:25.764Z", "end_time": "2024-02-07T09:56:25.776Z", "created_by": 2, "time_taken": 0.01272, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 869, "fields": {"request_id": "faf1d49803f64456bf13f21a1444fca0", "start_time": "2024-02-07T09:56:25.781Z", "end_time": "2024-02-07T09:56:27.988Z", "created_by": 2, "time_taken": 2.206441, "api": "/product/test_cases/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 870, "fields": {"request_id": "3d8bf4d791e44a05bfc3a785e887f027", "start_time": "2024-02-07T09:56:25.781Z", "end_time": "2024-02-07T09:56:25.811Z", "created_by": 2, "time_taken": 0.029952, "api": "/product/productsubcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 871, "fields": {"request_id": "ff9a25e0d41e49ed85dbd8bfcab6fecb", "start_time": "2024-02-07T09:56:25.816Z", "end_time": "2024-02-07T09:56:25.829Z", "created_by": 2, "time_taken": 0.013116, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 872, "fields": {"request_id": "30fc73c8526f435ea63edcb5977eea5b", "start_time": "2024-02-07T09:56:27.029Z", "end_time": "2024-02-07T09:56:27.042Z", "created_by": 2, "time_taken": 0.012792, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 873, "fields": {"request_id": "0a83a8f25f0a41918a67f577c6b0aabb", "start_time": "2024-02-07T09:56:29.960Z", "end_time": "2024-02-07T09:56:30.683Z", "created_by": 2, "time_taken": 0.723272, "api": "/product/files_in_commit/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 874, "fields": {"request_id": "644dd22541ce4baa8a58fe5e362e1231", "start_time": "2024-02-07T09:56:31.855Z", "end_time": "2024-02-07T09:56:33.117Z", "created_by": 2, "time_taken": 1.261786, "api": "/product/file_changes/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 875, "fields": {"request_id": "0e4aa8a6255248eb93c6a5dbd090323b", "start_time": "2024-02-07T09:57:56.158Z", "end_time": "2024-02-07T09:57:59.253Z", "created_by": 2, "time_taken": 3.094519, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "500", "error_message": "b'<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\\n  <title>AttributeError\\n          at /product/product/</title>\\n  <style type=\"text/css\">\\n    html * { padding:0; margin:0; }\\n    body * { padding:10px 20px; }\\n    body * * { padding:0; }\\n    body { font:small sans-serif; background-color:#fff; color:#000; }\\n    body>div { border-bottom:1px solid #ddd; }\\n    h1 { font-weight:normal; }\\n    h2 { margin-bottom:.8em; }\\n    h3 { margin:1em 0 .5em 0; }\\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\\n    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }\\n    summary { cursor: pointer; }\\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\\n    thead th {\\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\\n    }\\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\\n    table.vars { margin:5px 10px 2px 40px; width: auto; }\\n    table.vars td, table.req td { font-family:monospace; }\\n    table td.code { width:100%; }\\n    table td.code pre { overflow:hidden; }\\n    table.source th { color:#666; }\\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\\n    ul.traceback { list-style-type:none; color: #222; }\\n    ul.traceback li.cause { word-break: break-word; }\\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\\n    div.context { padding:10px 0; overflow:hidden; }\\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\\n    div.context ol li pre { display:inline; }\\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\\n    div.context ol.context-line li span { position:absolute; right:32px; }\\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\\n    .user div.context ol li { color:#666; }\\n    div.commands, summary.commands { margin-left: 40px; }\\n    div.commands a, summary.commands { color:#555; text-decoration:none; }\\n    .user div.commands a { color: black; }\\n    #summary { background: #ffc; }\\n    #summary h2 { font-weight: normal; color: #666; }\\n    #explanation { background:#eee; }\\n    #template, #template-not-exist { background:#f6f6f6; }\\n    #template-not-exist ul { margin: 0 0 10px 20px; }\\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\\n    #unicode-hint { background:#eee; }\\n    #traceback { background:#eee; }\\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\\n    #summary table { border:none; background:transparent; }\\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\\n    #requestinfo h3 { margin-bottom:-1em; }\\n    .error { background: #ffc; }\\n    .specific { color:#cc3300; font-weight:bold; }\\n    h2 span.commands { font-size:.7em; font-weight:normal; }\\n    span.commands a:link {color:#5E5694;}\\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\\n    .append-bottom { margin-bottom: 10px; }\\n    .fname { user-select: all; }\\n  </style>\\n  \\n  <script>\\n    function hideAll(elems) {\\n      for (var e = 0; e < elems.length; e++) {\\n        elems[e].style.display = \\'none\\';\\n      }\\n    }\\n    window.onload = function() {\\n      hideAll(document.querySelectorAll(\\'ol.pre-context\\'));\\n      hideAll(document.querySelectorAll(\\'ol.post-context\\'));\\n      hideAll(document.querySelectorAll(\\'div.pastebin\\'));\\n    }\\n    function toggle() {\\n      for (var i = 0; i < arguments.length; i++) {\\n        var e = document.getElementById(arguments[i]);\\n        if (e) {\\n          e.style.display = e.style.display == \\'none\\' ? \\'block\\': \\'none\\';\\n        }\\n      }\\n      return false;\\n    }\\n    function switchPastebinFriendly(link) {\\n      s1 = \"Switch to copy-and-paste view\";\\n      s2 = \"Switch back to interactive view\";\\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\\n      toggle(\\'browserTraceback\\', \\'pastebinTraceback\\');\\n      return false;\\n    }\\n  </script>\\n  \\n</head>\\n<body>\\n<div id=\"summary\">\\n  <h1>AttributeError\\n       at /product/product/</h1>\\n  <pre class=\"exception_value\">&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_product_category&#x27;</pre>\\n  <table class=\"meta\">\\n\\n    <tr>\\n      <th>Request Method:</th>\\n      <td>GET</td>\\n    </tr>\\n    <tr>\\n      <th>Request URL:</th>\\n      <td>http://127.0.0.1:8000/product/product/</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Django Version:</th>\\n      <td>4.2.9</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Exception Type:</th>\\n      <td>AttributeError</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Value:</th>\\n      <td><pre>&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_product_category&#x27;</pre></td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Location:</th>\\n      <td><span class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\fields.py</span>, line 1837, in to_representation</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Raised during:</th>\\n      <td>product.views.ProductView</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Python Executable:</th>\\n      <td>C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\Scripts\\\\python.exe</td>\\n    </tr>\\n    <tr>\\n      <th>Python Version:</th>\\n      <td>3.8.2</td>\\n    </tr>\\n    <tr>\\n      <th>Python Path:</th>\\n      <td><pre>[&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Desktop\\\\\\\\MyProjects\\\\\\\\Django projects\\\\\\\\GEN_AI_BACKEND&#x27;,\\n &#x27;c:\\\\\\\\users\\\\\\\\dchan\\\\\\\\appdata\\\\\\\\local\\\\\\\\programs\\\\\\\\python\\\\\\\\python38\\\\\\\\python38.zip&#x27;,\\n &#x27;c:\\\\\\\\users\\\\\\\\dchan\\\\\\\\appdata\\\\\\\\local\\\\\\\\programs\\\\\\\\python\\\\\\\\python38\\\\\\\\DLLs&#x27;,\\n &#x27;c:\\\\\\\\users\\\\\\\\dchan\\\\\\\\appdata\\\\\\\\local\\\\\\\\programs\\\\\\\\python\\\\\\\\python38\\\\\\\\lib&#x27;,\\n &#x27;c:\\\\\\\\users\\\\\\\\dchan\\\\\\\\appdata\\\\\\\\local\\\\\\\\programs\\\\\\\\python\\\\\\\\python38&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs\\\\\\\\gen_ai&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\lib\\\\\\\\site-packages&#x27;]</pre></td>\\n    </tr>\\n    <tr>\\n      <th>Server time:</th>\\n      <td>Wed, 07 Feb 2024 09:57:59 +0000</td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n\\n\\n<div id=\"traceback\">\\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\\n    Switch to copy-and-paste view</a></span>\\n  </h2>\\n  <div id=\"browserTraceback\">\\n    <ul class=\"traceback\">\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py</code>, line 55, in inner\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420709121536\">\\n              \\n                <ol start=\"48\" class=\"pre-context\" id=\"pre2420709121536\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>        return inner</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>        @wraps(get_response)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>        def inner(request):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"55\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>                response = get_response(request)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'56\\' class=\"post-context\" id=\"post2420709121536\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>            except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>            return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre>        return inner</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709121536\\', \\'post2420709121536\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420709121536\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AttributeError(&quot;&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_product_category&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>get_response</td>\\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002339988A3D0&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py</code>, line 197, in _get_response\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710646528\">\\n              \\n                <ol start=\"190\" class=\"pre-context\" id=\"pre2420710646528\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>        if response is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"197\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'198\\' class=\"post-context\" id=\"post2420710646528\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>            except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>                if response is None:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>                    raise</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646528\\', \\'post2420710646528\\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710646528\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000002339C05B4C0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>middleware_method</td>\\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002339988A3D0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>wrapped_callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000002339C05B4C0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py</code>, line 56, in wrapper_view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710646464\">\\n              \\n                <ol start=\"49\" class=\"pre-context\" id=\"pre2420710646464\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>def csrf_exempt(view_func):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>    @wraps(view_func)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>    def wrapper_view(*args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"56\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'57\\' class=\"post-context\" id=\"post2420710646464\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>    wrapper_view.csrf_exempt = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646464\\', \\'post2420710646464\\')\"><pre>    return wrapper_view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710646464\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/product/product/&#x27;&gt;,)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>view_func</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000002339C05B430&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py</code>, line 104, in view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710648128\">\\n              \\n                <ol start=\"97\" class=\"pre-context\" id=\"pre2420710648128\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>            self = cls(**initkwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>                raise AttributeError(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>                )</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"104\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'105\\' class=\"post-context\" id=\"post2420710648128\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>        view.view_class = cls</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710648128\\', \\'post2420710648128\\')\"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710648128\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>cls</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;product.views.ProductView&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>initkwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002339C425A30&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 509, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710649792\">\\n              \\n                <ol start=\"502\" class=\"pre-context\" id=\"pre2420710649792\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>        except Exception as exc:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"509\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>            response = self.handle_exception(exc)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'510\\' class=\"post-context\" id=\"post2420710649792\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>        return self.response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649792\\', \\'post2420710649792\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710649792\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method ProductView.get of &lt;product.views.ProductView object at 0x000002339C425A30&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002339C425A30&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 469, in handle_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710647552\">\\n              \\n                <ol start=\"462\" class=\"pre-context\" id=\"pre2420710647552\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>        response = exception_handler(exc, context)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>        if response is None:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"469\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'470\\' class=\"post-context\" id=\"post2420710647552\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>        response.exception = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>        return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647552\\', \\'post2420710647552\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710647552\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>context</td>\\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\\n &#x27;kwargs&#x27;: {},\\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;,\\n &#x27;view&#x27;: &lt;product.views.ProductView object at 0x000002339C425A30&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AttributeError(&quot;&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_product_category&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exception_handler</td>\\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000002339AC249D0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002339C425A30&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 480, in raise_uncaught_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420685374976\">\\n              \\n                <ol start=\"473\" class=\"pre-context\" id=\"pre2420685374976\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>            request = self.request</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"480\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>        raise exc</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'481\\' class=\"post-context\" id=\"post2420685374976\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>    # be overridden.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685374976\\', \\'post2420685374976\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420685374976\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AttributeError(&quot;&#x27;ProductSerializer&#x27; object has no attribute &#x27;get_product_category&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>renderer_format</td>\\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002339C425A30&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>use_plaintext_traceback</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 506, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710647744\">\\n              \\n                <ol start=\"499\" class=\"pre-context\" id=\"pre2420710647744\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>            # Get the appropriate handler method</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"506\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'507\\' class=\"post-context\" id=\"post2420710647744\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>        except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>            response = self.handle_exception(exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710647744\\', \\'post2420710647744\\')\"><pre>        return self.response</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710647744\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method ProductView.get of &lt;product.views.ProductView object at 0x000002339C425A30&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002339C425A30&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Desktop\\\\MyProjects\\\\Django projects\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 175, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710649664\">\\n              \\n                <ol start=\"168\" class=\"pre-context\" id=\"pre2420710649664\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>    def get_queryset(self):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>        return Product.objects.filter(customer_id=self.request.user.customer_id, status=1, valid_till__gt=date.today())</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>    def get(self, request, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>        queryset = self.filter_queryset(self.get_queryset())</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>        serializer = ProductSerializer(queryset, many=True)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"175\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>        return JsonResponse({&#x27;data&#x27;: serializer.data}, safe=False)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'176\\' class=\"post-context\" id=\"post2420710649664\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>    def post(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>        serializer = self.get_serializer(data=request.data)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>        serializer.is_valid(raise_exception=True)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>        serializer.save()</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649664\\', \\'post2420710649664\\')\"><pre>        return JsonResponse(serializer.data, status=201)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710649664\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>queryset</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/product/&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.ProductView object at 0x000002339C425A30&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>serializer</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    product_category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 768, in data\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420709106880\">\\n              \\n                <ol start=\"761\" class=\"pre-context\" id=\"pre2420709106880\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>        return representation.list_repr(self, indent=1)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>    # Include a backlink to the serializer class on return objects.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>    # Allows renderers such as HTMLFormRenderer to get the full field info.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>    @property</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>    def data(self):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"768\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>        ret = super().data</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'769\\' class=\"post-context\" id=\"post2420709106880\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>        return ReturnList(ret, serializer=self)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>    @property</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>    def errors(self):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>        ret = super().errors</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420709106880\\', \\'post2420709106880\\')\"><pre>        if isinstance(ret, list) and len(ret) == 1 and getattr(ret[0], &#x27;code&#x27;, None) == &#x27;null&#x27;:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420709106880\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>__class__</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;rest_framework.serializers.ListSerializer&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    product_category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 253, in data\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710649024\">\\n              \\n                <ol start=\"246\" class=\"pre-context\" id=\"pre2420710649024\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>                &#x27;You should either call `.is_valid()` first, &#x27;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>                &#x27;or access `.initial_data` instead.&#x27;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>            )</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>            raise AssertionError(msg)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>        if not hasattr(self, &#x27;_data&#x27;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>            if self.instance is not None and not getattr(self, &#x27;_errors&#x27;, None):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"253\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>                self._data = self.to_representation(self.instance)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'254\\' class=\"post-context\" id=\"post2420710649024\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>            elif hasattr(self, &#x27;_validated_data&#x27;) and not getattr(self, &#x27;_errors&#x27;, None):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>                self._data = self.to_representation(self.validated_data)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>            else:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>                self._data = self.get_initial()</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre>        return self._data</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649024\\', \\'post2420710649024\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710649024\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    product_category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 686, in to_representation\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710649216\">\\n              \\n                <ol start=\"679\" class=\"pre-context\" id=\"pre2420710649216\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        List of object instances -&gt; List of dicts of primitive datatypes.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        # Dealing with nested relationships, data can be a Manager,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        # so, first get a queryset from the Manager if needed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        iterable = data.all() if isinstance(data, models.Manager) else data</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"686\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        return [</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'687\\' class=\"post-context\" id=\"post2420710649216\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>            self.child.to_representation(item) for item in iterable</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        ]</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>    def validate(self, attrs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre>        return attrs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710649216\\', \\'post2420710649216\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710649216\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>data</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>iterable</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    product_category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 687, in &lt;listcomp&gt;\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710646656\">\\n              \\n                <ol start=\"680\" class=\"pre-context\" id=\"pre2420710646656\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>        List of object instances -&gt; List of dicts of primitive datatypes.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>        # Dealing with nested relationships, data can be a Manager,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>        # so, first get a queryset from the Manager if needed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>        iterable = data.all() if isinstance(data, models.Manager) else data</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>        return [</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"687\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>            self.child.to_representation(item) for item in iterable</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'688\\' class=\"post-context\" id=\"post2420710646656\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>        ]</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>    def validate(self, attrs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>        return attrs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646656\\', \\'post2420710646656\\')\"><pre>    def update(self, instance, validated_data):</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710646656\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>.0</td>\\n                    <td class=\"code\"><pre>&lt;list_iterator object at 0x000002339C61F2E0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>item</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;, many=True):\\n    id = IntegerField(read_only=True)\\n    product_category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py</code>, line 522, in to_representation\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420710646592\">\\n              \\n                <ol start=\"515\" class=\"pre-context\" id=\"pre2420710646592\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>            #</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>            # For related fields with `use_pk_only_optimization` we need to</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>            # resolve the pk value.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>            check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>            if check_for_none is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>                ret[field.field_name] = None</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>            else:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"522\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>                ret[field.field_name] = field.to_representation(attribute)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'523\\' class=\"post-context\" id=\"post2420710646592\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>        return ret</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>    def validate(self, attrs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre>        return attrs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420710646592\\', \\'post2420710646592\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420710646592\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>attribute</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>check_for_none</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>field</td>\\n                    <td class=\"code\"><pre>SerializerMethodField()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>fields</td>\\n                    <td class=\"code\"><pre>&lt;generator object Serializer._readable_fields at 0x000002339C58CD60&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>instance</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>ret</td>\\n                    <td class=\"code\"><pre>OrderedDict([(&#x27;id&#x27;, 5)])</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>ProductSerializer(&lt;QuerySet [&lt;Product: Juniper - M series - MX480&gt;, &lt;Product: Juniper - M series - MX481&gt;]&gt;):\\n    id = IntegerField(read_only=True)\\n    product_category = SerializerMethodField()\\n    sub_category_name = SerializerMethodField()\\n    category_name = SerializerMethodField()\\n    customer_name = SerializerMethodField()\\n    product_code = CharField(max_length=255)\\n    status = BooleanField()\\n    valid_till = DateField(allow_null=True, required=False)\\n    comments = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})\\n    created_at = DateTimeField(read_only=True)\\n    last_updated_at = DateTimeField(read_only=True)\\n    customer = PrimaryKeyRelatedField(queryset=Customer.objects.all())\\n    product_sub_category = PrimaryKeyRelatedField(queryset=ProductSubCategory.objects.all())\\n    last_updated_by = PrimaryKeyRelatedField(queryset=User.objects.all())</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\fields.py</code>, line 1837, in to_representation\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2420685471168\">\\n              \\n                <ol start=\"1830\" class=\"pre-context\" id=\"pre2420685471168\">\\n                \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>        # The method name defaults to `get_{field_name}`.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>        if self.method_name is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>            self.method_name = &#x27;get_{field_name}&#x27;.format(field_name=field_name)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>        super().bind(field_name, parent)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>    def to_representation(self, value):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1837\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>        method = getattr(self.parent, self.method_name)</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1838\\' class=\"post-context\" id=\"post2420685471168\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>        return method(value)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>class ModelField(Field):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>    &quot;&quot;&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2420685471168\\', \\'post2420685471168\\')\"><pre>    A generic field that can be used against an arbitrary model field.</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2420685471168\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>SerializerMethodField()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>value</td>\\n                    <td class=\"code\"><pre>&lt;Product: Juniper - M series - MX480&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n    </ul>\\n  </div>\\n\\n  <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\\n    <input type=\"hidden\" name=\"title\"\\n      value=\"AttributeError at /product/product/\">\\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\\nEnvironment:\\n\\n\\nRequest Method: GET\\nRequest URL: http://127.0.0.1:8000/product/product/\\n\\nDjango Version: 4.2.9\\nPython Version: 3.8.2\\nInstalled Applications:\\n[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]\\nInstalled Middleware:\\n[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]\\n\\n\\n\\nTraceback (most recent call last):\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py\", line 55, in inner\\n    response = get_response(request)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 197, in _get_response\\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py\", line 56, in wrapper_view\\n    return view_func(*args, **kwargs)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py\", line 104, in view\\n    return self.dispatch(request, *args, **kwargs)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 509, in dispatch\\n    response = self.handle_exception(exc)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 469, in handle_exception\\n    self.raise_uncaught_exception(exc)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 480, in raise_uncaught_exception\\n    raise exc\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 506, in dispatch\\n    response = handler(request, *args, **kwargs)\\n  File \"C:\\\\Users\\\\dchan\\\\Desktop\\\\MyProjects\\\\Django projects\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 175, in get\\n    return JsonResponse({&#x27;data&#x27;: serializer.data}, safe=False)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 768, in data\\n    ret = super().data\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 253, in data\\n    self._data = self.to_representation(self.instance)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 686, in to_representation\\n    return [\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 687, in &lt;listcomp&gt;\\n    self.child.to_representation(item) for item in iterable\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\serializers.py\", line 522, in to_representation\\n    ret[field.field_name] = field.to_representation(attribute)\\n  File \"C:\\\\Users\\\\dchan\\\\Envs\\\\gen_ai\\\\lib\\\\site-packages\\\\rest_framework\\\\fields.py\", line 1837, in to_representation\\n    method = getattr(self.parent, self.method_name)\\n\\nException Type: AttributeError at /product/product/\\nException Value: &#x27;ProductSerializer&#x27; object has no attribute &#x27;get_product_category&#x27;\\n</textarea>\\n  <br><br>\\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\\n  </div>\\n</form>\\n\\n</div>\\n\\n\\n<div id=\"requestinfo\">\\n  <h2>Request information</h2>\\n\\n\\n  \\n    <h3 id=\"user-info\">USER</h3>\\n    <p>Juniper - damodar</p>\\n  \\n\\n  <h3 id=\"get-info\">GET</h3>\\n  \\n    <p>No GET data</p>\\n  \\n\\n  <h3 id=\"post-info\">POST</h3>\\n  \\n    <p>No POST data</p>\\n  \\n\\n  <h3 id=\"files-info\">FILES</h3>\\n  \\n    <p>No FILES data</p>\\n  \\n\\n  <h3 id=\"cookie-info\">COOKIES</h3>\\n  \\n    <p>No cookie data</p>\\n  \\n\\n  <h3 id=\"meta-info\">META</h3>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Variable</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ALLUSERSPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\crashpad_22124_JYKBDZNVGTWMTVZW&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COLORTERM</td>\\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMPUTERNAME</td>\\n          <td class=\"code\"><pre>&#x27;DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMSPEC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\cmd.exe&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_LENGTH</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;text/plain&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DJANGO_SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DRIVERDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Drivers\\\\\\\\DriverData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EFC_660</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GATEWAY_INTERFACE</td>\\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GIT_ASKPASS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEPATH</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\Users\\\\\\\\dchan&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT</td>\\n          <td class=\"code\"><pre>&#x27;*/*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT_ENCODING</td>\\n          <td class=\"code\"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_AUTHORIZATION</td>\\n          <td class=\"code\"><pre>&#x27;Basic ZGFtb2RhcjoxMjM0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CACHE_CONTROL</td>\\n          <td class=\"code\"><pre>&#x27;no-cache&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CONNECTION</td>\\n          <td class=\"code\"><pre>&#x27;keep-alive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_HOST</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_POSTMAN_TOKEN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_USER_AGENT</td>\\n          <td class=\"code\"><pre>&#x27;PostmanRuntime/7.36.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGCCSVC_DB</td>\\n          <td class=\"code\"><pre>&#x27;AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA5nWnNLJ9f0m6cNhIBYx3TQQAAAACAAAAAAAQZgAAAAEAACAAAAAuWdB2lDmu34jM2z5vpcE7AAYIkaBf/yoQxwh5fjtu1gAAAAAOgAAAAAIAACAAAAA79pI7yx5QydqftHE6vHoebmXFuuEo4Sl/2mpCnMQzH2AAAABhjVGXeRxng5wiiTxdYscz76/pmVM2sBuVQgxilUm341xHn0l3PHKpoc0AN4h8A7FQ3HHOkxRmvLFmOacJywUlCFTMTRrwFCIdfBjQMGDw5+NgoX4zqTYqnoiR8KxyPqxAAAAAOeRVJa7MNOXqP+ZS7SFu9YSzTuWO3gqJG6ixsnrw9u8VeukKKcOKhd9wJuhSledyfbjbn5GAwOy1KDrvWXmGWw==&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANG</td>\\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALAPPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGONSERVER</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_OF_PROCESSORS</td>\\n          <td class=\"code\"><pre>&#x27;8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_SYMLINK</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\nodejs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVECONSUMER</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>OS</td>\\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\Scripts;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\NVIDIA Corporation\\\\\\\\NVIDIA NvDLISR;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\dotnet\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;%NVM_HOME%;%NVM_SYMLINK%;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\Program Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Docker\\\\\\\\Docker\\\\\\\\resources\\\\\\\\bin;C:\\\\\\\\Program Files (x86)\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python38\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python38\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python36\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python36\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\NVIDIA Corporation\\\\\\\\NVIDIA NvDLISR;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\dotnet\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\JetBrains\\\\\\\\PyCharm Community Edition &#x27;\\n &#x27;2022.2.1\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Python34\\\\\\\\Scripts;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\.dotnet\\\\\\\\tools&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATHEXT</td>\\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH_INFO</td>\\n          <td class=\"code\"><pre>&#x27;/product/product/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_ARCHITECTURE</td>\\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_IDENTIFIER</td>\\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 140 Stepping 2, GenuineIntel&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_LEVEL</td>\\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_REVISION</td>\\n          <td class=\"code\"><pre>&#x27;8c02&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;(gen_ai) $P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PSMODULEPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\WindowsPowerShell\\\\\\\\Modules;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\Modules&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PUBLIC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\Public&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYCHARM COMMUNITY EDITION</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\JetBrains\\\\\\\\PyCharm Community Edition 2022.2.1\\\\\\\\bin;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>QUERY_STRING</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_ADDR</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_HOST</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REQUEST_METHOD</td>\\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>RUN_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PORT</td>\\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PROTOCOL</td>\\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_SOFTWARE</td>\\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSIONNAME</td>\\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM</td>\\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM_VERSION</td>\\n          <td class=\"code\"><pre>&#x27;1.86.0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN</td>\\n          <td class=\"code\"><pre>&#x27;DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;DESKTOP-AM34CTE&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERNAME</td>\\n          <td class=\"code\"><pre>&#x27;dchan&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VENV</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUALENVWRAPPER_PROJECT_FILENAME</td>\\n          <td class=\"code\"><pre>&#x27;.project&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs\\\\\\\\gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_IPC_HANDLE</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-git-a662e7630b-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WINDIR</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WORKON_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Envs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ZES_ENABLE_SYSMAN</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\NVIDIA Corporation\\\\\\\\NVIDIA NvDLISR;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\dotnet\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;%NVM_HOME%;%NVM_SYMLINK%;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\Program Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Docker\\\\\\\\Docker\\\\\\\\resources\\\\\\\\bin;C:\\\\\\\\Program Files (x86)\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python38\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python38\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python36\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python36\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\NVIDIA Corporation\\\\\\\\NVIDIA NvDLISR;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\dotnet\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\JetBrains\\\\\\\\PyCharm Community Edition &#x27;\\n &#x27;2022.2.1\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Python34\\\\\\\\Scripts;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\.dotnet\\\\\\\\tools&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;$P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>__PSLOCKDOWNPOLICY</td>\\n          <td class=\"code\"><pre>&#x27;0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.errors</td>\\n          <td class=\"code\"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.file_wrapper</td>\\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.input</td>\\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x000002339C61FB20&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multiprocess</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multithread</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.run_once</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.url_scheme</td>\\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.version</td>\\n          <td class=\"code\"><pre>(1, 0)</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n\\n  <h3 id=\"settings-info\">Settings</h3>\\n  <h4>Using settings module <code>user.settings</code></h4>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Setting</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ABSOLUTE_URL_OVERRIDES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ADMINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ALLOWED_HOSTS</td>\\n          <td class=\"code\"><pre>[&#x27;*&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPEND_SLASH</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTHENTICATION_BACKENDS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_PASSWORD_VALIDATORS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_USER_MODEL</td>\\n          <td class=\"code\"><pre>&#x27;user.User&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>BASE_DIR</td>\\n          <td class=\"code\"><pre>WindowsPath(&#x27;C:/Users/dchan/Desktop/MyProjects/Django projects/GEN_AI_BACKEND&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\\n          <td class=\"code\"><pre>600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_ORIGINS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_CREDENTIALS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>31449600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_MASKED</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_FAILURE_VIEW</td>\\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_HEADER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_TRUSTED_ORIGINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_USE_SESSIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\\n             &#x27;AUTOCOMMIT&#x27;: True,\\n             &#x27;CONN_HEALTH_CHECKS&#x27;: False,\\n             &#x27;CONN_MAX_AGE&#x27;: 0,\\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,\\n             &#x27;HOST&#x27;: &#x27;gen-ai.c54r5svdjqsu.us-west-2.rds.amazonaws.com&#x27;,\\n             &#x27;NAME&#x27;: &#x27;GEN_AI&#x27;,\\n             &#x27;OPTIONS&#x27;: {},\\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\\n             &#x27;PORT&#x27;: &#x27;3306&#x27;,\\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\\n                      &#x27;COLLATION&#x27;: None,\\n                      &#x27;MIGRATE&#x27;: True,\\n                      &#x27;MIRROR&#x27;: None,\\n                      &#x27;NAME&#x27;: None},\\n             &#x27;TIME_ZONE&#x27;: None,\\n             &#x27;USER&#x27;: &#x27;admin&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASE_ROUTERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\\n          <td class=\"code\"><pre>1000</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>\\n          <td class=\"code\"><pre>100</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\\n &#x27;%Y-%m-%d %H:%M&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%Y %H:%M&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\\n &#x27;%m/%d/%Y&#x27;,\\n &#x27;%m/%d/%y&#x27;,\\n &#x27;%b %d %Y&#x27;,\\n &#x27;%b %d, %Y&#x27;,\\n &#x27;%d %b %Y&#x27;,\\n &#x27;%d %b, %Y&#x27;,\\n &#x27;%B %d %Y&#x27;,\\n &#x27;%B %d, %Y&#x27;,\\n &#x27;%d %B %Y&#x27;,\\n &#x27;%d %B, %Y&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DECIMAL_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_AUTO_FIELD</td>\\n          <td class=\"code\"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_CHARSET</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FILE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FROM_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_INDEX_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DISALLOWED_USER_AGENTS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST</td>\\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_PASSWORD</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_USER</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_PORT</td>\\n          <td class=\"code\"><pre>25</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_CERTFILE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_KEYFILE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SUBJECT_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_TIMEOUT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_LOCALTIME</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_SSL</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_TLS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_HANDLERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_PERMISSIONS</td>\\n          <td class=\"code\"><pre>420</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_TEMP_DIR</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIRST_DAY_OF_WEEK</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIXTURE_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORCE_SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMAT_MODULE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORM_RENDERER</td>\\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGNORABLE_404_URLS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INSTALLED_APPS</td>\\n          <td class=\"code\"><pre>[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INTERNAL_IPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES</td>\\n          <td class=\"code\"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\\n (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),\\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\\n (&#x27;de&#x27;, &#x27;German&#x27;),\\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\\n (&#x27;en&#x27;, &#x27;English&#x27;),\\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\\n (&#x27;fr&#x27;, &#x27;French&#x27;),\\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\\n (&#x27;ms&#x27;, &#x27;Malay&#x27;),\\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\\n (&#x27;nb&#x27;, &#x27;Norwegian Bokm\\xc3\\xa5l&#x27;),\\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES_BIDI</td>\\n          <td class=\"code\"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_CODE</td>\\n          <td class=\"code\"><pre>&#x27;en-us&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;django_language&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALE_PATHS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING</td>\\n          <td class=\"code\"><pre>{&#x27;disable_existing_loggers&#x27;: False,\\n &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},\\n              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,\\n                       &#x27;filename&#x27;: &#x27;C:\\\\\\\\Users\\\\\\\\dchan\\\\\\\\Desktop\\\\\\\\MyProjects\\\\\\\\Django &#x27;\\n                                   &#x27;projects\\\\\\\\GEN_AI_BACKEND/log/log_file.log&#x27;,\\n                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},\\n &#x27;root&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;], &#x27;level&#x27;: &#x27;NOTSET&#x27;},\\n &#x27;version&#x27;: 1}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/profile/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/login/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGOUT_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MANAGERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_ROOT</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_URL</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MESSAGE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIDDLEWARE</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIGRATION_MODULES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MONTH_DAY_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F j&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_GROUPING</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_HASHERS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_RESET_TIMEOUT</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PREPEND_WWW</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REST_FRAMEWORK</td>\\n          <td class=\"code\"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework.authentication.TokenAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.BasicAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.SessionAuthentication&#x27;],\\n &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],\\n &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;rest_framework.renderers.JSONRenderer&#x27;]}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ROOT_URLCONF</td>\\n          <td class=\"code\"><pre>&#x27;user.urls&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY_FALLBACKS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_PRELOAD</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_SECONDS</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_PROXY_SSL_HEADER</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REDIRECT_EXEMPT</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REFERRER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_HOST</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_REDIRECT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;root@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_CACHE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>1209600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;sessionid&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_ENGINE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_FILE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SERIALIZER</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SIGNING_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SILENCED_SYSTEM_CHECKS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_FINDERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_ROOT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_URL</td>\\n          <td class=\"code\"><pre>&#x27;/static/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STORAGES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},\\n &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMPLATES</td>\\n          <td class=\"code\"><pre>[{&#x27;APP_DIRS&#x27;: True,\\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\\n  &#x27;DIRS&#x27;: [],\\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\\n                                     &#x27;django.template.context_processors.request&#x27;,\\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_NON_SERIALIZED_APPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_RUNNER</td>\\n          <td class=\"code\"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;,&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_ZONE</td>\\n          <td class=\"code\"><pre>&#x27;UTC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_DEPRECATED_PYTZ</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_I18N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_L10N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_TZ</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_HOST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_PORT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WSGI_APPLICATION</td>\\n          <td class=\"code\"><pre>&#x27;user.wsgi.application&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>X_FRAME_OPTIONS</td>\\n          <td class=\"code\"><pre>&#x27;DENY&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>YEAR_MONTH_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F Y&#x27;</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n  <div id=\"explanation\">\\n    <p>\\n      You\\xe2\\x80\\x99re seeing this error because you have <code>DEBUG = True</code> in your\\n      Django settings file. Change that to <code>False</code>, and Django will\\n      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'"}}, {"model": "user.requesttracking", "pk": 876, "fields": {"request_id": "1ad237be0b694ff285837f33e14b88a4", "start_time": "2024-02-07T09:58:22.382Z", "end_time": "2024-02-07T09:59:26.702Z", "created_by": 2, "time_taken": 64.318398, "api": "/product/generate_test_cases/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [2],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "POST", "status": "200", "error_message": ""}}, {"model": "user.requesttracking", "pk": 877, "fields": {"request_id": "006bb50ff2bd4381898266a1b37e17b2", "start_time": "2024-02-07T09:59:42.933Z", "end_time": "2024-02-07T09:59:45.485Z", "created_by": 2, "time_taken": 2.551872, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 878, "fields": {"request_id": "941f33328d7e443ea60b75082c4244f0", "start_time": "2024-02-07T10:19:44.784Z", "end_time": "2024-02-07T10:19:44.784Z", "created_by": 2, "time_taken": 0.000182, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 879, "fields": {"request_id": "c259e69310c944b987469963b088da5a", "start_time": "2024-02-07T10:19:45.576Z", "end_time": "2024-02-07T10:19:45.576Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 880, "fields": {"request_id": "06809b6d0819460d975847811268c92d", "start_time": "2024-02-07T10:19:46.111Z", "end_time": "2024-02-07T10:19:46.111Z", "created_by": 2, "time_taken": 0.000142, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 881, "fields": {"request_id": "538f74c29078436abcad75708d3c8561", "start_time": "2024-02-07T10:23:59.035Z", "end_time": "2024-02-07T10:23:59.035Z", "created_by": 2, "time_taken": 0.000109, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 882, "fields": {"request_id": "99560af238f94730bbcaa523804e1eae", "start_time": "2024-02-07T10:23:59.035Z", "end_time": "2024-02-07T10:23:59.035Z", "created_by": 2, "time_taken": 0.000147, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 883, "fields": {"request_id": "9037388d69f14232bfff725fff1c6c04", "start_time": "2024-02-07T10:24:00.218Z", "end_time": "2024-02-07T10:24:00.218Z", "created_by": 2, "time_taken": 9.2e-05, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 884, "fields": {"request_id": "9f76596c56814f499e47549ffbc9dd79", "start_time": "2024-02-07T10:24:00.347Z", "end_time": "2024-02-07T10:24:00.347Z", "created_by": 2, "time_taken": 0.000139, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 885, "fields": {"request_id": "b618e709e3a94268a64aef0addd0f97c", "start_time": "2024-02-07T10:24:00.478Z", "end_time": "2024-02-07T10:24:00.478Z", "created_by": 2, "time_taken": 0.000132, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 886, "fields": {"request_id": "3f6469f6a52847e194f0745c29febb58", "start_time": "2024-02-07T10:24:00.980Z", "end_time": "2024-02-07T10:24:00.980Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 887, "fields": {"request_id": "bd999e4b3de34d8892470593a2d1f895", "start_time": "2024-02-07T10:24:01.112Z", "end_time": "2024-02-07T10:24:01.112Z", "created_by": 2, "time_taken": 0.000133, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 888, "fields": {"request_id": "3113dd77a54d4b339e143ac3e8fa0b64", "start_time": "2024-02-07T10:24:01.528Z", "end_time": "2024-02-07T10:24:01.528Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 889, "fields": {"request_id": "00a94707e1c64a7c927d1b11ccaee7e3", "start_time": "2024-02-07T10:24:01.659Z", "end_time": "2024-02-07T10:24:01.659Z", "created_by": 2, "time_taken": 0.000162, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 890, "fields": {"request_id": "74c6df46e0954442939250b6d6a271d1", "start_time": "2024-02-07T10:24:02.251Z", "end_time": "2024-02-07T10:24:02.251Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 891, "fields": {"request_id": "bde3a582d287429fb1379366f05be453", "start_time": "2024-02-07T10:24:02.346Z", "end_time": "2024-02-07T10:24:02.346Z", "created_by": 2, "time_taken": 0.000129, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 892, "fields": {"request_id": "679acdd00f904a308f4b1e38f1994013", "start_time": "2024-02-07T10:24:02.959Z", "end_time": "2024-02-07T10:24:02.959Z", "created_by": 2, "time_taken": 0.000136, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 893, "fields": {"request_id": "8a56648b665c46ffa8dd91d81fbca660", "start_time": "2024-02-07T10:24:52.906Z", "end_time": "2024-02-07T10:24:52.906Z", "created_by": 2, "time_taken": 0.000141, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 894, "fields": {"request_id": "49f731d9f948409a82c96de7f2c0a8cd", "start_time": "2024-02-07T10:24:52.935Z", "end_time": "2024-02-07T10:24:52.935Z", "created_by": 2, "time_taken": 0.000121, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 895, "fields": {"request_id": "0f2b3115305146688994c59eb3c0aaf0", "start_time": "2024-02-07T10:24:53.707Z", "end_time": "2024-02-07T10:24:53.707Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 896, "fields": {"request_id": "ba73b592fbb34c358111699569bdadf3", "start_time": "2024-02-07T10:24:53.765Z", "end_time": "2024-02-07T10:24:53.765Z", "created_by": 2, "time_taken": 0.00013, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 897, "fields": {"request_id": "5e446d75786247b68f53a510a99971f2", "start_time": "2024-02-07T10:24:54.255Z", "end_time": "2024-02-07T10:24:54.255Z", "created_by": 2, "time_taken": 0.000142, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 898, "fields": {"request_id": "d1ee809721d546b5bae907c45cf8ec5a", "start_time": "2024-02-07T10:24:54.338Z", "end_time": "2024-02-07T10:24:54.339Z", "created_by": 2, "time_taken": 0.000131, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 899, "fields": {"request_id": "02bc9a2f9e49499a8d04e920c26b580d", "start_time": "2024-02-07T10:24:57.764Z", "end_time": "2024-02-07T10:24:57.764Z", "created_by": 2, "time_taken": 0.000133, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 900, "fields": {"request_id": "07243e971e954660b1b620bd79689abe", "start_time": "2024-02-07T10:24:58.601Z", "end_time": "2024-02-07T10:24:58.601Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 901, "fields": {"request_id": "ef1370ea8c9243f994e8211b9bb60031", "start_time": "2024-02-07T10:24:59.174Z", "end_time": "2024-02-07T10:24:59.174Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 902, "fields": {"request_id": "9dd990e44faf4479a2223d053bb46626", "start_time": "2024-02-07T10:25:02.773Z", "end_time": "2024-02-07T10:25:02.773Z", "created_by": 2, "time_taken": 0.000145, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 903, "fields": {"request_id": "d85e214ff497429f9057bebd07dd79a2", "start_time": "2024-02-07T10:25:03.610Z", "end_time": "2024-02-07T10:25:03.610Z", "created_by": 2, "time_taken": 0.000133, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 904, "fields": {"request_id": "f68b25ecda644c4396ad78f0855cf186", "start_time": "2024-02-07T10:25:04.182Z", "end_time": "2024-02-07T10:25:04.182Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 905, "fields": {"request_id": "4a49d32d4e1a40eebb32db84f9e0b24b", "start_time": "2024-02-07T10:29:14.122Z", "end_time": "2024-02-07T10:29:14.122Z", "created_by": 2, "time_taken": 0.000132, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 906, "fields": {"request_id": "70acc96266c6462ea88ebb5b34d9393f", "start_time": "2024-02-07T10:29:14.962Z", "end_time": "2024-02-07T10:29:14.962Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 907, "fields": {"request_id": "336b740167ed420884706a7375e583b5", "start_time": "2024-02-07T10:29:15.536Z", "end_time": "2024-02-07T10:29:15.536Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 908, "fields": {"request_id": "e267fe1182a440269fbced7ad29c76c8", "start_time": "2024-02-07T10:29:19.797Z", "end_time": "2024-02-07T10:29:19.797Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 909, "fields": {"request_id": "0c989065ecf2487687bf573cd69278ea", "start_time": "2024-02-07T10:29:19.822Z", "end_time": "2024-02-07T10:29:19.822Z", "created_by": 2, "time_taken": 0.000102, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 910, "fields": {"request_id": "e1fc2bf7154f4f27810df8a9417da17e", "start_time": "2024-02-07T10:29:20.607Z", "end_time": "2024-02-07T10:29:20.607Z", "created_by": 2, "time_taken": 0.000173, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 911, "fields": {"request_id": "26b181cb55844ccb9141de6fd21c545d", "start_time": "2024-02-07T10:29:20.660Z", "end_time": "2024-02-07T10:29:20.660Z", "created_by": 2, "time_taken": 0.000131, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 912, "fields": {"request_id": "67e1c3a6419f48399bdb0147e4de84e2", "start_time": "2024-02-07T10:29:21.155Z", "end_time": "2024-02-07T10:29:21.155Z", "created_by": 2, "time_taken": 0.00013, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 913, "fields": {"request_id": "933ae277aca44932a3d453d17983351c", "start_time": "2024-02-07T10:29:21.235Z", "end_time": "2024-02-07T10:29:21.236Z", "created_by": 2, "time_taken": 0.00013, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 914, "fields": {"request_id": "6359df7ddfb848cbaa62ab14ad333662", "start_time": "2024-02-07T10:29:27.383Z", "end_time": "2024-02-07T10:29:27.383Z", "created_by": 2, "time_taken": 0.000139, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 915, "fields": {"request_id": "6c981c99b5c74d8e96c389259d0b1f98", "start_time": "2024-02-07T10:29:28.290Z", "end_time": "2024-02-07T10:29:28.290Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 916, "fields": {"request_id": "5a95cd3fc3cd4273802612fb979a5d73", "start_time": "2024-02-07T10:29:28.453Z", "end_time": "2024-02-07T10:29:28.453Z", "created_by": 2, "time_taken": 0.000136, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 917, "fields": {"request_id": "29760e9ca28348faa6f889ed7a775ad8", "start_time": "2024-02-07T10:29:28.913Z", "end_time": "2024-02-07T10:29:28.914Z", "created_by": 2, "time_taken": 0.000136, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 918, "fields": {"request_id": "0dd33857b48a4049aaac48922c63e3db", "start_time": "2024-02-07T10:29:29.294Z", "end_time": "2024-02-07T10:29:29.294Z", "created_by": 2, "time_taken": 0.000141, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 919, "fields": {"request_id": "bbbff976752c4c24a02d6d3863a00f74", "start_time": "2024-02-07T10:29:29.865Z", "end_time": "2024-02-07T10:29:29.865Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 920, "fields": {"request_id": "d18cf61c691d4d76932336e4e98dd7e8", "start_time": "2024-02-07T10:29:30.917Z", "end_time": "2024-02-07T10:29:30.917Z", "created_by": 2, "time_taken": 0.000169, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 921, "fields": {"request_id": "ac53c08b5f154f86ba3f3a042dd0d185", "start_time": "2024-02-07T10:29:31.495Z", "end_time": "2024-02-07T10:29:31.495Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 922, "fields": {"request_id": "ac6e0323fed84f4790714b5a81330f4d", "start_time": "2024-02-07T10:29:32.069Z", "end_time": "2024-02-07T10:29:32.069Z", "created_by": 2, "time_taken": 0.000181, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 923, "fields": {"request_id": "44e146b8d4004108aab1b1b138041238", "start_time": "2024-02-07T10:31:34.131Z", "end_time": "2024-02-07T10:31:35.067Z", "created_by": 2, "time_taken": 0.935669, "api": "/product/generate_test_cases/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "500", "error_message": "b'<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\\n  <title>AssertionError\\n          at /product/generate_test_cases/</title>\\n  <style type=\"text/css\">\\n    html * { padding:0; margin:0; }\\n    body * { padding:10px 20px; }\\n    body * * { padding:0; }\\n    body { font:small sans-serif; background-color:#fff; color:#000; }\\n    body>div { border-bottom:1px solid #ddd; }\\n    h1 { font-weight:normal; }\\n    h2 { margin-bottom:.8em; }\\n    h3 { margin:1em 0 .5em 0; }\\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\\n    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }\\n    summary { cursor: pointer; }\\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\\n    thead th {\\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\\n    }\\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\\n    table.vars { margin:5px 10px 2px 40px; width: auto; }\\n    table.vars td, table.req td { font-family:monospace; }\\n    table td.code { width:100%; }\\n    table td.code pre { overflow:hidden; }\\n    table.source th { color:#666; }\\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\\n    ul.traceback { list-style-type:none; color: #222; }\\n    ul.traceback li.cause { word-break: break-word; }\\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\\n    div.context { padding:10px 0; overflow:hidden; }\\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\\n    div.context ol li pre { display:inline; }\\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\\n    div.context ol.context-line li span { position:absolute; right:32px; }\\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\\n    .user div.context ol li { color:#666; }\\n    div.commands, summary.commands { margin-left: 40px; }\\n    div.commands a, summary.commands { color:#555; text-decoration:none; }\\n    .user div.commands a { color: black; }\\n    #summary { background: #ffc; }\\n    #summary h2 { font-weight: normal; color: #666; }\\n    #explanation { background:#eee; }\\n    #template, #template-not-exist { background:#f6f6f6; }\\n    #template-not-exist ul { margin: 0 0 10px 20px; }\\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\\n    #unicode-hint { background:#eee; }\\n    #traceback { background:#eee; }\\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\\n    #summary table { border:none; background:transparent; }\\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\\n    #requestinfo h3 { margin-bottom:-1em; }\\n    .error { background: #ffc; }\\n    .specific { color:#cc3300; font-weight:bold; }\\n    h2 span.commands { font-size:.7em; font-weight:normal; }\\n    span.commands a:link {color:#5E5694;}\\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\\n    .append-bottom { margin-bottom: 10px; }\\n    .fname { user-select: all; }\\n  </style>\\n  \\n  <script>\\n    function hideAll(elems) {\\n      for (var e = 0; e < elems.length; e++) {\\n        elems[e].style.display = \\'none\\';\\n      }\\n    }\\n    window.onload = function() {\\n      hideAll(document.querySelectorAll(\\'ol.pre-context\\'));\\n      hideAll(document.querySelectorAll(\\'ol.post-context\\'));\\n      hideAll(document.querySelectorAll(\\'div.pastebin\\'));\\n    }\\n    function toggle() {\\n      for (var i = 0; i < arguments.length; i++) {\\n        var e = document.getElementById(arguments[i]);\\n        if (e) {\\n          e.style.display = e.style.display == \\'none\\' ? \\'block\\': \\'none\\';\\n        }\\n      }\\n      return false;\\n    }\\n    function switchPastebinFriendly(link) {\\n      s1 = \"Switch to copy-and-paste view\";\\n      s2 = \"Switch back to interactive view\";\\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\\n      toggle(\\'browserTraceback\\', \\'pastebinTraceback\\');\\n      return false;\\n    }\\n  </script>\\n  \\n</head>\\n<body>\\n<div id=\"summary\">\\n  <h1>AssertionError\\n       at /product/generate_test_cases/</h1>\\n  <pre class=\"exception_value\">&#x27;GenerateTestCases&#x27; should either include a `queryset` attribute, or override the `get_queryset()` method.</pre>\\n  <table class=\"meta\">\\n\\n    <tr>\\n      <th>Request Method:</th>\\n      <td>GET</td>\\n    </tr>\\n    <tr>\\n      <th>Request URL:</th>\\n      <td>http://127.0.0.1:8000/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Django Version:</th>\\n      <td>5.0.1</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Exception Type:</th>\\n      <td>AssertionError</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Value:</th>\\n      <td><pre>&#x27;GenerateTestCases&#x27; should either include a `queryset` attribute, or override the `get_queryset()` method.</pre></td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Location:</th>\\n      <td><span class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\generics.py</span>, line 63, in get_queryset</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Raised during:</th>\\n      <td>product.views.GenerateTestCases</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Python Executable:</th>\\n      <td>C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Scripts\\\\python.exe</td>\\n    </tr>\\n    <tr>\\n      <th>Python Version:</th>\\n      <td>3.11.1</td>\\n    </tr>\\n    <tr>\\n      <th>Python Path:</th>\\n      <td><pre>[&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND&#x27;,\\n &#x27;c:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\ms-python.python-2023.22.1\\\\\\\\pythonFiles\\\\\\\\lib\\\\\\\\python\\\\\\\\debugpy\\\\\\\\_vendored\\\\\\\\pydevd&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\python311.zip&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\DLLs&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Lib&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai\\\\\\\\Lib\\\\\\\\site-packages&#x27;]</pre></td>\\n    </tr>\\n    <tr>\\n      <th>Server time:</th>\\n      <td>Wed, 07 Feb 2024 10:31:34 +0000</td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n\\n\\n<div id=\"traceback\">\\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\\n    Switch to copy-and-paste view</a></span>\\n  </h2>\\n  <div id=\"browserTraceback\">\\n    <ul class=\"traceback\">\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py</code>, line 55, in inner\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395873004416\">\\n              \\n                <ol start=\"48\" class=\"pre-context\" id=\"pre1395873004416\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>        return inner</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>        @wraps(get_response)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>        def inner(request):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"55\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>                response = get_response(request)\\n                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'56\\' class=\"post-context\" id=\"post1395873004416\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>            except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>            return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre>        return inner</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873004416\\', \\'post1395873004416\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395873004416\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AssertionError(&quot;&#x27;GenerateTestCases&#x27; should either include a `queryset` attribute, or override the `get_queryset()` method.&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>get_response</td>\\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001457C45B950&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py</code>, line 197, in _get_response\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395872994944\">\\n              \\n                <ol start=\"190\" class=\"pre-context\" id=\"pre1395872994944\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>        if response is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"197\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'198\\' class=\"post-context\" id=\"post1395872994944\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>            except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>                if response is None:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>                    raise</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872994944\\', \\'post1395872994944\\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395872994944\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000001457FDA39C0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>middleware_method</td>\\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001457C45B950&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>wrapped_callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000001457FDA39C0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py</code>, line 65, in _view_wrapper\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395873002688\">\\n              \\n                <ol start=\"58\" class=\"pre-context\" id=\"pre1395873002688\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre>            return await view_func(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"65\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre>            return view_func(request, *args, **kwargs)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'66\\' class=\"post-context\" id=\"post1395873002688\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre>    _view_wrapper.csrf_exempt = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395873002688\\', \\'post1395873002688\\')\"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395873002688\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>view_func</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000001457FDA3920&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py</code>, line 104, in view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395866874368\">\\n              \\n                <ol start=\"97\" class=\"pre-context\" id=\"pre1395866874368\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>            self = cls(**initkwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>                raise AttributeError(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>                )</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"104\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>            return self.dispatch(request, *args, **kwargs)\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'105\\' class=\"post-context\" id=\"post1395866874368\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>        view.view_class = cls</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395866874368\\', \\'post1395866874368\\')\"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395866874368\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>cls</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;product.views.GenerateTestCases&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>initkwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 509, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395872989440\">\\n              \\n                <ol start=\"502\" class=\"pre-context\" id=\"pre1395872989440\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>        except Exception as exc:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"509\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>            response = self.handle_exception(exc)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'510\\' class=\"post-context\" id=\"post1395872989440\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>        return self.response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989440\\', \\'post1395872989440\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395872989440\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method ListAPIView.get of &lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 469, in handle_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395872989312\">\\n              \\n                <ol start=\"462\" class=\"pre-context\" id=\"pre1395872989312\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>        response = exception_handler(exc, context)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>        if response is None:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"469\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>            self.raise_uncaught_exception(exc)\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'470\\' class=\"post-context\" id=\"post1395872989312\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>        response.exception = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>        return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872989312\\', \\'post1395872989312\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395872989312\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>context</td>\\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\\n &#x27;kwargs&#x27;: {},\\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;,\\n &#x27;view&#x27;: &lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AssertionError(&quot;&#x27;GenerateTestCases&#x27; should either include a `queryset` attribute, or override the `get_queryset()` method.&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exception_handler</td>\\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000001457D0E94E0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 480, in raise_uncaught_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395872995136\">\\n              \\n                <ol start=\"473\" class=\"pre-context\" id=\"pre1395872995136\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>            request = self.request</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"480\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>        raise exc\\n             ^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'481\\' class=\"post-context\" id=\"post1395872995136\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>    # be overridden.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872995136\\', \\'post1395872995136\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395872995136\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>AssertionError(&quot;&#x27;GenerateTestCases&#x27; should either include a `queryset` attribute, or override the `get_queryset()` method.&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>renderer_format</td>\\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>use_plaintext_traceback</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 506, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395872991424\">\\n              \\n                <ol start=\"499\" class=\"pre-context\" id=\"pre1395872991424\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>            # Get the appropriate handler method</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"506\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>            response = handler(request, *args, **kwargs)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'507\\' class=\"post-context\" id=\"post1395872991424\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>        except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>            response = self.handle_exception(exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872991424\\', \\'post1395872991424\\')\"><pre>        return self.response</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395872991424\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method ListAPIView.get of &lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\generics.py</code>, line 199, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395869276224\">\\n              \\n                <ol start=\"192\" class=\"pre-context\" id=\"pre1395869276224\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>class ListAPIView(mixins.ListModelMixin,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>                  GenericAPIView):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>    &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>    Concrete view for listing a queryset.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>    &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>    def get(self, request, *args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"199\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>        return self.list(request, *args, **kwargs)\\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'200\\' class=\"post-context\" id=\"post1395869276224\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>class RetrieveAPIView(mixins.RetrieveModelMixin,</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>                      GenericAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>    &quot;&quot;&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869276224\\', \\'post1395869276224\\')\"><pre>    Concrete view for retrieving a model instance.</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395869276224\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\mixins.py</code>, line 38, in list\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395872996160\">\\n              \\n                <ol start=\"31\" class=\"pre-context\" id=\"pre1395872996160\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>class ListModelMixin:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>    &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>    List a queryset.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>    &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>    def list(self, request, *args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"38\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>        queryset = self.filter_queryset(self.get_queryset())\\n                                            ^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'39\\' class=\"post-context\" id=\"post1395872996160\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>        page = self.paginate_queryset(queryset)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>        if page is not None:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>            serializer = self.get_serializer(page, many=True)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre>            return self.get_paginated_response(serializer.data)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872996160\\', \\'post1395872996160\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395872996160\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\generics.py</code>, line 63, in get_queryset\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395867692544\">\\n              \\n                <ol start=\"56\" class=\"pre-context\" id=\"pre1395867692544\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>        are cached for all subsequent requests.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>        You may want to override this if you need to provide different</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>        querysets depending on the incoming request.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>        (Eg. return a list of items that is specific to the user)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"63\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>        assert self.queryset is not None, (\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'64\\' class=\"post-context\" id=\"post1395867692544\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>            &quot;&#x27;%s&#x27; should either include a `queryset` attribute, &quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>            &quot;or override the `get_queryset()` method.&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>            % self.__class__.__name__</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>        )</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395867692544\\', \\'post1395867692544\\')\"><pre>        queryset = self.queryset</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395867692544\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.GenerateTestCases object at 0x0000014500777410&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n    </ul>\\n  </div>\\n\\n  <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\\n    <input type=\"hidden\" name=\"title\"\\n      value=\"AssertionError at /product/generate_test_cases/\">\\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\\nEnvironment:\\n\\n\\nRequest Method: GET\\nRequest URL: http://127.0.0.1:8000/product/generate_test_cases/?request_id=ade794c20eb046879ce39c6d4787880f\\n\\nDjango Version: 5.0.1\\nPython Version: 3.11.1\\nInstalled Applications:\\n[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]\\nInstalled Middleware:\\n[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]\\n\\n\\n\\nTraceback (most recent call last):\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py\", line 55, in inner\\n    response = get_response(request)\\n               ^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 197, in _get_response\\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py\", line 65, in _view_wrapper\\n    return view_func(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py\", line 104, in view\\n    return self.dispatch(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 509, in dispatch\\n    response = self.handle_exception(exc)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 469, in handle_exception\\n    self.raise_uncaught_exception(exc)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 480, in raise_uncaught_exception\\n    raise exc\\n    ^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 506, in dispatch\\n    response = handler(request, *args, **kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\generics.py\", line 199, in get\\n    return self.list(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\mixins.py\", line 38, in list\\n    queryset = self.filter_queryset(self.get_queryset())\\n                                    ^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\generics.py\", line 63, in get_queryset\\n    assert self.queryset is not None, (\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nException Type: AssertionError at /product/generate_test_cases/\\nException Value: &#x27;GenerateTestCases&#x27; should either include a `queryset` attribute, or override the `get_queryset()` method.\\n</textarea>\\n  <br><br>\\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\\n  </div>\\n</form>\\n\\n</div>\\n\\n\\n<div id=\"requestinfo\">\\n  <h2>Request information</h2>\\n\\n\\n  \\n    <h3 id=\"user-info\">USER</h3>\\n    <p>Juniper - damodar</p>\\n  \\n\\n  <h3 id=\"get-info\">GET</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>request_id</td>\\n            <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"post-info\">POST</h3>\\n  \\n    <p>No POST data</p>\\n  \\n\\n  <h3 id=\"files-info\">FILES</h3>\\n  \\n    <p>No FILES data</p>\\n  \\n\\n  <h3 id=\"cookie-info\">COOKIES</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>csrftoken</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n          <tr>\\n            <td>sessionid</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"meta-info\">META</h3>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Variable</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ALLUSERSPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYINSTALL</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\chocolatey&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\\n          <td class=\"code\"><pre>&#x27;133370791278584704&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\crashpad_5180_VTPFHXDUJXIJGMKK&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CLASSPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mqjms.jar;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mq.jar&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COLORTERM</td>\\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMPUTERNAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMSPEC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\cmd.exe&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONFIGSETROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\ConfigSetRoot&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_LENGTH</td>\\n          <td class=\"code\"><pre>&#x27;91&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;application/json&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;C219J5idJvTgSjJfJzNSDOzVdFJ1r8C2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DJANGO_SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DRIVERDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Drivers\\\\\\\\DriverData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EFC_4176</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ELECTRON_RUN_AS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GATEWAY_INTERFACE</td>\\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GIT_ASKPASS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEPATH</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT</td>\\n          <td class=\"code\"><pre>&#x27;*/*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT_ENCODING</td>\\n          <td class=\"code\"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_AUTHORIZATION</td>\\n          <td class=\"code\"><pre>&#x27;Token d03190df82c766c3aab6aaa35adb52fefd5d6263&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CACHE_CONTROL</td>\\n          <td class=\"code\"><pre>&#x27;no-cache&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CONNECTION</td>\\n          <td class=\"code\"><pre>&#x27;keep-alive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_HOST</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_POSTMAN_TOKEN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_USER_AGENT</td>\\n          <td class=\"code\"><pre>&#x27;PostmanRuntime/7.36.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INCLUDE</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\include;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\cplus\\\\\\\\include&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANG</td>\\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LIB</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALAPPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGONSERVER</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_FILE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_DATA_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_INSTALL_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_LIB_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JRE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\jre&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_OF_PROCESSORS</td>\\n          <td class=\"code\"><pre>&#x27;12&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_SYMLINK</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\nodejs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVECONSUMER</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>OS</td>\\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\Scripts;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATHEXT</td>\\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH_INFO</td>\\n          <td class=\"code\"><pre>&#x27;/product/generate_test_cases/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_ARCHITECTURE</td>\\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_IDENTIFIER</td>\\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 165 Stepping 2, GenuineIntel&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_LEVEL</td>\\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_REVISION</td>\\n          <td class=\"code\"><pre>&#x27;a502&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;(gen_ai) $P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PSMODULEPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\WindowsPowerShell\\\\\\\\Modules;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\Modules&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PUBLIC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\Public&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYDEVD_USE_FRAME_EVAL</td>\\n          <td class=\"code\"><pre>&#x27;NO&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYENV</td>\\n          <td class=\"code\"><pre>&#x27;%USERPROFILE%\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONIOENCODING</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONUNBUFFERED</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>QUERY_STRING</td>\\n          <td class=\"code\"><pre>&#x27;request_id=ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_ADDR</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_HOST</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REQUEST_METHOD</td>\\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>RUN_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PORT</td>\\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PROTOCOL</td>\\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_SOFTWARE</td>\\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSIONNAME</td>\\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM</td>\\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM_VERSION</td>\\n          <td class=\"code\"><pre>&#x27;1.85.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERNAME</td>\\n          <td class=\"code\"><pre>&#x27;damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_AMD_ENTRYPOINT</td>\\n          <td class=\"code\"><pre>&#x27;vs/workbench/api/node/extensionHostProcess&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CODE_CACHE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Code\\\\\\\\CachedData\\\\\\\\8b3775030ed1a69b13e4f4c628c612102e30a681&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CRASH_REPORTER_PROCESS_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;extensionHost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CWD</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_IPC_HANDLE</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-git-c239e2437b-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_HANDLES_UNCAUGHT_ERRORS</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_IPC_HOOK</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\16febde85b2dfcc2544cbe3dac85ae44-1.85.2-main-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_L10N_BUNDLE_LOCATION</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_NLS_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;{&quot;locale&quot;:&quot;en-us&quot;,&quot;osLocale&quot;:&quot;en-us&quot;,&quot;availableLanguages&quot;:{},&quot;_languagePackSupport&quot;:true}&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_PID</td>\\n          <td class=\"code\"><pre>&#x27;5180&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WINDIR</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ZES_ENABLE_SYSMAN</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;$P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>__PSLOCKDOWNPOLICY</td>\\n          <td class=\"code\"><pre>&#x27;0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.errors</td>\\n          <td class=\"code\"><pre>&lt;_pydevd_bundle.pydevd_io.IORedirector object at 0x000001457A81A4D0&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.file_wrapper</td>\\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.input</td>\\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x000001450037FF10&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multiprocess</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multithread</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.run_once</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.url_scheme</td>\\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.version</td>\\n          <td class=\"code\"><pre>(1, 0)</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n\\n  <h3 id=\"settings-info\">Settings</h3>\\n  <h4>Using settings module <code>user.settings</code></h4>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Setting</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ABSOLUTE_URL_OVERRIDES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ADMINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ALLOWED_HOSTS</td>\\n          <td class=\"code\"><pre>[&#x27;*&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPEND_SLASH</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTHENTICATION_BACKENDS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_PASSWORD_VALIDATORS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_USER_MODEL</td>\\n          <td class=\"code\"><pre>&#x27;user.User&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>BASE_DIR</td>\\n          <td class=\"code\"><pre>WindowsPath(&#x27;C:/Users/damod/Desktop/crys_cloud/gen_ai/git_ver_1/GEN_AI_BACKEND&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\\n          <td class=\"code\"><pre>600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_ORIGINS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_CREDENTIALS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>31449600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_FAILURE_VIEW</td>\\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_HEADER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_TRUSTED_ORIGINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_USE_SESSIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\\n             &#x27;AUTOCOMMIT&#x27;: True,\\n             &#x27;CONN_HEALTH_CHECKS&#x27;: False,\\n             &#x27;CONN_MAX_AGE&#x27;: 0,\\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,\\n             &#x27;HOST&#x27;: &#x27;gen-ai.c54r5svdjqsu.us-west-2.rds.amazonaws.com&#x27;,\\n             &#x27;NAME&#x27;: &#x27;GEN_AI&#x27;,\\n             &#x27;OPTIONS&#x27;: {},\\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\\n             &#x27;PORT&#x27;: &#x27;3306&#x27;,\\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\\n                      &#x27;COLLATION&#x27;: None,\\n                      &#x27;MIGRATE&#x27;: True,\\n                      &#x27;MIRROR&#x27;: None,\\n                      &#x27;NAME&#x27;: None},\\n             &#x27;TIME_ZONE&#x27;: None,\\n             &#x27;USER&#x27;: &#x27;admin&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASE_ROUTERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\\n          <td class=\"code\"><pre>1000</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>\\n          <td class=\"code\"><pre>100</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\\n &#x27;%Y-%m-%d %H:%M&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%Y %H:%M&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\\n &#x27;%m/%d/%Y&#x27;,\\n &#x27;%m/%d/%y&#x27;,\\n &#x27;%b %d %Y&#x27;,\\n &#x27;%b %d, %Y&#x27;,\\n &#x27;%d %b %Y&#x27;,\\n &#x27;%d %b, %Y&#x27;,\\n &#x27;%B %d %Y&#x27;,\\n &#x27;%B %d, %Y&#x27;,\\n &#x27;%d %B %Y&#x27;,\\n &#x27;%d %B, %Y&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DECIMAL_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_AUTO_FIELD</td>\\n          <td class=\"code\"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_CHARSET</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FILE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FROM_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_INDEX_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DISALLOWED_USER_AGENTS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST</td>\\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_PASSWORD</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_USER</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_PORT</td>\\n          <td class=\"code\"><pre>25</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_CERTFILE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_KEYFILE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SUBJECT_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_TIMEOUT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_LOCALTIME</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_SSL</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_TLS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_HANDLERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_PERMISSIONS</td>\\n          <td class=\"code\"><pre>420</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_TEMP_DIR</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIRST_DAY_OF_WEEK</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIXTURE_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORCE_SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMAT_MODULE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORM_RENDERER</td>\\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGNORABLE_404_URLS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INSTALLED_APPS</td>\\n          <td class=\"code\"><pre>[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INTERNAL_IPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES</td>\\n          <td class=\"code\"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\\n (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),\\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\\n (&#x27;de&#x27;, &#x27;German&#x27;),\\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\\n (&#x27;en&#x27;, &#x27;English&#x27;),\\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\\n (&#x27;fr&#x27;, &#x27;French&#x27;),\\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\\n (&#x27;ms&#x27;, &#x27;Malay&#x27;),\\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\\n (&#x27;nb&#x27;, &#x27;Norwegian Bokm\\xc3\\xa5l&#x27;),\\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\\n (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),\\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES_BIDI</td>\\n          <td class=\"code\"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_CODE</td>\\n          <td class=\"code\"><pre>&#x27;en-us&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;django_language&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALE_PATHS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING</td>\\n          <td class=\"code\"><pre>{&#x27;disable_existing_loggers&#x27;: False,\\n &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},\\n              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,\\n                       &#x27;filename&#x27;: &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND/log/log_file.log&#x27;,\\n                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},\\n &#x27;root&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;], &#x27;level&#x27;: &#x27;NOTSET&#x27;},\\n &#x27;version&#x27;: 1}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/profile/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/login/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGOUT_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MANAGERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_ROOT</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_URL</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MESSAGE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIDDLEWARE</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIGRATION_MODULES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MONTH_DAY_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F j&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_GROUPING</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_HASHERS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_RESET_TIMEOUT</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PREPEND_WWW</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REST_FRAMEWORK</td>\\n          <td class=\"code\"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework.authentication.TokenAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.BasicAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.SessionAuthentication&#x27;],\\n &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],\\n &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;rest_framework.renderers.JSONRenderer&#x27;]}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ROOT_URLCONF</td>\\n          <td class=\"code\"><pre>&#x27;user.urls&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY_FALLBACKS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_PRELOAD</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_SECONDS</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_PROXY_SSL_HEADER</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REDIRECT_EXEMPT</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REFERRER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_HOST</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_REDIRECT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;root@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_CACHE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>1209600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;sessionid&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_ENGINE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_FILE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SERIALIZER</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SIGNING_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SILENCED_SYSTEM_CHECKS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_FINDERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_ROOT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_URL</td>\\n          <td class=\"code\"><pre>&#x27;/static/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STORAGES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},\\n &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMPLATES</td>\\n          <td class=\"code\"><pre>[{&#x27;APP_DIRS&#x27;: True,\\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\\n  &#x27;DIRS&#x27;: [],\\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\\n                                     &#x27;django.template.context_processors.request&#x27;,\\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_NON_SERIALIZED_APPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_RUNNER</td>\\n          <td class=\"code\"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;,&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_ZONE</td>\\n          <td class=\"code\"><pre>&#x27;UTC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_I18N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_TZ</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_HOST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_PORT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WSGI_APPLICATION</td>\\n          <td class=\"code\"><pre>&#x27;user.wsgi.application&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>X_FRAME_OPTIONS</td>\\n          <td class=\"code\"><pre>&#x27;DENY&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>YEAR_MONTH_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F Y&#x27;</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n  <div id=\"explanation\">\\n    <p>\\n      You\\xe2\\x80\\x99re seeing this error because you have <code>DEBUG = True</code> in your\\n      Django settings file. Change that to <code>False</code>, and Django will\\n      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'"}}, {"model": "user.requesttracking", "pk": 924, "fields": {"request_id": "71955b1c9c93466f93fe605a6d8458db", "start_time": "2024-02-07T10:32:15.087Z", "end_time": "2024-02-07T10:33:12.535Z", "created_by": 2, "time_taken": 57.447434, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "500", "error_message": "b'<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\\n  <title>TypeError\\n          at /product/structured_test_cases_and_scripts/</title>\\n  <style type=\"text/css\">\\n    html * { padding:0; margin:0; }\\n    body * { padding:10px 20px; }\\n    body * * { padding:0; }\\n    body { font:small sans-serif; background-color:#fff; color:#000; }\\n    body>div { border-bottom:1px solid #ddd; }\\n    h1 { font-weight:normal; }\\n    h2 { margin-bottom:.8em; }\\n    h3 { margin:1em 0 .5em 0; }\\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\\n    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }\\n    summary { cursor: pointer; }\\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\\n    thead th {\\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\\n    }\\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\\n    table.vars { margin:5px 10px 2px 40px; width: auto; }\\n    table.vars td, table.req td { font-family:monospace; }\\n    table td.code { width:100%; }\\n    table td.code pre { overflow:hidden; }\\n    table.source th { color:#666; }\\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\\n    ul.traceback { list-style-type:none; color: #222; }\\n    ul.traceback li.cause { word-break: break-word; }\\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\\n    div.context { padding:10px 0; overflow:hidden; }\\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\\n    div.context ol li pre { display:inline; }\\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\\n    div.context ol.context-line li span { position:absolute; right:32px; }\\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\\n    .user div.context ol li { color:#666; }\\n    div.commands, summary.commands { margin-left: 40px; }\\n    div.commands a, summary.commands { color:#555; text-decoration:none; }\\n    .user div.commands a { color: black; }\\n    #summary { background: #ffc; }\\n    #summary h2 { font-weight: normal; color: #666; }\\n    #explanation { background:#eee; }\\n    #template, #template-not-exist { background:#f6f6f6; }\\n    #template-not-exist ul { margin: 0 0 10px 20px; }\\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\\n    #unicode-hint { background:#eee; }\\n    #traceback { background:#eee; }\\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\\n    #summary table { border:none; background:transparent; }\\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\\n    #requestinfo h3 { margin-bottom:-1em; }\\n    .error { background: #ffc; }\\n    .specific { color:#cc3300; font-weight:bold; }\\n    h2 span.commands { font-size:.7em; font-weight:normal; }\\n    span.commands a:link {color:#5E5694;}\\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\\n    .append-bottom { margin-bottom: 10px; }\\n    .fname { user-select: all; }\\n  </style>\\n  \\n  <script>\\n    function hideAll(elems) {\\n      for (var e = 0; e < elems.length; e++) {\\n        elems[e].style.display = \\'none\\';\\n      }\\n    }\\n    window.onload = function() {\\n      hideAll(document.querySelectorAll(\\'ol.pre-context\\'));\\n      hideAll(document.querySelectorAll(\\'ol.post-context\\'));\\n      hideAll(document.querySelectorAll(\\'div.pastebin\\'));\\n    }\\n    function toggle() {\\n      for (var i = 0; i < arguments.length; i++) {\\n        var e = document.getElementById(arguments[i]);\\n        if (e) {\\n          e.style.display = e.style.display == \\'none\\' ? \\'block\\': \\'none\\';\\n        }\\n      }\\n      return false;\\n    }\\n    function switchPastebinFriendly(link) {\\n      s1 = \"Switch to copy-and-paste view\";\\n      s2 = \"Switch back to interactive view\";\\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\\n      toggle(\\'browserTraceback\\', \\'pastebinTraceback\\');\\n      return false;\\n    }\\n  </script>\\n  \\n</head>\\n<body>\\n<div id=\"summary\">\\n  <h1>TypeError\\n       at /product/structured_test_cases_and_scripts/</h1>\\n  <pre class=\"exception_value\">TestCasesAndScripts.get_queryset() got an unexpected keyword argument &#x27;test_category_id&#x27;</pre>\\n  <table class=\"meta\">\\n\\n    <tr>\\n      <th>Request Method:</th>\\n      <td>GET</td>\\n    </tr>\\n    <tr>\\n      <th>Request URL:</th>\\n      <td>http://127.0.0.1:8000/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Django Version:</th>\\n      <td>5.0.1</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Exception Type:</th>\\n      <td>TypeError</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Value:</th>\\n      <td><pre>TestCasesAndScripts.get_queryset() got an unexpected keyword argument &#x27;test_category_id&#x27;</pre></td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Location:</th>\\n      <td><span class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</span>, line 427, in get</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Raised during:</th>\\n      <td>product.views.TestCasesAndScripts</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Python Executable:</th>\\n      <td>C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Scripts\\\\python.exe</td>\\n    </tr>\\n    <tr>\\n      <th>Python Version:</th>\\n      <td>3.11.1</td>\\n    </tr>\\n    <tr>\\n      <th>Python Path:</th>\\n      <td><pre>[&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND&#x27;,\\n &#x27;c:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\ms-python.python-2023.22.1\\\\\\\\pythonFiles\\\\\\\\lib\\\\\\\\python\\\\\\\\debugpy\\\\\\\\_vendored\\\\\\\\pydevd&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\python311.zip&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\DLLs&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Lib&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai\\\\\\\\Lib\\\\\\\\site-packages&#x27;]</pre></td>\\n    </tr>\\n    <tr>\\n      <th>Server time:</th>\\n      <td>Wed, 07 Feb 2024 10:33:12 +0000</td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n\\n\\n<div id=\"traceback\">\\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\\n    Switch to copy-and-paste view</a></span>\\n  </h2>\\n  <div id=\"browserTraceback\">\\n    <ul class=\"traceback\">\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py</code>, line 55, in inner\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395869690496\">\\n              \\n                <ol start=\"48\" class=\"pre-context\" id=\"pre1395869690496\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>        return inner</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>        @wraps(get_response)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>        def inner(request):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"55\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>                response = get_response(request)\\n                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'56\\' class=\"post-context\" id=\"post1395869690496\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>            except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>            return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre>        return inner</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690496\\', \\'post1395869690496\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395869690496\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&quot;TestCasesAndScripts.get_queryset() got an unexpected keyword argument &#x27;test_category_id&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>get_response</td>\\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001457C45B950&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py</code>, line 197, in _get_response\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395869690432\">\\n              \\n                <ol start=\"190\" class=\"pre-context\" id=\"pre1395869690432\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>        if response is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"197\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'198\\' class=\"post-context\" id=\"post1395869690432\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>            except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>                if response is None:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>                    raise</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690432\\', \\'post1395869690432\\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395869690432\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000001457FDA3B00&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>middleware_method</td>\\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001457C45B950&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>wrapped_callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000001457FDA3B00&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py</code>, line 65, in _view_wrapper\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395869690240\">\\n              \\n                <ol start=\"58\" class=\"pre-context\" id=\"pre1395869690240\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre>            return await view_func(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"65\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre>            return view_func(request, *args, **kwargs)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'66\\' class=\"post-context\" id=\"post1395869690240\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre>    _view_wrapper.csrf_exempt = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869690240\\', \\'post1395869690240\\')\"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395869690240\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>view_func</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x000001457FDA3A60&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py</code>, line 104, in view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395869688832\">\\n              \\n                <ol start=\"97\" class=\"pre-context\" id=\"pre1395869688832\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>            self = cls(**initkwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>                raise AttributeError(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>                )</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"104\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>            return self.dispatch(request, *args, **kwargs)\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'105\\' class=\"post-context\" id=\"post1395869688832\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>        view.view_class = cls</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688832\\', \\'post1395869688832\\')\"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395869688832\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>cls</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;product.views.TestCasesAndScripts&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>initkwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 509, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395869688896\">\\n              \\n                <ol start=\"502\" class=\"pre-context\" id=\"pre1395869688896\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>        except Exception as exc:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"509\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>            response = self.handle_exception(exc)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'510\\' class=\"post-context\" id=\"post1395869688896\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>        return self.response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869688896\\', \\'post1395869688896\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395869688896\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method TestCasesAndScripts.get of &lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 469, in handle_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395869691584\">\\n              \\n                <ol start=\"462\" class=\"pre-context\" id=\"pre1395869691584\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>        response = exception_handler(exc, context)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>        if response is None:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"469\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>            self.raise_uncaught_exception(exc)\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'470\\' class=\"post-context\" id=\"post1395869691584\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>        response.exception = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>        return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395869691584\\', \\'post1395869691584\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395869691584\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>context</td>\\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\\n &#x27;kwargs&#x27;: {},\\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;,\\n &#x27;view&#x27;: &lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&quot;TestCasesAndScripts.get_queryset() got an unexpected keyword argument &#x27;test_category_id&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exception_handler</td>\\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000001457D0E94E0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 480, in raise_uncaught_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1398011050176\">\\n              \\n                <ol start=\"473\" class=\"pre-context\" id=\"pre1398011050176\">\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>            request = self.request</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"480\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>        raise exc\\n             ^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'481\\' class=\"post-context\" id=\"post1398011050176\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>    # be overridden.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050176\\', \\'post1398011050176\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1398011050176\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&quot;TestCasesAndScripts.get_queryset() got an unexpected keyword argument &#x27;test_category_id&#x27;&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>renderer_format</td>\\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>use_plaintext_traceback</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 506, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1395872186496\">\\n              \\n                <ol start=\"499\" class=\"pre-context\" id=\"pre1395872186496\">\\n                \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>            # Get the appropriate handler method</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"506\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>            response = handler(request, *args, **kwargs)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'507\\' class=\"post-context\" id=\"post1395872186496\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>        except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>            response = self.handle_exception(exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1395872186496\\', \\'post1395872186496\\')\"><pre>        return self.response</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1395872186496\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method TestCasesAndScripts.get of &lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 430, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1398011050240\">\\n              \\n                <ol start=\"423\" class=\"pre-context\" id=\"pre1398011050240\">\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>                &quot;request_id&quot; : request_id,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>            }</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>            test_category_id = request.GET.get(&quot;test_category_id&quot;, None)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>            if not test_category_id:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>                queryset = self.get_queryset(filters, test_category_id = test_category_id).values(&quot;test_category_id&quot;, &#x27;reqeust_id&#x27;, name=F(&quot;test_category__name&quot;))</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>                return Response(list(queryset))</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>        except Exception as e:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"430\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>            raise e\\n                 ^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'431\\' class=\"post-context\" id=\"post1398011050240\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>class TestCasesView(generics.ListAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>    permission_classes = (IsAuthenticated,)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>    authentication_classes = (BasicAuthentication, TokenAuthentication)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>    filter_backends = (django_filters.DjangoFilterBackend,)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398011050240\\', \\'post1398011050240\\')\"><pre>    filterset_class = TestCasesFilter</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1398011050240\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>__pydevd_ret_val_dict</td>\\n                    <td class=\"code\"><pre>{&#x27;ForwardManyToOneDescriptor.__get__&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;QueryDict.get&#x27;: None,\\n &#x27;Request.__getattr__&#x27;: &lt;QueryDict: {&#x27;request_id&#x27;: [&#x27;ade794c20eb046879ce39c6d4787880f&#x27;]}&gt;,\\n &#x27;user&#x27;: &lt;User: Juniper - damodar&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filters</td>\\n                    <td class=\"code\"><pre>{&#x27;customer&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;request_id&#x27;: &#x27;ade794c20eb046879ce39c6d4787880f&#x27;,\\n &#x27;status&#x27;: True}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request_id</td>\\n                    <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>test_category_id</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 427, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1398010562624\">\\n              \\n                <ol start=\"420\" class=\"pre-context\" id=\"pre1398010562624\">\\n                \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>            filters = {</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>                &quot;status&quot;:True,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>                &quot;customer&quot;:request.user.customer,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>                &quot;request_id&quot; : request_id,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>            }</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>            test_category_id = request.GET.get(&quot;test_category_id&quot;, None)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>            if not test_category_id:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"427\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>                queryset = self.get_queryset(filters, test_category_id = test_category_id).values(&quot;test_category_id&quot;, &#x27;reqeust_id&#x27;, name=F(&quot;test_category__name&quot;))\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'428\\' class=\"post-context\" id=\"post1398010562624\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>                return Response(list(queryset))</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>        except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>            raise e</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>class TestCasesView(generics.ListAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1398010562624\\', \\'post1398010562624\\')\"><pre>    permission_classes = (IsAuthenticated,)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1398010562624\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>__pydevd_ret_val_dict</td>\\n                    <td class=\"code\"><pre>{&#x27;ForwardManyToOneDescriptor.__get__&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;QueryDict.get&#x27;: None,\\n &#x27;Request.__getattr__&#x27;: &lt;QueryDict: {&#x27;request_id&#x27;: [&#x27;ade794c20eb046879ce39c6d4787880f&#x27;]}&gt;,\\n &#x27;user&#x27;: &lt;User: Juniper - damodar&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filters</td>\\n                    <td class=\"code\"><pre>{&#x27;customer&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;request_id&#x27;: &#x27;ade794c20eb046879ce39c6d4787880f&#x27;,\\n &#x27;status&#x27;: True}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request_id</td>\\n                    <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000145007A7E90&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>test_category_id</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n    </ul>\\n  </div>\\n\\n  <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\\n    <input type=\"hidden\" name=\"title\"\\n      value=\"TypeError at /product/structured_test_cases_and_scripts/\">\\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\\nEnvironment:\\n\\n\\nRequest Method: GET\\nRequest URL: http://127.0.0.1:8000/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f\\n\\nDjango Version: 5.0.1\\nPython Version: 3.11.1\\nInstalled Applications:\\n[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]\\nInstalled Middleware:\\n[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]\\n\\n\\n\\nTraceback (most recent call last):\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py\", line 55, in inner\\n    response = get_response(request)\\n               ^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 197, in _get_response\\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py\", line 65, in _view_wrapper\\n    return view_func(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py\", line 104, in view\\n    return self.dispatch(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 509, in dispatch\\n    response = self.handle_exception(exc)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 469, in handle_exception\\n    self.raise_uncaught_exception(exc)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 480, in raise_uncaught_exception\\n    raise exc\\n    ^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 506, in dispatch\\n    response = handler(request, *args, **kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 430, in get\\n    raise e\\n    ^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 427, in get\\n    queryset = self.get_queryset(filters, test_category_id = test_category_id).values(&quot;test_category_id&quot;, &#x27;reqeust_id&#x27;, name=F(&quot;test_category__name&quot;))\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nException Type: TypeError at /product/structured_test_cases_and_scripts/\\nException Value: TestCasesAndScripts.get_queryset() got an unexpected keyword argument &#x27;test_category_id&#x27;\\n</textarea>\\n  <br><br>\\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\\n  </div>\\n</form>\\n\\n</div>\\n\\n\\n<div id=\"requestinfo\">\\n  <h2>Request information</h2>\\n\\n\\n  \\n    <h3 id=\"user-info\">USER</h3>\\n    <p>Juniper - damodar</p>\\n  \\n\\n  <h3 id=\"get-info\">GET</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>request_id</td>\\n            <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"post-info\">POST</h3>\\n  \\n    <p>No POST data</p>\\n  \\n\\n  <h3 id=\"files-info\">FILES</h3>\\n  \\n    <p>No FILES data</p>\\n  \\n\\n  <h3 id=\"cookie-info\">COOKIES</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>csrftoken</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n          <tr>\\n            <td>sessionid</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"meta-info\">META</h3>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Variable</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ALLUSERSPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYINSTALL</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\chocolatey&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\\n          <td class=\"code\"><pre>&#x27;133370791278584704&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\crashpad_5180_VTPFHXDUJXIJGMKK&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CLASSPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mqjms.jar;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mq.jar&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COLORTERM</td>\\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMPUTERNAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMSPEC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\cmd.exe&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONFIGSETROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\ConfigSetRoot&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_LENGTH</td>\\n          <td class=\"code\"><pre>&#x27;91&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;application/json&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;C219J5idJvTgSjJfJzNSDOzVdFJ1r8C2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DJANGO_SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DRIVERDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Drivers\\\\\\\\DriverData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EFC_4176</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ELECTRON_RUN_AS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GATEWAY_INTERFACE</td>\\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GIT_ASKPASS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEPATH</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT</td>\\n          <td class=\"code\"><pre>&#x27;*/*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT_ENCODING</td>\\n          <td class=\"code\"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_AUTHORIZATION</td>\\n          <td class=\"code\"><pre>&#x27;Token d03190df82c766c3aab6aaa35adb52fefd5d6263&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CACHE_CONTROL</td>\\n          <td class=\"code\"><pre>&#x27;no-cache&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CONNECTION</td>\\n          <td class=\"code\"><pre>&#x27;keep-alive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_HOST</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_POSTMAN_TOKEN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_USER_AGENT</td>\\n          <td class=\"code\"><pre>&#x27;PostmanRuntime/7.36.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INCLUDE</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\include;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\cplus\\\\\\\\include&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANG</td>\\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LIB</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALAPPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGONSERVER</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_FILE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_DATA_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_INSTALL_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_LIB_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JRE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\jre&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_OF_PROCESSORS</td>\\n          <td class=\"code\"><pre>&#x27;12&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_SYMLINK</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\nodejs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVECONSUMER</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>OS</td>\\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\Scripts;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATHEXT</td>\\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH_INFO</td>\\n          <td class=\"code\"><pre>&#x27;/product/structured_test_cases_and_scripts/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_ARCHITECTURE</td>\\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_IDENTIFIER</td>\\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 165 Stepping 2, GenuineIntel&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_LEVEL</td>\\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_REVISION</td>\\n          <td class=\"code\"><pre>&#x27;a502&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;(gen_ai) $P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PSMODULEPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\WindowsPowerShell\\\\\\\\Modules;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\Modules&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PUBLIC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\Public&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYDEVD_USE_FRAME_EVAL</td>\\n          <td class=\"code\"><pre>&#x27;NO&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYENV</td>\\n          <td class=\"code\"><pre>&#x27;%USERPROFILE%\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONIOENCODING</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONUNBUFFERED</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>QUERY_STRING</td>\\n          <td class=\"code\"><pre>&#x27;request_id=ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_ADDR</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_HOST</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REQUEST_METHOD</td>\\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>RUN_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PORT</td>\\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PROTOCOL</td>\\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_SOFTWARE</td>\\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSIONNAME</td>\\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM</td>\\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM_VERSION</td>\\n          <td class=\"code\"><pre>&#x27;1.85.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERNAME</td>\\n          <td class=\"code\"><pre>&#x27;damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_AMD_ENTRYPOINT</td>\\n          <td class=\"code\"><pre>&#x27;vs/workbench/api/node/extensionHostProcess&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CODE_CACHE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Code\\\\\\\\CachedData\\\\\\\\8b3775030ed1a69b13e4f4c628c612102e30a681&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CRASH_REPORTER_PROCESS_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;extensionHost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CWD</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_IPC_HANDLE</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-git-c239e2437b-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_HANDLES_UNCAUGHT_ERRORS</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_IPC_HOOK</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\16febde85b2dfcc2544cbe3dac85ae44-1.85.2-main-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_L10N_BUNDLE_LOCATION</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_NLS_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;{&quot;locale&quot;:&quot;en-us&quot;,&quot;osLocale&quot;:&quot;en-us&quot;,&quot;availableLanguages&quot;:{},&quot;_languagePackSupport&quot;:true}&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_PID</td>\\n          <td class=\"code\"><pre>&#x27;5180&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WINDIR</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ZES_ENABLE_SYSMAN</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;$P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>__PSLOCKDOWNPOLICY</td>\\n          <td class=\"code\"><pre>&#x27;0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.errors</td>\\n          <td class=\"code\"><pre>&lt;_pydevd_bundle.pydevd_io.IORedirector object at 0x000001457A81A4D0&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.file_wrapper</td>\\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.input</td>\\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x000001457FEDD390&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multiprocess</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multithread</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.run_once</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.url_scheme</td>\\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.version</td>\\n          <td class=\"code\"><pre>(1, 0)</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n\\n  <h3 id=\"settings-info\">Settings</h3>\\n  <h4>Using settings module <code>user.settings</code></h4>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Setting</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ABSOLUTE_URL_OVERRIDES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ADMINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ALLOWED_HOSTS</td>\\n          <td class=\"code\"><pre>[&#x27;*&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPEND_SLASH</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTHENTICATION_BACKENDS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_PASSWORD_VALIDATORS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_USER_MODEL</td>\\n          <td class=\"code\"><pre>&#x27;user.User&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>BASE_DIR</td>\\n          <td class=\"code\"><pre>WindowsPath(&#x27;C:/Users/damod/Desktop/crys_cloud/gen_ai/git_ver_1/GEN_AI_BACKEND&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\\n          <td class=\"code\"><pre>600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_ORIGINS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_CREDENTIALS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>31449600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_FAILURE_VIEW</td>\\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_HEADER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_TRUSTED_ORIGINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_USE_SESSIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\\n             &#x27;AUTOCOMMIT&#x27;: True,\\n             &#x27;CONN_HEALTH_CHECKS&#x27;: False,\\n             &#x27;CONN_MAX_AGE&#x27;: 0,\\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,\\n             &#x27;HOST&#x27;: &#x27;gen-ai.c54r5svdjqsu.us-west-2.rds.amazonaws.com&#x27;,\\n             &#x27;NAME&#x27;: &#x27;GEN_AI&#x27;,\\n             &#x27;OPTIONS&#x27;: {},\\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\\n             &#x27;PORT&#x27;: &#x27;3306&#x27;,\\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\\n                      &#x27;COLLATION&#x27;: None,\\n                      &#x27;MIGRATE&#x27;: True,\\n                      &#x27;MIRROR&#x27;: None,\\n                      &#x27;NAME&#x27;: None},\\n             &#x27;TIME_ZONE&#x27;: None,\\n             &#x27;USER&#x27;: &#x27;admin&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASE_ROUTERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\\n          <td class=\"code\"><pre>1000</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>\\n          <td class=\"code\"><pre>100</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\\n &#x27;%Y-%m-%d %H:%M&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%Y %H:%M&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\\n &#x27;%m/%d/%Y&#x27;,\\n &#x27;%m/%d/%y&#x27;,\\n &#x27;%b %d %Y&#x27;,\\n &#x27;%b %d, %Y&#x27;,\\n &#x27;%d %b %Y&#x27;,\\n &#x27;%d %b, %Y&#x27;,\\n &#x27;%B %d %Y&#x27;,\\n &#x27;%B %d, %Y&#x27;,\\n &#x27;%d %B %Y&#x27;,\\n &#x27;%d %B, %Y&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DECIMAL_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_AUTO_FIELD</td>\\n          <td class=\"code\"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_CHARSET</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FILE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FROM_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_INDEX_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DISALLOWED_USER_AGENTS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST</td>\\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_PASSWORD</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_USER</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_PORT</td>\\n          <td class=\"code\"><pre>25</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_CERTFILE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_KEYFILE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SUBJECT_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_TIMEOUT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_LOCALTIME</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_SSL</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_TLS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_HANDLERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_PERMISSIONS</td>\\n          <td class=\"code\"><pre>420</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_TEMP_DIR</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIRST_DAY_OF_WEEK</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIXTURE_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORCE_SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMAT_MODULE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORM_RENDERER</td>\\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGNORABLE_404_URLS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INSTALLED_APPS</td>\\n          <td class=\"code\"><pre>[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INTERNAL_IPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES</td>\\n          <td class=\"code\"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\\n (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),\\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\\n (&#x27;de&#x27;, &#x27;German&#x27;),\\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\\n (&#x27;en&#x27;, &#x27;English&#x27;),\\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\\n (&#x27;fr&#x27;, &#x27;French&#x27;),\\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\\n (&#x27;ms&#x27;, &#x27;Malay&#x27;),\\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\\n (&#x27;nb&#x27;, &#x27;Norwegian Bokm\\xc3\\xa5l&#x27;),\\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\\n (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),\\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES_BIDI</td>\\n          <td class=\"code\"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_CODE</td>\\n          <td class=\"code\"><pre>&#x27;en-us&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;django_language&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALE_PATHS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING</td>\\n          <td class=\"code\"><pre>{&#x27;disable_existing_loggers&#x27;: False,\\n &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},\\n              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,\\n                       &#x27;filename&#x27;: &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND/log/log_file.log&#x27;,\\n                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},\\n &#x27;root&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;], &#x27;level&#x27;: &#x27;NOTSET&#x27;},\\n &#x27;version&#x27;: 1}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/profile/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/login/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGOUT_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MANAGERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_ROOT</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_URL</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MESSAGE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIDDLEWARE</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIGRATION_MODULES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MONTH_DAY_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F j&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_GROUPING</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_HASHERS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_RESET_TIMEOUT</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PREPEND_WWW</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REST_FRAMEWORK</td>\\n          <td class=\"code\"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework.authentication.TokenAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.BasicAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.SessionAuthentication&#x27;],\\n &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],\\n &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;rest_framework.renderers.JSONRenderer&#x27;]}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ROOT_URLCONF</td>\\n          <td class=\"code\"><pre>&#x27;user.urls&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY_FALLBACKS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_PRELOAD</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_SECONDS</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_PROXY_SSL_HEADER</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REDIRECT_EXEMPT</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REFERRER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_HOST</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_REDIRECT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;root@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_CACHE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>1209600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;sessionid&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_ENGINE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_FILE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SERIALIZER</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SIGNING_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SILENCED_SYSTEM_CHECKS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_FINDERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_ROOT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_URL</td>\\n          <td class=\"code\"><pre>&#x27;/static/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STORAGES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},\\n &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMPLATES</td>\\n          <td class=\"code\"><pre>[{&#x27;APP_DIRS&#x27;: True,\\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\\n  &#x27;DIRS&#x27;: [],\\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\\n                                     &#x27;django.template.context_processors.request&#x27;,\\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_NON_SERIALIZED_APPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_RUNNER</td>\\n          <td class=\"code\"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;,&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_ZONE</td>\\n          <td class=\"code\"><pre>&#x27;UTC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_I18N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_TZ</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_HOST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_PORT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WSGI_APPLICATION</td>\\n          <td class=\"code\"><pre>&#x27;user.wsgi.application&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>X_FRAME_OPTIONS</td>\\n          <td class=\"code\"><pre>&#x27;DENY&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>YEAR_MONTH_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F Y&#x27;</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n  <div id=\"explanation\">\\n    <p>\\n      You\\xe2\\x80\\x99re seeing this error because you have <code>DEBUG = True</code> in your\\n      Django settings file. Change that to <code>False</code>, and Django will\\n      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'"}}, {"model": "user.requesttracking", "pk": 925, "fields": {"request_id": "deaad93215fb459cbb4d5e8aaac675a9", "start_time": "2024-02-07T10:33:37.961Z", "end_time": "2024-02-07T10:33:52.434Z", "created_by": 2, "time_taken": 14.472505, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "500", "error_message": "b'<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\\n  <title>FieldError\\n          at /product/structured_test_cases_and_scripts/</title>\\n  <style type=\"text/css\">\\n    html * { padding:0; margin:0; }\\n    body * { padding:10px 20px; }\\n    body * * { padding:0; }\\n    body { font:small sans-serif; background-color:#fff; color:#000; }\\n    body>div { border-bottom:1px solid #ddd; }\\n    h1 { font-weight:normal; }\\n    h2 { margin-bottom:.8em; }\\n    h3 { margin:1em 0 .5em 0; }\\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\\n    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }\\n    summary { cursor: pointer; }\\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\\n    thead th {\\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\\n    }\\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\\n    table.vars { margin:5px 10px 2px 40px; width: auto; }\\n    table.vars td, table.req td { font-family:monospace; }\\n    table td.code { width:100%; }\\n    table td.code pre { overflow:hidden; }\\n    table.source th { color:#666; }\\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\\n    ul.traceback { list-style-type:none; color: #222; }\\n    ul.traceback li.cause { word-break: break-word; }\\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\\n    div.context { padding:10px 0; overflow:hidden; }\\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\\n    div.context ol li pre { display:inline; }\\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\\n    div.context ol.context-line li span { position:absolute; right:32px; }\\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\\n    .user div.context ol li { color:#666; }\\n    div.commands, summary.commands { margin-left: 40px; }\\n    div.commands a, summary.commands { color:#555; text-decoration:none; }\\n    .user div.commands a { color: black; }\\n    #summary { background: #ffc; }\\n    #summary h2 { font-weight: normal; color: #666; }\\n    #explanation { background:#eee; }\\n    #template, #template-not-exist { background:#f6f6f6; }\\n    #template-not-exist ul { margin: 0 0 10px 20px; }\\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\\n    #unicode-hint { background:#eee; }\\n    #traceback { background:#eee; }\\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\\n    #summary table { border:none; background:transparent; }\\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\\n    #requestinfo h3 { margin-bottom:-1em; }\\n    .error { background: #ffc; }\\n    .specific { color:#cc3300; font-weight:bold; }\\n    h2 span.commands { font-size:.7em; font-weight:normal; }\\n    span.commands a:link {color:#5E5694;}\\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\\n    .append-bottom { margin-bottom: 10px; }\\n    .fname { user-select: all; }\\n  </style>\\n  \\n  <script>\\n    function hideAll(elems) {\\n      for (var e = 0; e < elems.length; e++) {\\n        elems[e].style.display = \\'none\\';\\n      }\\n    }\\n    window.onload = function() {\\n      hideAll(document.querySelectorAll(\\'ol.pre-context\\'));\\n      hideAll(document.querySelectorAll(\\'ol.post-context\\'));\\n      hideAll(document.querySelectorAll(\\'div.pastebin\\'));\\n    }\\n    function toggle() {\\n      for (var i = 0; i < arguments.length; i++) {\\n        var e = document.getElementById(arguments[i]);\\n        if (e) {\\n          e.style.display = e.style.display == \\'none\\' ? \\'block\\': \\'none\\';\\n        }\\n      }\\n      return false;\\n    }\\n    function switchPastebinFriendly(link) {\\n      s1 = \"Switch to copy-and-paste view\";\\n      s2 = \"Switch back to interactive view\";\\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\\n      toggle(\\'browserTraceback\\', \\'pastebinTraceback\\');\\n      return false;\\n    }\\n  </script>\\n  \\n</head>\\n<body>\\n<div id=\"summary\">\\n  <h1>FieldError\\n       at /product/structured_test_cases_and_scripts/</h1>\\n  <pre class=\"exception_value\">Cannot resolve keyword &#x27;reqeust_id&#x27; into field. Choices are: customer, customer_id, data, id, name, objective, product, product_id, request, request_id, status, test_category, test_category_id, test_id, test_name, type, valid_till</pre>\\n  <table class=\"meta\">\\n\\n    <tr>\\n      <th>Request Method:</th>\\n      <td>GET</td>\\n    </tr>\\n    <tr>\\n      <th>Request URL:</th>\\n      <td>http://127.0.0.1:8000/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Django Version:</th>\\n      <td>5.0.1</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Exception Type:</th>\\n      <td>FieldError</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Value:</th>\\n      <td><pre>Cannot resolve keyword &#x27;reqeust_id&#x27; into field. Choices are: customer, customer_id, data, id, name, objective, product, product_id, request, request_id, status, test_category, test_category_id, test_id, test_name, type, valid_till</pre></td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Location:</th>\\n      <td><span class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\query.py</span>, line 1761, in names_to_path</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Raised during:</th>\\n      <td>product.views.TestCasesAndScripts</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Python Executable:</th>\\n      <td>C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Scripts\\\\python.exe</td>\\n    </tr>\\n    <tr>\\n      <th>Python Version:</th>\\n      <td>3.11.1</td>\\n    </tr>\\n    <tr>\\n      <th>Python Path:</th>\\n      <td><pre>[&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND&#x27;,\\n &#x27;c:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\ms-python.python-2023.22.1\\\\\\\\pythonFiles\\\\\\\\lib\\\\\\\\python\\\\\\\\debugpy\\\\\\\\_vendored\\\\\\\\pydevd&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\python311.zip&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\DLLs&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Lib&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai\\\\\\\\Lib\\\\\\\\site-packages&#x27;]</pre></td>\\n    </tr>\\n    <tr>\\n      <th>Server time:</th>\\n      <td>Wed, 07 Feb 2024 10:33:52 +0000</td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n\\n\\n<div id=\"traceback\">\\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\\n    Switch to copy-and-paste view</a></span>\\n  </h2>\\n  <div id=\"browserTraceback\">\\n    <ul class=\"traceback\">\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py</code>, line 55, in inner\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748212452992\">\\n              \\n                <ol start=\"48\" class=\"pre-context\" id=\"pre1748212452992\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>        return inner</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>        @wraps(get_response)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>        def inner(request):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"55\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>                response = get_response(request)\\n                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'56\\' class=\"post-context\" id=\"post1748212452992\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>            except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>            return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre>        return inner</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212452992\\', \\'post1748212452992\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748212452992\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>FieldError(&quot;Cannot resolve keyword &#x27;reqeust_id&#x27; into field. Choices are: customer, customer_id, data, id, name, objective, product, product_id, request, request_id, status, test_category, test_category_id, test_id, test_name, type, valid_till&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>get_response</td>\\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001970556BDD0&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py</code>, line 197, in _get_response\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748212716672\">\\n              \\n                <ol start=\"190\" class=\"pre-context\" id=\"pre1748212716672\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>        if response is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"197\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'198\\' class=\"post-context\" id=\"post1748212716672\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>            except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>                if response is None:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>                    raise</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716672\\', \\'post1748212716672\\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748212716672\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000019708ED40E0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>middleware_method</td>\\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001970556BDD0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>wrapped_callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000019708ED40E0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py</code>, line 65, in _view_wrapper\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748212714176\">\\n              \\n                <ol start=\"58\" class=\"pre-context\" id=\"pre1748212714176\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre>            return await view_func(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"65\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre>            return view_func(request, *args, **kwargs)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'66\\' class=\"post-context\" id=\"post1748212714176\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre>    _view_wrapper.csrf_exempt = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212714176\\', \\'post1748212714176\\')\"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748212714176\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>view_func</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000019708ED4040&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py</code>, line 104, in view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748212690176\">\\n              \\n                <ol start=\"97\" class=\"pre-context\" id=\"pre1748212690176\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>            self = cls(**initkwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>                raise AttributeError(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>                )</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"104\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>            return self.dispatch(request, *args, **kwargs)\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'105\\' class=\"post-context\" id=\"post1748212690176\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>        view.view_class = cls</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212690176\\', \\'post1748212690176\\')\"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748212690176\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>cls</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;product.views.TestCasesAndScripts&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>initkwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 509, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748212719040\">\\n              \\n                <ol start=\"502\" class=\"pre-context\" id=\"pre1748212719040\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>        except Exception as exc:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"509\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>            response = self.handle_exception(exc)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'510\\' class=\"post-context\" id=\"post1748212719040\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>        return self.response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212719040\\', \\'post1748212719040\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748212719040\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method TestCasesAndScripts.get of &lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 469, in handle_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748212712000\">\\n              \\n                <ol start=\"462\" class=\"pre-context\" id=\"pre1748212712000\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>        response = exception_handler(exc, context)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>        if response is None:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"469\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>            self.raise_uncaught_exception(exc)\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'470\\' class=\"post-context\" id=\"post1748212712000\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>        response.exception = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>        return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212712000\\', \\'post1748212712000\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748212712000\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>context</td>\\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\\n &#x27;kwargs&#x27;: {},\\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;,\\n &#x27;view&#x27;: &lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>FieldError(&quot;Cannot resolve keyword &#x27;reqeust_id&#x27; into field. Choices are: customer, customer_id, data, id, name, objective, product, product_id, request, request_id, status, test_category, test_category_id, test_id, test_name, type, valid_till&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exception_handler</td>\\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x00000197061F94E0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 480, in raise_uncaught_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748212711744\">\\n              \\n                <ol start=\"473\" class=\"pre-context\" id=\"pre1748212711744\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>            request = self.request</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"480\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>        raise exc\\n             ^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'481\\' class=\"post-context\" id=\"post1748212711744\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>    # be overridden.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212711744\\', \\'post1748212711744\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748212711744\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>FieldError(&quot;Cannot resolve keyword &#x27;reqeust_id&#x27; into field. Choices are: customer, customer_id, data, id, name, objective, product, product_id, request, request_id, status, test_category, test_category_id, test_id, test_name, type, valid_till&quot;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>renderer_format</td>\\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>use_plaintext_traceback</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 506, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748212716288\">\\n              \\n                <ol start=\"499\" class=\"pre-context\" id=\"pre1748212716288\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>            # Get the appropriate handler method</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"506\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>            response = handler(request, *args, **kwargs)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'507\\' class=\"post-context\" id=\"post1748212716288\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>        except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>            response = self.handle_exception(exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748212716288\\', \\'post1748212716288\\')\"><pre>        return self.response</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748212716288\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method TestCasesAndScripts.get of &lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 431, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748202495488\">\\n              \\n                <ol start=\"424\" class=\"pre-context\" id=\"pre1748202495488\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>            }</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>            test_category_id = request.GET.get(&quot;test_category_id&quot;, None)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>            if not test_category_id:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>                filters[&#x27;test_category_id&#x27;] = test_category_id</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>                queryset = self.get_queryset(filters).values(&quot;test_category_id&quot;, &#x27;reqeust_id&#x27;, name=F(&quot;test_category__name&quot;))</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>                return Response(list(queryset))</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>        except Exception as e:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"431\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>            raise e\\n                 ^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'432\\' class=\"post-context\" id=\"post1748202495488\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>class TestCasesView(generics.ListAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>    permission_classes = (IsAuthenticated,)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>    authentication_classes = (BasicAuthentication, TokenAuthentication)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>    filter_backends = (django_filters.DjangoFilterBackend,)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202495488\\', \\'post1748202495488\\')\"><pre>    filterset_class = TestCasesFilter</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748202495488\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>__pydevd_ret_val_dict</td>\\n                    <td class=\"code\"><pre>{&#x27;F.__init__&#x27;: None,\\n &#x27;F.__new__&#x27;: F(test_category__name),\\n &#x27;QuerySet.values&#x27;: None,\\n &#x27;TestCasesAndScripts.get_queryset&#x27;: &lt;QuerySet []&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filters</td>\\n                    <td class=\"code\"><pre>{&#x27;customer&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;request_id&#x27;: &#x27;ade794c20eb046879ce39c6d4787880f&#x27;,\\n &#x27;status&#x27;: True,\\n &#x27;test_category_id&#x27;: None}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request_id</td>\\n                    <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>test_category_id</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 428, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748208996224\">\\n              \\n                <ol start=\"421\" class=\"pre-context\" id=\"pre1748208996224\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>                &quot;status&quot;:True,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>                &quot;customer&quot;:request.user.customer,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>                &quot;request_id&quot; : request_id,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>            }</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>            test_category_id = request.GET.get(&quot;test_category_id&quot;, None)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>            if not test_category_id:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>                filters[&#x27;test_category_id&#x27;] = test_category_id</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"428\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>                queryset = self.get_queryset(filters).values(&quot;test_category_id&quot;, &#x27;reqeust_id&#x27;, name=F(&quot;test_category__name&quot;))\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'429\\' class=\"post-context\" id=\"post1748208996224\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>                return Response(list(queryset))</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>        except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>            raise e</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>class TestCasesView(generics.ListAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748208996224\\', \\'post1748208996224\\')\"><pre>    permission_classes = (IsAuthenticated,)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748208996224\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>__pydevd_ret_val_dict</td>\\n                    <td class=\"code\"><pre>{&#x27;F.__init__&#x27;: None,\\n &#x27;F.__new__&#x27;: F(test_category__name),\\n &#x27;QuerySet.values&#x27;: None,\\n &#x27;TestCasesAndScripts.get_queryset&#x27;: &lt;QuerySet []&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filters</td>\\n                    <td class=\"code\"><pre>{&#x27;customer&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;request_id&#x27;: &#x27;ade794c20eb046879ce39c6d4787880f&#x27;,\\n &#x27;status&#x27;: True,\\n &#x27;test_category_id&#x27;: None}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request_id</td>\\n                    <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x000001970998A750&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>test_category_id</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</code>, line 1358, in values\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748202645568\">\\n              \\n                <ol start=\"1351\" class=\"pre-context\" id=\"pre1748202645568\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>            clone = clone.annotate(**expressions)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>        clone._fields = fields</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>        clone.query.set_values(fields)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>        return clone</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>    def values(self, *fields, **expressions):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>        fields += tuple(expressions)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1358\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>        clone = self._values(*fields, **expressions)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1359\\' class=\"post-context\" id=\"post1748202645568\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>        clone._iterable_class = ValuesIterable</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>        return clone</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>    def values_list(self, *fields, flat=False, named=False):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>        if flat and named:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748202645568\\', \\'post1748202645568\\')\"><pre>            raise TypeError(&quot;&#x27;flat&#x27; and &#x27;named&#x27; can&#x27;t be used together.&quot;)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748202645568\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>expressions</td>\\n                    <td class=\"code\"><pre>{&#x27;name&#x27;: F(test_category__name)}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>fields</td>\\n                    <td class=\"code\"><pre>(&#x27;test_category_id&#x27;, &#x27;reqeust_id&#x27;, &#x27;name&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet []&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</code>, line 1353, in _values\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748111287808\">\\n              \\n                <ol start=\"1346\" class=\"pre-context\" id=\"pre1748111287808\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        return qs</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>    def _values(self, *fields, **expressions):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        clone = self._chain()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        if expressions:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>            clone = clone.annotate(**expressions)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        clone._fields = fields</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1353\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        clone.query.set_values(fields)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1354\\' class=\"post-context\" id=\"post1748111287808\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        return clone</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>    def values(self, *fields, **expressions):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        fields += tuple(expressions)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        clone = self._values(*fields, **expressions)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748111287808\\', \\'post1748111287808\\')\"><pre>        clone._iterable_class = ValuesIterable</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748111287808\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>clone</td>\\n                    <td class=\"code\"><pre>Error in formatting: TypeError: &#x27;NoneType&#x27; object is not subscriptable</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>expressions</td>\\n                    <td class=\"code\"><pre>{&#x27;name&#x27;: F(test_category__name)}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>fields</td>\\n                    <td class=\"code\"><pre>(&#x27;test_category_id&#x27;, &#x27;reqeust_id&#x27;, &#x27;name&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet []&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\query.py</code>, line 2462, in set_values\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748201188032\">\\n              \\n                <ol start=\"2455\" class=\"pre-context\" id=\"pre1748201188032\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                            &quot;promote it.&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                        )</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                        # Call `names_to_path` to ensure a FieldError including</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                        # annotations about to be masked as valid choices if</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                        # `f` is not resolvable.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                        if self.annotation_select:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"2462\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                            self.names_to_path(f.split(LOOKUP_SEP), self.model._meta)\\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'2463\\' class=\"post-context\" id=\"post1748201188032\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>                        field_names.append(f)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>            self.set_extra_mask(extra_names)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>            self.set_annotation_mask(annotation_names)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>            selected = frozenset(field_names + extra_names + annotation_names)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>        else:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201188032\\', \\'post1748201188032\\')\"><pre>            field_names = [f.attname for f in self.model._meta.concrete_fields]</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748201188032\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>annotation_names</td>\\n                    <td class=\"code\"><pre>[]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>extra_names</td>\\n                    <td class=\"code\"><pre>[]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>f</td>\\n                    <td class=\"code\"><pre>&#x27;reqeust_id&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>field_names</td>\\n                    <td class=\"code\"><pre>[&#x27;test_category_id&#x27;]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>fields</td>\\n                    <td class=\"code\"><pre>(&#x27;test_category_id&#x27;, &#x27;reqeust_id&#x27;, &#x27;name&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.db.models.sql.query.Query object at 0x000001970970E790&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\query.py</code>, line 1761, in names_to_path\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1748201478656\">\\n              \\n                <ol start=\"1754\" class=\"pre-context\" id=\"pre1748201478656\">\\n                \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                    available = sorted(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                        [</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                            *get_field_names_from_opts(opts),</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                            *self.annotation_select,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                            *self._filtered_relations,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                        ]</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                    )</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1761\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                    raise FieldError(\\n                          ^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1762\\' class=\"post-context\" id=\"post1748201478656\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                        &quot;Cannot resolve keyword &#x27;%s&#x27; into field. &quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                        &quot;Choices are: %s&quot; % (name, &quot;, &quot;.join(available))</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                    )</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>                break</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>            # Check if we need any joins for concrete inheritance cases (the</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1748201478656\\', \\'post1748201478656\\')\"><pre>            # field lives in parent, but we are currently in one of its</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1748201478656\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>allow_many</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>available</td>\\n                    <td class=\"code\"><pre>[&#x27;customer&#x27;,\\n &#x27;customer_id&#x27;,\\n &#x27;data&#x27;,\\n &#x27;id&#x27;,\\n &#x27;name&#x27;,\\n &#x27;objective&#x27;,\\n &#x27;product&#x27;,\\n &#x27;product_id&#x27;,\\n &#x27;request&#x27;,\\n &#x27;request_id&#x27;,\\n &#x27;status&#x27;,\\n &#x27;test_category&#x27;,\\n &#x27;test_category_id&#x27;,\\n &#x27;test_id&#x27;,\\n &#x27;test_name&#x27;,\\n &#x27;type&#x27;,\\n &#x27;valid_till&#x27;]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>cur_names_with_path</td>\\n                    <td class=\"code\"><pre>(&#x27;reqeust_id&#x27;, [])</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>fail_on_missing</td>\\n                    <td class=\"code\"><pre>False</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>field</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filtered_relation</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>name</td>\\n                    <td class=\"code\"><pre>&#x27;reqeust_id&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>names</td>\\n                    <td class=\"code\"><pre>[&#x27;reqeust_id&#x27;]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>names_with_path</td>\\n                    <td class=\"code\"><pre>[]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>opts</td>\\n                    <td class=\"code\"><pre>&lt;Options for StructuredTestCases&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>path</td>\\n                    <td class=\"code\"><pre>[]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>pos</td>\\n                    <td class=\"code\"><pre>-1</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.db.models.sql.query.Query object at 0x000001970970E790&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n    </ul>\\n  </div>\\n\\n  <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\\n    <input type=\"hidden\" name=\"title\"\\n      value=\"FieldError at /product/structured_test_cases_and_scripts/\">\\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\\nEnvironment:\\n\\n\\nRequest Method: GET\\nRequest URL: http://127.0.0.1:8000/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f\\n\\nDjango Version: 5.0.1\\nPython Version: 3.11.1\\nInstalled Applications:\\n[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]\\nInstalled Middleware:\\n[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]\\n\\n\\n\\nTraceback (most recent call last):\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py\", line 55, in inner\\n    response = get_response(request)\\n               ^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 197, in _get_response\\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py\", line 65, in _view_wrapper\\n    return view_func(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py\", line 104, in view\\n    return self.dispatch(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 509, in dispatch\\n    response = self.handle_exception(exc)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 469, in handle_exception\\n    self.raise_uncaught_exception(exc)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 480, in raise_uncaught_exception\\n    raise exc\\n    ^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 506, in dispatch\\n    response = handler(request, *args, **kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 431, in get\\n    raise e\\n    ^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 428, in get\\n    queryset = self.get_queryset(filters).values(&quot;test_category_id&quot;, &#x27;reqeust_id&#x27;, name=F(&quot;test_category__name&quot;))\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\", line 1358, in values\\n    clone = self._values(*fields, **expressions)\\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\", line 1353, in _values\\n    clone.query.set_values(fields)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\query.py\", line 2462, in set_values\\n    self.names_to_path(f.split(LOOKUP_SEP), self.model._meta)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\sql\\\\query.py\", line 1761, in names_to_path\\n    raise FieldError(\\n    ^\\n\\nException Type: FieldError at /product/structured_test_cases_and_scripts/\\nException Value: Cannot resolve keyword &#x27;reqeust_id&#x27; into field. Choices are: customer, customer_id, data, id, name, objective, product, product_id, request, request_id, status, test_category, test_category_id, test_id, test_name, type, valid_till\\n</textarea>\\n  <br><br>\\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\\n  </div>\\n</form>\\n\\n</div>\\n\\n\\n<div id=\"requestinfo\">\\n  <h2>Request information</h2>\\n\\n\\n  \\n    <h3 id=\"user-info\">USER</h3>\\n    <p>Juniper - damodar</p>\\n  \\n\\n  <h3 id=\"get-info\">GET</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>request_id</td>\\n            <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"post-info\">POST</h3>\\n  \\n    <p>No POST data</p>\\n  \\n\\n  <h3 id=\"files-info\">FILES</h3>\\n  \\n    <p>No FILES data</p>\\n  \\n\\n  <h3 id=\"cookie-info\">COOKIES</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>csrftoken</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n          <tr>\\n            <td>sessionid</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"meta-info\">META</h3>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Variable</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ALLUSERSPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYINSTALL</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\chocolatey&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\\n          <td class=\"code\"><pre>&#x27;133370791278584704&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\crashpad_5180_VTPFHXDUJXIJGMKK&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CLASSPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mqjms.jar;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mq.jar&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COLORTERM</td>\\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMPUTERNAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMSPEC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\cmd.exe&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONFIGSETROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\ConfigSetRoot&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_LENGTH</td>\\n          <td class=\"code\"><pre>&#x27;91&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;application/json&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;C219J5idJvTgSjJfJzNSDOzVdFJ1r8C2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DJANGO_SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DRIVERDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Drivers\\\\\\\\DriverData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EFC_4176</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ELECTRON_RUN_AS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GATEWAY_INTERFACE</td>\\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GIT_ASKPASS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEPATH</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT</td>\\n          <td class=\"code\"><pre>&#x27;*/*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT_ENCODING</td>\\n          <td class=\"code\"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_AUTHORIZATION</td>\\n          <td class=\"code\"><pre>&#x27;Token d03190df82c766c3aab6aaa35adb52fefd5d6263&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CACHE_CONTROL</td>\\n          <td class=\"code\"><pre>&#x27;no-cache&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CONNECTION</td>\\n          <td class=\"code\"><pre>&#x27;keep-alive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_HOST</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_POSTMAN_TOKEN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_USER_AGENT</td>\\n          <td class=\"code\"><pre>&#x27;PostmanRuntime/7.36.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INCLUDE</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\include;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\cplus\\\\\\\\include&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANG</td>\\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LIB</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALAPPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGONSERVER</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_FILE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_DATA_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_INSTALL_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_LIB_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JRE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\jre&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_OF_PROCESSORS</td>\\n          <td class=\"code\"><pre>&#x27;12&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_SYMLINK</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\nodejs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVECONSUMER</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>OS</td>\\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\Scripts;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATHEXT</td>\\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH_INFO</td>\\n          <td class=\"code\"><pre>&#x27;/product/structured_test_cases_and_scripts/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_ARCHITECTURE</td>\\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_IDENTIFIER</td>\\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 165 Stepping 2, GenuineIntel&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_LEVEL</td>\\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_REVISION</td>\\n          <td class=\"code\"><pre>&#x27;a502&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;(gen_ai) $P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PSMODULEPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\WindowsPowerShell\\\\\\\\Modules;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\Modules&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PUBLIC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\Public&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYDEVD_USE_FRAME_EVAL</td>\\n          <td class=\"code\"><pre>&#x27;NO&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYENV</td>\\n          <td class=\"code\"><pre>&#x27;%USERPROFILE%\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONIOENCODING</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONUNBUFFERED</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>QUERY_STRING</td>\\n          <td class=\"code\"><pre>&#x27;request_id=ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_ADDR</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_HOST</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REQUEST_METHOD</td>\\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>RUN_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PORT</td>\\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PROTOCOL</td>\\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_SOFTWARE</td>\\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSIONNAME</td>\\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM</td>\\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM_VERSION</td>\\n          <td class=\"code\"><pre>&#x27;1.85.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERNAME</td>\\n          <td class=\"code\"><pre>&#x27;damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_AMD_ENTRYPOINT</td>\\n          <td class=\"code\"><pre>&#x27;vs/workbench/api/node/extensionHostProcess&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CODE_CACHE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Code\\\\\\\\CachedData\\\\\\\\8b3775030ed1a69b13e4f4c628c612102e30a681&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CRASH_REPORTER_PROCESS_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;extensionHost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CWD</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_IPC_HANDLE</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-git-c239e2437b-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_HANDLES_UNCAUGHT_ERRORS</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_IPC_HOOK</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\16febde85b2dfcc2544cbe3dac85ae44-1.85.2-main-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_L10N_BUNDLE_LOCATION</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_NLS_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;{&quot;locale&quot;:&quot;en-us&quot;,&quot;osLocale&quot;:&quot;en-us&quot;,&quot;availableLanguages&quot;:{},&quot;_languagePackSupport&quot;:true}&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_PID</td>\\n          <td class=\"code\"><pre>&#x27;5180&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WINDIR</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ZES_ENABLE_SYSMAN</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;$P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>__PSLOCKDOWNPOLICY</td>\\n          <td class=\"code\"><pre>&#x27;0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.errors</td>\\n          <td class=\"code\"><pre>&lt;_pydevd_bundle.pydevd_io.IORedirector object at 0x000001970392A4D0&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.file_wrapper</td>\\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.input</td>\\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x0000019709687E80&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multiprocess</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multithread</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.run_once</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.url_scheme</td>\\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.version</td>\\n          <td class=\"code\"><pre>(1, 0)</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n\\n  <h3 id=\"settings-info\">Settings</h3>\\n  <h4>Using settings module <code>user.settings</code></h4>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Setting</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ABSOLUTE_URL_OVERRIDES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ADMINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ALLOWED_HOSTS</td>\\n          <td class=\"code\"><pre>[&#x27;*&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPEND_SLASH</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTHENTICATION_BACKENDS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_PASSWORD_VALIDATORS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_USER_MODEL</td>\\n          <td class=\"code\"><pre>&#x27;user.User&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>BASE_DIR</td>\\n          <td class=\"code\"><pre>WindowsPath(&#x27;C:/Users/damod/Desktop/crys_cloud/gen_ai/git_ver_1/GEN_AI_BACKEND&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\\n          <td class=\"code\"><pre>600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_ORIGINS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_CREDENTIALS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>31449600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_FAILURE_VIEW</td>\\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_HEADER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_TRUSTED_ORIGINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_USE_SESSIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\\n             &#x27;AUTOCOMMIT&#x27;: True,\\n             &#x27;CONN_HEALTH_CHECKS&#x27;: False,\\n             &#x27;CONN_MAX_AGE&#x27;: 0,\\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,\\n             &#x27;HOST&#x27;: &#x27;gen-ai.c54r5svdjqsu.us-west-2.rds.amazonaws.com&#x27;,\\n             &#x27;NAME&#x27;: &#x27;GEN_AI&#x27;,\\n             &#x27;OPTIONS&#x27;: {},\\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\\n             &#x27;PORT&#x27;: &#x27;3306&#x27;,\\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\\n                      &#x27;COLLATION&#x27;: None,\\n                      &#x27;MIGRATE&#x27;: True,\\n                      &#x27;MIRROR&#x27;: None,\\n                      &#x27;NAME&#x27;: None},\\n             &#x27;TIME_ZONE&#x27;: None,\\n             &#x27;USER&#x27;: &#x27;admin&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASE_ROUTERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\\n          <td class=\"code\"><pre>1000</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>\\n          <td class=\"code\"><pre>100</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\\n &#x27;%Y-%m-%d %H:%M&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%Y %H:%M&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\\n &#x27;%m/%d/%Y&#x27;,\\n &#x27;%m/%d/%y&#x27;,\\n &#x27;%b %d %Y&#x27;,\\n &#x27;%b %d, %Y&#x27;,\\n &#x27;%d %b %Y&#x27;,\\n &#x27;%d %b, %Y&#x27;,\\n &#x27;%B %d %Y&#x27;,\\n &#x27;%B %d, %Y&#x27;,\\n &#x27;%d %B %Y&#x27;,\\n &#x27;%d %B, %Y&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DECIMAL_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_AUTO_FIELD</td>\\n          <td class=\"code\"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_CHARSET</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FILE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FROM_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_INDEX_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DISALLOWED_USER_AGENTS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST</td>\\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_PASSWORD</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_USER</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_PORT</td>\\n          <td class=\"code\"><pre>25</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_CERTFILE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_KEYFILE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SUBJECT_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_TIMEOUT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_LOCALTIME</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_SSL</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_TLS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_HANDLERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_PERMISSIONS</td>\\n          <td class=\"code\"><pre>420</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_TEMP_DIR</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIRST_DAY_OF_WEEK</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIXTURE_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORCE_SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMAT_MODULE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORM_RENDERER</td>\\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGNORABLE_404_URLS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INSTALLED_APPS</td>\\n          <td class=\"code\"><pre>[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INTERNAL_IPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES</td>\\n          <td class=\"code\"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\\n (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),\\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\\n (&#x27;de&#x27;, &#x27;German&#x27;),\\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\\n (&#x27;en&#x27;, &#x27;English&#x27;),\\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\\n (&#x27;fr&#x27;, &#x27;French&#x27;),\\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\\n (&#x27;ms&#x27;, &#x27;Malay&#x27;),\\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\\n (&#x27;nb&#x27;, &#x27;Norwegian Bokm\\xc3\\xa5l&#x27;),\\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\\n (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),\\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES_BIDI</td>\\n          <td class=\"code\"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_CODE</td>\\n          <td class=\"code\"><pre>&#x27;en-us&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;django_language&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALE_PATHS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING</td>\\n          <td class=\"code\"><pre>{&#x27;disable_existing_loggers&#x27;: False,\\n &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},\\n              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,\\n                       &#x27;filename&#x27;: &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND/log/log_file.log&#x27;,\\n                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},\\n &#x27;root&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;], &#x27;level&#x27;: &#x27;NOTSET&#x27;},\\n &#x27;version&#x27;: 1}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/profile/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/login/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGOUT_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MANAGERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_ROOT</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_URL</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MESSAGE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIDDLEWARE</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIGRATION_MODULES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MONTH_DAY_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F j&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_GROUPING</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_HASHERS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_RESET_TIMEOUT</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PREPEND_WWW</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REST_FRAMEWORK</td>\\n          <td class=\"code\"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework.authentication.TokenAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.BasicAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.SessionAuthentication&#x27;],\\n &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],\\n &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;rest_framework.renderers.JSONRenderer&#x27;]}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ROOT_URLCONF</td>\\n          <td class=\"code\"><pre>&#x27;user.urls&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY_FALLBACKS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_PRELOAD</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_SECONDS</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_PROXY_SSL_HEADER</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REDIRECT_EXEMPT</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REFERRER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_HOST</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_REDIRECT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;root@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_CACHE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>1209600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;sessionid&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_ENGINE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_FILE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SERIALIZER</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SIGNING_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SILENCED_SYSTEM_CHECKS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_FINDERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_ROOT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_URL</td>\\n          <td class=\"code\"><pre>&#x27;/static/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STORAGES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},\\n &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMPLATES</td>\\n          <td class=\"code\"><pre>[{&#x27;APP_DIRS&#x27;: True,\\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\\n  &#x27;DIRS&#x27;: [],\\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\\n                                     &#x27;django.template.context_processors.request&#x27;,\\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_NON_SERIALIZED_APPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_RUNNER</td>\\n          <td class=\"code\"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;,&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_ZONE</td>\\n          <td class=\"code\"><pre>&#x27;UTC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_I18N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_TZ</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_HOST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_PORT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WSGI_APPLICATION</td>\\n          <td class=\"code\"><pre>&#x27;user.wsgi.application&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>X_FRAME_OPTIONS</td>\\n          <td class=\"code\"><pre>&#x27;DENY&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>YEAR_MONTH_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F Y&#x27;</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n  <div id=\"explanation\">\\n    <p>\\n      You\\xe2\\x80\\x99re seeing this error because you have <code>DEBUG = True</code> in your\\n      Django settings file. Change that to <code>False</code>, and Django will\\n      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'"}}, {"model": "user.requesttracking", "pk": 926, "fields": {"request_id": "d34a313b49fb4de6a0c2046583b6671f", "start_time": "2024-02-07T10:34:00.316Z", "end_time": "2024-02-07T10:34:00.316Z", "created_by": 2, "time_taken": 0.000132, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 927, "fields": {"request_id": "1d62942a32314262a44cd960910791f5", "start_time": "2024-02-07T10:34:01.234Z", "end_time": "2024-02-07T10:34:01.234Z", "created_by": 2, "time_taken": 0.000138, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 928, "fields": {"request_id": "683b8fbabd5c42df8bae1e4c846c4ca5", "start_time": "2024-02-07T10:34:01.808Z", "end_time": "2024-02-07T10:34:01.808Z", "created_by": 2, "time_taken": 0.000136, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 929, "fields": {"request_id": "78a551714cc042a79b6259455b080705", "start_time": "2024-02-07T10:34:02.584Z", "end_time": "2024-02-07T10:34:02.584Z", "created_by": 2, "time_taken": 0.000144, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 930, "fields": {"request_id": "1f939726f525493897c0b510780766ad", "start_time": "2024-02-07T10:34:02.612Z", "end_time": "2024-02-07T10:34:02.612Z", "created_by": 2, "time_taken": 0.000113, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 931, "fields": {"request_id": "e451bc996124499190ed570eff4f4d34", "start_time": "2024-02-07T10:34:03.189Z", "end_time": "2024-02-07T10:34:03.189Z", "created_by": 2, "time_taken": 0.000133, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 932, "fields": {"request_id": "b09ec310f1c6435fbe8379d394b3bf2d", "start_time": "2024-02-07T10:34:03.389Z", "end_time": "2024-02-07T10:34:03.389Z", "created_by": 2, "time_taken": 0.00013, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 933, "fields": {"request_id": "a503e093538640f083d0a845544a3bde", "start_time": "2024-02-07T10:34:03.765Z", "end_time": "2024-02-07T10:34:03.765Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 934, "fields": {"request_id": "fd8fb500922143dab6dfff6ccd581d10", "start_time": "2024-02-07T10:34:03.939Z", "end_time": "2024-02-07T10:34:03.939Z", "created_by": 2, "time_taken": 0.000133, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 935, "fields": {"request_id": "10ee5b21b93a450e8e225ce9e32d09a3", "start_time": "2024-02-07T10:34:04.583Z", "end_time": "2024-02-07T10:34:04.583Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 936, "fields": {"request_id": "ac7a52f37dee426d984b742cc0015c3f", "start_time": "2024-02-07T10:34:05.144Z", "end_time": "2024-02-07T10:34:05.144Z", "created_by": 2, "time_taken": 0.000166, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 937, "fields": {"request_id": "fb7ff22d73e64c288b1054ae9077c435", "start_time": "2024-02-07T10:34:05.702Z", "end_time": "2024-02-07T10:34:05.702Z", "created_by": 2, "time_taken": 0.000138, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 938, "fields": {"request_id": "dad3d8a336a34067944665dfbd14076a", "start_time": "2024-02-07T10:34:07.119Z", "end_time": "2024-02-07T10:34:07.119Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 939, "fields": {"request_id": "1a14e863ee514103afd723a743f72a8e", "start_time": "2024-02-07T10:34:07.670Z", "end_time": "2024-02-07T10:34:07.670Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 940, "fields": {"request_id": "c69bcd4ae7ad439eb90dbbe9e54552c1", "start_time": "2024-02-07T10:34:08.221Z", "end_time": "2024-02-07T10:34:08.221Z", "created_by": 2, "time_taken": 0.000132, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 941, "fields": {"request_id": "88cd957fd709491bafe933e29a235d16", "start_time": "2024-02-07T10:34:10.187Z", "end_time": "2024-02-07T10:34:10.187Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 942, "fields": {"request_id": "f83bd36f13074761a0ab09fa4ee4c509", "start_time": "2024-02-07T10:34:10.987Z", "end_time": "2024-02-07T10:34:10.988Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 943, "fields": {"request_id": "381ca028669e4412accc6064b87625ab", "start_time": "2024-02-07T10:34:11.537Z", "end_time": "2024-02-07T10:34:11.537Z", "created_by": 2, "time_taken": 0.000136, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 944, "fields": {"request_id": "5e39f9a03a534b53bd896349a0c1fa1f", "start_time": "2024-02-07T10:34:29.517Z", "end_time": "2024-02-07T10:34:36.074Z", "created_by": 2, "time_taken": 6.556763, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 945, "fields": {"request_id": "3bfa0aacb8ef4f0b83eaa9b2243b459f", "start_time": "2024-02-07T10:34:57.100Z", "end_time": "2024-02-07T10:36:00.316Z", "created_by": 2, "time_taken": 63.216704, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 946, "fields": {"request_id": "0861a86d64094754bdea4bce0b53fa5f", "start_time": "2024-02-07T10:36:01.348Z", "end_time": "2024-02-07T10:36:01.348Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 947, "fields": {"request_id": "4c4db8a4ed3c4013b34528c6f7687da6", "start_time": "2024-02-07T10:36:01.359Z", "end_time": "2024-02-07T10:36:01.359Z", "created_by": 2, "time_taken": 0.000105, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 948, "fields": {"request_id": "41a801224e0b4a99ab45aef081e5846a", "start_time": "2024-02-07T10:36:02.160Z", "end_time": "2024-02-07T10:36:02.160Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 949, "fields": {"request_id": "80763e4216944a8e977d3d0fe80043ad", "start_time": "2024-02-07T10:36:02.234Z", "end_time": "2024-02-07T10:36:02.234Z", "created_by": 2, "time_taken": 0.00012, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 950, "fields": {"request_id": "bb080ac04f594716a8a544894a87601b", "start_time": "2024-02-07T10:36:02.757Z", "end_time": "2024-02-07T10:36:02.757Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 951, "fields": {"request_id": "873d88eb01d44004866b2b83874e49c9", "start_time": "2024-02-07T10:36:02.810Z", "end_time": "2024-02-07T10:36:02.810Z", "created_by": 2, "time_taken": 0.00012, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 952, "fields": {"request_id": "0838f26041e44f56a5e398de740b8025", "start_time": "2024-02-07T10:36:19.709Z", "end_time": "2024-02-07T10:36:19.709Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 953, "fields": {"request_id": "a716cbcf59a241699a3ad6c4f7dcf435", "start_time": "2024-02-07T10:36:20.552Z", "end_time": "2024-02-07T10:36:20.552Z", "created_by": 2, "time_taken": 0.000132, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 954, "fields": {"request_id": "9856752bea9a435bb0c2d18415245390", "start_time": "2024-02-07T10:36:21.129Z", "end_time": "2024-02-07T10:36:21.129Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 955, "fields": {"request_id": "26a812818ff6478c98c7fed47f86ff1d", "start_time": "2024-02-07T10:37:10.335Z", "end_time": "2024-02-07T10:37:10.335Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 956, "fields": {"request_id": "704f4e7c26f148fe9c30b447b74a53c4", "start_time": "2024-02-07T10:37:11.166Z", "end_time": "2024-02-07T10:37:11.167Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 957, "fields": {"request_id": "cb7370b731604d32a4ec5c428af4d6ca", "start_time": "2024-02-07T10:37:11.738Z", "end_time": "2024-02-07T10:37:11.738Z", "created_by": 2, "time_taken": 0.000142, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 958, "fields": {"request_id": "571baefb9c104ff7a1885c7bcc3310cb", "start_time": "2024-02-07T10:37:43.641Z", "end_time": "2024-02-07T10:40:40.771Z", "created_by": 2, "time_taken": 177.130212, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 959, "fields": {"request_id": "25e0b3aa2b6c4c4bb7243ae2e942e9b6", "start_time": "2024-02-07T10:41:01.698Z", "end_time": "2024-02-07T10:41:11.903Z", "created_by": 2, "time_taken": 10.205933, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "user.requesttracking", "pk": 960, "fields": {"request_id": "af81a924bf5648a0b4779a4573be8488", "start_time": "2024-02-07T10:42:25.790Z", "end_time": "2024-02-07T10:42:36.465Z", "created_by": 2, "time_taken": 10.673585, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "500", "error_message": "b'<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\\n  <title>TypeError\\n          at /product/structured_test_cases_and_scripts/</title>\\n  <style type=\"text/css\">\\n    html * { padding:0; margin:0; }\\n    body * { padding:10px 20px; }\\n    body * * { padding:0; }\\n    body { font:small sans-serif; background-color:#fff; color:#000; }\\n    body>div { border-bottom:1px solid #ddd; }\\n    h1 { font-weight:normal; }\\n    h2 { margin-bottom:.8em; }\\n    h3 { margin:1em 0 .5em 0; }\\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\\n    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }\\n    summary { cursor: pointer; }\\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\\n    thead th {\\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\\n    }\\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\\n    table.vars { margin:5px 10px 2px 40px; width: auto; }\\n    table.vars td, table.req td { font-family:monospace; }\\n    table td.code { width:100%; }\\n    table td.code pre { overflow:hidden; }\\n    table.source th { color:#666; }\\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\\n    ul.traceback { list-style-type:none; color: #222; }\\n    ul.traceback li.cause { word-break: break-word; }\\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\\n    div.context { padding:10px 0; overflow:hidden; }\\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\\n    div.context ol li pre { display:inline; }\\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\\n    div.context ol.context-line li span { position:absolute; right:32px; }\\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\\n    .user div.context ol li { color:#666; }\\n    div.commands, summary.commands { margin-left: 40px; }\\n    div.commands a, summary.commands { color:#555; text-decoration:none; }\\n    .user div.commands a { color: black; }\\n    #summary { background: #ffc; }\\n    #summary h2 { font-weight: normal; color: #666; }\\n    #explanation { background:#eee; }\\n    #template, #template-not-exist { background:#f6f6f6; }\\n    #template-not-exist ul { margin: 0 0 10px 20px; }\\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\\n    #unicode-hint { background:#eee; }\\n    #traceback { background:#eee; }\\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\\n    #summary table { border:none; background:transparent; }\\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\\n    #requestinfo h3 { margin-bottom:-1em; }\\n    .error { background: #ffc; }\\n    .specific { color:#cc3300; font-weight:bold; }\\n    h2 span.commands { font-size:.7em; font-weight:normal; }\\n    span.commands a:link {color:#5E5694;}\\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\\n    .append-bottom { margin-bottom: 10px; }\\n    .fname { user-select: all; }\\n  </style>\\n  \\n  <script>\\n    function hideAll(elems) {\\n      for (var e = 0; e < elems.length; e++) {\\n        elems[e].style.display = \\'none\\';\\n      }\\n    }\\n    window.onload = function() {\\n      hideAll(document.querySelectorAll(\\'ol.pre-context\\'));\\n      hideAll(document.querySelectorAll(\\'ol.post-context\\'));\\n      hideAll(document.querySelectorAll(\\'div.pastebin\\'));\\n    }\\n    function toggle() {\\n      for (var i = 0; i < arguments.length; i++) {\\n        var e = document.getElementById(arguments[i]);\\n        if (e) {\\n          e.style.display = e.style.display == \\'none\\' ? \\'block\\': \\'none\\';\\n        }\\n      }\\n      return false;\\n    }\\n    function switchPastebinFriendly(link) {\\n      s1 = \"Switch to copy-and-paste view\";\\n      s2 = \"Switch back to interactive view\";\\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\\n      toggle(\\'browserTraceback\\', \\'pastebinTraceback\\');\\n      return false;\\n    }\\n  </script>\\n  \\n</head>\\n<body>\\n<div id=\"summary\">\\n  <h1>TypeError\\n       at /product/structured_test_cases_and_scripts/</h1>\\n  <pre class=\"exception_value\">QuerySet.annotate() received non-expression(s): test_category_id.</pre>\\n  <table class=\"meta\">\\n\\n    <tr>\\n      <th>Request Method:</th>\\n      <td>GET</td>\\n    </tr>\\n    <tr>\\n      <th>Request URL:</th>\\n      <td>http://127.0.0.1:8000/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Django Version:</th>\\n      <td>5.0.1</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Exception Type:</th>\\n      <td>TypeError</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Value:</th>\\n      <td><pre>QuerySet.annotate() received non-expression(s): test_category_id.</pre></td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Location:</th>\\n      <td><span class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</span>, line 1995, in _validate_values_are_expressions</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Raised during:</th>\\n      <td>product.views.TestCasesAndScripts</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Python Executable:</th>\\n      <td>C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Scripts\\\\python.exe</td>\\n    </tr>\\n    <tr>\\n      <th>Python Version:</th>\\n      <td>3.11.1</td>\\n    </tr>\\n    <tr>\\n      <th>Python Path:</th>\\n      <td><pre>[&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND&#x27;,\\n &#x27;c:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\ms-python.python-2023.22.1\\\\\\\\pythonFiles\\\\\\\\lib\\\\\\\\python\\\\\\\\debugpy\\\\\\\\_vendored\\\\\\\\pydevd&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\python311.zip&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\DLLs&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Lib&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai\\\\\\\\Lib\\\\\\\\site-packages&#x27;]</pre></td>\\n    </tr>\\n    <tr>\\n      <th>Server time:</th>\\n      <td>Wed, 07 Feb 2024 10:42:36 +0000</td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n\\n\\n<div id=\"traceback\">\\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\\n    Switch to copy-and-paste view</a></span>\\n  </h2>\\n  <div id=\"browserTraceback\">\\n    <ul class=\"traceback\">\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py</code>, line 55, in inner\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343746450560\">\\n              \\n                <ol start=\"48\" class=\"pre-context\" id=\"pre2343746450560\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>        return inner</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>        @wraps(get_response)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>        def inner(request):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"55\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>                response = get_response(request)\\n                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'56\\' class=\"post-context\" id=\"post2343746450560\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>            except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>            return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre>        return inner</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450560\\', \\'post2343746450560\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343746450560\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&#x27;QuerySet.annotate() received non-expression(s): test_category_id.&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>get_response</td>\\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x00000221AE0BBC10&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py</code>, line 197, in _get_response\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343746450368\">\\n              \\n                <ol start=\"190\" class=\"pre-context\" id=\"pre2343746450368\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>        if response is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"197\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'198\\' class=\"post-context\" id=\"post2343746450368\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>            except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>                if response is None:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>                    raise</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450368\\', \\'post2343746450368\\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343746450368\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x00000221B1A03B00&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>middleware_method</td>\\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x00000221AE0BBC10&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>wrapped_callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x00000221B1A03B00&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py</code>, line 65, in _view_wrapper\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343747404864\">\\n              \\n                <ol start=\"58\" class=\"pre-context\" id=\"pre2343747404864\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre>            return await view_func(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"65\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre>            return view_func(request, *args, **kwargs)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'66\\' class=\"post-context\" id=\"post2343747404864\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre>    _view_wrapper.csrf_exempt = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747404864\\', \\'post2343747404864\\')\"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343747404864\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>view_func</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x00000221B1A03A60&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py</code>, line 104, in view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343747418112\">\\n              \\n                <ol start=\"97\" class=\"pre-context\" id=\"pre2343747418112\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>            self = cls(**initkwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>                raise AttributeError(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>                )</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"104\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>            return self.dispatch(request, *args, **kwargs)\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'105\\' class=\"post-context\" id=\"post2343747418112\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>        view.view_class = cls</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747418112\\', \\'post2343747418112\\')\"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343747418112\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>cls</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;product.views.TestCasesAndScripts&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>initkwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 509, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343746450688\">\\n              \\n                <ol start=\"502\" class=\"pre-context\" id=\"pre2343746450688\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>        except Exception as exc:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"509\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>            response = self.handle_exception(exc)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'510\\' class=\"post-context\" id=\"post2343746450688\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>        return self.response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746450688\\', \\'post2343746450688\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343746450688\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method TestCasesAndScripts.get of &lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 469, in handle_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343746449984\">\\n              \\n                <ol start=\"462\" class=\"pre-context\" id=\"pre2343746449984\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>        response = exception_handler(exc, context)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>        if response is None:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"469\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>            self.raise_uncaught_exception(exc)\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'470\\' class=\"post-context\" id=\"post2343746449984\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>        response.exception = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>        return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746449984\\', \\'post2343746449984\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343746449984\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>context</td>\\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\\n &#x27;kwargs&#x27;: {},\\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;,\\n &#x27;view&#x27;: &lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&#x27;QuerySet.annotate() received non-expression(s): test_category_id.&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exception_handler</td>\\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x00000221AED494E0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 480, in raise_uncaught_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343738803008\">\\n              \\n                <ol start=\"473\" class=\"pre-context\" id=\"pre2343738803008\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>            request = self.request</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"480\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>        raise exc\\n             ^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'481\\' class=\"post-context\" id=\"post2343738803008\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>    # be overridden.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738803008\\', \\'post2343738803008\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343738803008\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&#x27;QuerySet.annotate() received non-expression(s): test_category_id.&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>renderer_format</td>\\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>use_plaintext_traceback</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 506, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343747409600\">\\n              \\n                <ol start=\"499\" class=\"pre-context\" id=\"pre2343747409600\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>            # Get the appropriate handler method</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"506\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>            response = handler(request, *args, **kwargs)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'507\\' class=\"post-context\" id=\"post2343747409600\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>        except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>            response = self.handle_exception(exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343747409600\\', \\'post2343747409600\\')\"><pre>        return self.response</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343747409600\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method TestCasesAndScripts.get of &lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 431, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343738810112\">\\n              \\n                <ol start=\"424\" class=\"pre-context\" id=\"pre2343738810112\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>            }</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>            test_category_id = request.GET.get(&quot;test_category_id&quot;, None)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>            if not test_category_id:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>                # filters[&#x27;test_category_id&#x27;] = test_category_id</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>                queryset = self.get_queryset(filters).annotate(&quot;test_category_id&quot;).values(&quot;test_category_id&quot;, &#x27;request_id&#x27;, name=F(&quot;test_category__name&quot;))</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>                return Response(list(queryset))</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>        except Exception as e:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"431\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>            raise e\\n                 ^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'432\\' class=\"post-context\" id=\"post2343738810112\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>class TestCasesView(generics.ListAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>    permission_classes = (IsAuthenticated,)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>    authentication_classes = (BasicAuthentication, TokenAuthentication)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>    filter_backends = (django_filters.DjangoFilterBackend,)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738810112\\', \\'post2343738810112\\')\"><pre>    filterset_class = TestCasesFilter</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343738810112\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>__pydevd_ret_val_dict</td>\\n                    <td class=\"code\"><pre>{&#x27;QuerySet.annotate&#x27;: None,\\n &#x27;TestCasesAndScripts.get_queryset&#x27;: &lt;QuerySet [&lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;]&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filters</td>\\n                    <td class=\"code\"><pre>{&#x27;customer&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;request_id&#x27;: &#x27;ade794c20eb046879ce39c6d4787880f&#x27;,\\n &#x27;status&#x27;: 1}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request_id</td>\\n                    <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>test_category_id</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 428, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343746131264\">\\n              \\n                <ol start=\"421\" class=\"pre-context\" id=\"pre2343746131264\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>                &quot;status&quot;:1,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>                &quot;customer&quot;:request.user.customer,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>                &quot;request_id&quot; : request_id,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>            }</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>            test_category_id = request.GET.get(&quot;test_category_id&quot;, None)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>            if not test_category_id:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>                # filters[&#x27;test_category_id&#x27;] = test_category_id</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"428\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>                queryset = self.get_queryset(filters).annotate(&quot;test_category_id&quot;).values(&quot;test_category_id&quot;, &#x27;request_id&#x27;, name=F(&quot;test_category__name&quot;))\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'429\\' class=\"post-context\" id=\"post2343746131264\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>                return Response(list(queryset))</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>        except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>            raise e</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>class TestCasesView(generics.ListAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343746131264\\', \\'post2343746131264\\')\"><pre>    permission_classes = (IsAuthenticated,)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343746131264\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>__pydevd_ret_val_dict</td>\\n                    <td class=\"code\"><pre>{&#x27;QuerySet.annotate&#x27;: None,\\n &#x27;TestCasesAndScripts.get_queryset&#x27;: &lt;QuerySet [&lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;]&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filters</td>\\n                    <td class=\"code\"><pre>{&#x27;customer&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;request_id&#x27;: &#x27;ade794c20eb046879ce39c6d4787880f&#x27;,\\n &#x27;status&#x27;: 1}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request_id</td>\\n                    <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x00000221B23B4850&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>test_category_id</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</code>, line 1630, in annotate\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343738765568\">\\n              \\n                <ol start=\"1623\" class=\"pre-context\" id=\"pre2343738765568\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>    def annotate(self, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        Return a query set in which the returned objects have been annotated</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        with extra data or aggregations.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        self._not_support_combined_queries(&quot;annotate&quot;)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1630\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        return self._annotate(args, kwargs, select=True)\\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1631\\' class=\"post-context\" id=\"post2343738765568\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>    def alias(self, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        Return a query set with added aliases for extra data or aggregations.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343738765568\\', \\'post2343738765568\\')\"><pre>        self._not_support_combined_queries(&quot;alias&quot;)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343738765568\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>(&#x27;test_category_id&#x27;,)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</code>, line 1640, in _annotate\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343744862272\">\\n              \\n                <ol start=\"1633\" class=\"pre-context\" id=\"pre2343744862272\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        Return a query set with added aliases for extra data or aggregations.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        self._not_support_combined_queries(&quot;alias&quot;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        return self._annotate(args, kwargs, select=False)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>    def _annotate(self, args, kwargs, select=True):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1640\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        self._validate_values_are_expressions(\\n              ^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1641\\' class=\"post-context\" id=\"post2343744862272\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>            args + tuple(kwargs.values()), method_name=&quot;annotate&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        )</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        annotations = {}</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>        for arg in args:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>            # The default_alias property may raise a TypeError.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343744862272\\', \\'post2343744862272\\')\"><pre>            try:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343744862272\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>(&#x27;test_category_id&#x27;,)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>select</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</code>, line 1995, in _validate_values_are_expressions\\n          \\n\\n          \\n            <div class=\"context\" id=\"c2343742224000\">\\n              \\n                <ol start=\"1988\" class=\"pre-context\" id=\"pre2343742224000\">\\n                \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>    @staticmethod</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>    def _validate_values_are_expressions(values, method_name):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>        invalid_args = sorted(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>            str(arg) for arg in values if not hasattr(arg, &quot;resolve_expression&quot;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>        )</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>        if invalid_args:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1995\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>            raise TypeError(\\n                  ^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1996\\' class=\"post-context\" id=\"post2343742224000\">\\n                  \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>                &quot;QuerySet.%s() received non-expression(s): %s.&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>                % (</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>                    method_name,</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>                    &quot;, &quot;.join(invalid_args),</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>                )</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre2343742224000\\', \\'post2343742224000\\')\"><pre>            )</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v2343742224000\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>invalid_args</td>\\n                    <td class=\"code\"><pre>[&#x27;test_category_id&#x27;]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>method_name</td>\\n                    <td class=\"code\"><pre>&#x27;annotate&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>values</td>\\n                    <td class=\"code\"><pre>(&#x27;test_category_id&#x27;,)</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n    </ul>\\n  </div>\\n\\n  <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\\n    <input type=\"hidden\" name=\"title\"\\n      value=\"TypeError at /product/structured_test_cases_and_scripts/\">\\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\\nEnvironment:\\n\\n\\nRequest Method: GET\\nRequest URL: http://127.0.0.1:8000/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f\\n\\nDjango Version: 5.0.1\\nPython Version: 3.11.1\\nInstalled Applications:\\n[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]\\nInstalled Middleware:\\n[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]\\n\\n\\n\\nTraceback (most recent call last):\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py\", line 55, in inner\\n    response = get_response(request)\\n               ^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 197, in _get_response\\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py\", line 65, in _view_wrapper\\n    return view_func(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py\", line 104, in view\\n    return self.dispatch(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 509, in dispatch\\n    response = self.handle_exception(exc)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 469, in handle_exception\\n    self.raise_uncaught_exception(exc)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 480, in raise_uncaught_exception\\n    raise exc\\n    ^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 506, in dispatch\\n    response = handler(request, *args, **kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 431, in get\\n    raise e\\n    ^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 428, in get\\n    queryset = self.get_queryset(filters).annotate(&quot;test_category_id&quot;).values(&quot;test_category_id&quot;, &#x27;request_id&#x27;, name=F(&quot;test_category__name&quot;))\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\", line 1630, in annotate\\n    return self._annotate(args, kwargs, select=True)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\", line 1640, in _annotate\\n    self._validate_values_are_expressions(\\n    ^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\", line 1995, in _validate_values_are_expressions\\n    raise TypeError(\\n    ^\\n\\nException Type: TypeError at /product/structured_test_cases_and_scripts/\\nException Value: QuerySet.annotate() received non-expression(s): test_category_id.\\n</textarea>\\n  <br><br>\\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\\n  </div>\\n</form>\\n\\n</div>\\n\\n\\n<div id=\"requestinfo\">\\n  <h2>Request information</h2>\\n\\n\\n  \\n    <h3 id=\"user-info\">USER</h3>\\n    <p>Juniper - damodar</p>\\n  \\n\\n  <h3 id=\"get-info\">GET</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>request_id</td>\\n            <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"post-info\">POST</h3>\\n  \\n    <p>No POST data</p>\\n  \\n\\n  <h3 id=\"files-info\">FILES</h3>\\n  \\n    <p>No FILES data</p>\\n  \\n\\n  <h3 id=\"cookie-info\">COOKIES</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>csrftoken</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n          <tr>\\n            <td>sessionid</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"meta-info\">META</h3>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Variable</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ALLUSERSPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYINSTALL</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\chocolatey&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\\n          <td class=\"code\"><pre>&#x27;133370791278584704&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\crashpad_5180_VTPFHXDUJXIJGMKK&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CLASSPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mqjms.jar;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mq.jar&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COLORTERM</td>\\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMPUTERNAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMSPEC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\cmd.exe&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONFIGSETROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\ConfigSetRoot&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_LENGTH</td>\\n          <td class=\"code\"><pre>&#x27;91&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;application/json&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;C219J5idJvTgSjJfJzNSDOzVdFJ1r8C2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DJANGO_SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DRIVERDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Drivers\\\\\\\\DriverData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EFC_4176</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ELECTRON_RUN_AS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GATEWAY_INTERFACE</td>\\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GIT_ASKPASS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEPATH</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT</td>\\n          <td class=\"code\"><pre>&#x27;*/*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT_ENCODING</td>\\n          <td class=\"code\"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_AUTHORIZATION</td>\\n          <td class=\"code\"><pre>&#x27;Token d03190df82c766c3aab6aaa35adb52fefd5d6263&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CACHE_CONTROL</td>\\n          <td class=\"code\"><pre>&#x27;no-cache&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CONNECTION</td>\\n          <td class=\"code\"><pre>&#x27;keep-alive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_HOST</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_POSTMAN_TOKEN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_USER_AGENT</td>\\n          <td class=\"code\"><pre>&#x27;PostmanRuntime/7.36.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INCLUDE</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\include;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\cplus\\\\\\\\include&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANG</td>\\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LIB</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALAPPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGONSERVER</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_FILE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_DATA_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_INSTALL_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_LIB_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JRE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\jre&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_OF_PROCESSORS</td>\\n          <td class=\"code\"><pre>&#x27;12&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_SYMLINK</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\nodejs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVECONSUMER</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>OS</td>\\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\Scripts;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATHEXT</td>\\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH_INFO</td>\\n          <td class=\"code\"><pre>&#x27;/product/structured_test_cases_and_scripts/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_ARCHITECTURE</td>\\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_IDENTIFIER</td>\\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 165 Stepping 2, GenuineIntel&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_LEVEL</td>\\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_REVISION</td>\\n          <td class=\"code\"><pre>&#x27;a502&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;(gen_ai) $P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PSMODULEPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\WindowsPowerShell\\\\\\\\Modules;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\Modules&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PUBLIC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\Public&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYDEVD_USE_FRAME_EVAL</td>\\n          <td class=\"code\"><pre>&#x27;NO&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYENV</td>\\n          <td class=\"code\"><pre>&#x27;%USERPROFILE%\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONIOENCODING</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONUNBUFFERED</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>QUERY_STRING</td>\\n          <td class=\"code\"><pre>&#x27;request_id=ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_ADDR</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_HOST</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REQUEST_METHOD</td>\\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>RUN_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PORT</td>\\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PROTOCOL</td>\\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_SOFTWARE</td>\\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSIONNAME</td>\\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM</td>\\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM_VERSION</td>\\n          <td class=\"code\"><pre>&#x27;1.85.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERNAME</td>\\n          <td class=\"code\"><pre>&#x27;damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_AMD_ENTRYPOINT</td>\\n          <td class=\"code\"><pre>&#x27;vs/workbench/api/node/extensionHostProcess&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CODE_CACHE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Code\\\\\\\\CachedData\\\\\\\\8b3775030ed1a69b13e4f4c628c612102e30a681&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CRASH_REPORTER_PROCESS_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;extensionHost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CWD</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_IPC_HANDLE</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-git-c239e2437b-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_HANDLES_UNCAUGHT_ERRORS</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_IPC_HOOK</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\16febde85b2dfcc2544cbe3dac85ae44-1.85.2-main-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_L10N_BUNDLE_LOCATION</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_NLS_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;{&quot;locale&quot;:&quot;en-us&quot;,&quot;osLocale&quot;:&quot;en-us&quot;,&quot;availableLanguages&quot;:{},&quot;_languagePackSupport&quot;:true}&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_PID</td>\\n          <td class=\"code\"><pre>&#x27;5180&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WINDIR</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ZES_ENABLE_SYSMAN</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;$P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>__PSLOCKDOWNPOLICY</td>\\n          <td class=\"code\"><pre>&#x27;0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.errors</td>\\n          <td class=\"code\"><pre>&lt;_pydevd_bundle.pydevd_io.IORedirector object at 0x00000221AC47A350&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.file_wrapper</td>\\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.input</td>\\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x00000221B2151DB0&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multiprocess</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multithread</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.run_once</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.url_scheme</td>\\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.version</td>\\n          <td class=\"code\"><pre>(1, 0)</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n\\n  <h3 id=\"settings-info\">Settings</h3>\\n  <h4>Using settings module <code>user.settings</code></h4>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Setting</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ABSOLUTE_URL_OVERRIDES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ADMINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ALLOWED_HOSTS</td>\\n          <td class=\"code\"><pre>[&#x27;*&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPEND_SLASH</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTHENTICATION_BACKENDS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_PASSWORD_VALIDATORS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_USER_MODEL</td>\\n          <td class=\"code\"><pre>&#x27;user.User&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>BASE_DIR</td>\\n          <td class=\"code\"><pre>WindowsPath(&#x27;C:/Users/damod/Desktop/crys_cloud/gen_ai/git_ver_1/GEN_AI_BACKEND&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\\n          <td class=\"code\"><pre>600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_ORIGINS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_CREDENTIALS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>31449600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_FAILURE_VIEW</td>\\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_HEADER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_TRUSTED_ORIGINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_USE_SESSIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\\n             &#x27;AUTOCOMMIT&#x27;: True,\\n             &#x27;CONN_HEALTH_CHECKS&#x27;: False,\\n             &#x27;CONN_MAX_AGE&#x27;: 0,\\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,\\n             &#x27;HOST&#x27;: &#x27;gen-ai.c54r5svdjqsu.us-west-2.rds.amazonaws.com&#x27;,\\n             &#x27;NAME&#x27;: &#x27;GEN_AI&#x27;,\\n             &#x27;OPTIONS&#x27;: {},\\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\\n             &#x27;PORT&#x27;: &#x27;3306&#x27;,\\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\\n                      &#x27;COLLATION&#x27;: None,\\n                      &#x27;MIGRATE&#x27;: True,\\n                      &#x27;MIRROR&#x27;: None,\\n                      &#x27;NAME&#x27;: None},\\n             &#x27;TIME_ZONE&#x27;: None,\\n             &#x27;USER&#x27;: &#x27;admin&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASE_ROUTERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\\n          <td class=\"code\"><pre>1000</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>\\n          <td class=\"code\"><pre>100</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\\n &#x27;%Y-%m-%d %H:%M&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%Y %H:%M&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\\n &#x27;%m/%d/%Y&#x27;,\\n &#x27;%m/%d/%y&#x27;,\\n &#x27;%b %d %Y&#x27;,\\n &#x27;%b %d, %Y&#x27;,\\n &#x27;%d %b %Y&#x27;,\\n &#x27;%d %b, %Y&#x27;,\\n &#x27;%B %d %Y&#x27;,\\n &#x27;%B %d, %Y&#x27;,\\n &#x27;%d %B %Y&#x27;,\\n &#x27;%d %B, %Y&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DECIMAL_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_AUTO_FIELD</td>\\n          <td class=\"code\"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_CHARSET</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FILE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FROM_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_INDEX_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DISALLOWED_USER_AGENTS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST</td>\\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_PASSWORD</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_USER</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_PORT</td>\\n          <td class=\"code\"><pre>25</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_CERTFILE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_KEYFILE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SUBJECT_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_TIMEOUT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_LOCALTIME</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_SSL</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_TLS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_HANDLERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_PERMISSIONS</td>\\n          <td class=\"code\"><pre>420</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_TEMP_DIR</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIRST_DAY_OF_WEEK</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIXTURE_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORCE_SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMAT_MODULE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORM_RENDERER</td>\\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGNORABLE_404_URLS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INSTALLED_APPS</td>\\n          <td class=\"code\"><pre>[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INTERNAL_IPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES</td>\\n          <td class=\"code\"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\\n (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),\\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\\n (&#x27;de&#x27;, &#x27;German&#x27;),\\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\\n (&#x27;en&#x27;, &#x27;English&#x27;),\\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\\n (&#x27;fr&#x27;, &#x27;French&#x27;),\\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\\n (&#x27;ms&#x27;, &#x27;Malay&#x27;),\\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\\n (&#x27;nb&#x27;, &#x27;Norwegian Bokm\\xc3\\xa5l&#x27;),\\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\\n (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),\\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES_BIDI</td>\\n          <td class=\"code\"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_CODE</td>\\n          <td class=\"code\"><pre>&#x27;en-us&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;django_language&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALE_PATHS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING</td>\\n          <td class=\"code\"><pre>{&#x27;disable_existing_loggers&#x27;: False,\\n &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},\\n              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,\\n                       &#x27;filename&#x27;: &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND/log/log_file.log&#x27;,\\n                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},\\n &#x27;root&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;], &#x27;level&#x27;: &#x27;NOTSET&#x27;},\\n &#x27;version&#x27;: 1}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/profile/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/login/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGOUT_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MANAGERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_ROOT</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_URL</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MESSAGE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIDDLEWARE</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIGRATION_MODULES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MONTH_DAY_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F j&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_GROUPING</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_HASHERS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_RESET_TIMEOUT</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PREPEND_WWW</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REST_FRAMEWORK</td>\\n          <td class=\"code\"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework.authentication.TokenAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.BasicAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.SessionAuthentication&#x27;],\\n &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],\\n &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;rest_framework.renderers.JSONRenderer&#x27;]}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ROOT_URLCONF</td>\\n          <td class=\"code\"><pre>&#x27;user.urls&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY_FALLBACKS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_PRELOAD</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_SECONDS</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_PROXY_SSL_HEADER</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REDIRECT_EXEMPT</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REFERRER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_HOST</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_REDIRECT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;root@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_CACHE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>1209600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;sessionid&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_ENGINE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_FILE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SERIALIZER</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SIGNING_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SILENCED_SYSTEM_CHECKS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_FINDERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_ROOT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_URL</td>\\n          <td class=\"code\"><pre>&#x27;/static/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STORAGES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},\\n &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMPLATES</td>\\n          <td class=\"code\"><pre>[{&#x27;APP_DIRS&#x27;: True,\\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\\n  &#x27;DIRS&#x27;: [],\\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\\n                                     &#x27;django.template.context_processors.request&#x27;,\\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_NON_SERIALIZED_APPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_RUNNER</td>\\n          <td class=\"code\"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;,&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_ZONE</td>\\n          <td class=\"code\"><pre>&#x27;UTC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_I18N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_TZ</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_HOST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_PORT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WSGI_APPLICATION</td>\\n          <td class=\"code\"><pre>&#x27;user.wsgi.application&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>X_FRAME_OPTIONS</td>\\n          <td class=\"code\"><pre>&#x27;DENY&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>YEAR_MONTH_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F Y&#x27;</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n  <div id=\"explanation\">\\n    <p>\\n      You\\xe2\\x80\\x99re seeing this error because you have <code>DEBUG = True</code> in your\\n      Django settings file. Change that to <code>False</code>, and Django will\\n      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'"}}, {"model": "user.requesttracking", "pk": 961, "fields": {"request_id": "e7c1eb11bfa044a9aa11952a18c9d7c7", "start_time": "2024-02-07T10:43:06.267Z", "end_time": "2024-02-07T10:43:07.761Z", "created_by": 2, "time_taken": 1.493113, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "500", "error_message": "b'<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\\n  <title>TypeError\\n          at /product/structured_test_cases_and_scripts/</title>\\n  <style type=\"text/css\">\\n    html * { padding:0; margin:0; }\\n    body * { padding:10px 20px; }\\n    body * * { padding:0; }\\n    body { font:small sans-serif; background-color:#fff; color:#000; }\\n    body>div { border-bottom:1px solid #ddd; }\\n    h1 { font-weight:normal; }\\n    h2 { margin-bottom:.8em; }\\n    h3 { margin:1em 0 .5em 0; }\\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\\n    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }\\n    summary { cursor: pointer; }\\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\\n    thead th {\\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\\n    }\\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\\n    table.vars { margin:5px 10px 2px 40px; width: auto; }\\n    table.vars td, table.req td { font-family:monospace; }\\n    table td.code { width:100%; }\\n    table td.code pre { overflow:hidden; }\\n    table.source th { color:#666; }\\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\\n    ul.traceback { list-style-type:none; color: #222; }\\n    ul.traceback li.cause { word-break: break-word; }\\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\\n    div.context { padding:10px 0; overflow:hidden; }\\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\\n    div.context ol li pre { display:inline; }\\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\\n    div.context ol.context-line li span { position:absolute; right:32px; }\\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\\n    .user div.context ol li { color:#666; }\\n    div.commands, summary.commands { margin-left: 40px; }\\n    div.commands a, summary.commands { color:#555; text-decoration:none; }\\n    .user div.commands a { color: black; }\\n    #summary { background: #ffc; }\\n    #summary h2 { font-weight: normal; color: #666; }\\n    #explanation { background:#eee; }\\n    #template, #template-not-exist { background:#f6f6f6; }\\n    #template-not-exist ul { margin: 0 0 10px 20px; }\\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\\n    #unicode-hint { background:#eee; }\\n    #traceback { background:#eee; }\\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\\n    #summary table { border:none; background:transparent; }\\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\\n    #requestinfo h3 { margin-bottom:-1em; }\\n    .error { background: #ffc; }\\n    .specific { color:#cc3300; font-weight:bold; }\\n    h2 span.commands { font-size:.7em; font-weight:normal; }\\n    span.commands a:link {color:#5E5694;}\\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\\n    .append-bottom { margin-bottom: 10px; }\\n    .fname { user-select: all; }\\n  </style>\\n  \\n  <script>\\n    function hideAll(elems) {\\n      for (var e = 0; e < elems.length; e++) {\\n        elems[e].style.display = \\'none\\';\\n      }\\n    }\\n    window.onload = function() {\\n      hideAll(document.querySelectorAll(\\'ol.pre-context\\'));\\n      hideAll(document.querySelectorAll(\\'ol.post-context\\'));\\n      hideAll(document.querySelectorAll(\\'div.pastebin\\'));\\n    }\\n    function toggle() {\\n      for (var i = 0; i < arguments.length; i++) {\\n        var e = document.getElementById(arguments[i]);\\n        if (e) {\\n          e.style.display = e.style.display == \\'none\\' ? \\'block\\': \\'none\\';\\n        }\\n      }\\n      return false;\\n    }\\n    function switchPastebinFriendly(link) {\\n      s1 = \"Switch to copy-and-paste view\";\\n      s2 = \"Switch back to interactive view\";\\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\\n      toggle(\\'browserTraceback\\', \\'pastebinTraceback\\');\\n      return false;\\n    }\\n  </script>\\n  \\n</head>\\n<body>\\n<div id=\"summary\">\\n  <h1>TypeError\\n       at /product/structured_test_cases_and_scripts/</h1>\\n  <pre class=\"exception_value\">QuerySet.annotate() received non-expression(s): test_category_id.</pre>\\n  <table class=\"meta\">\\n\\n    <tr>\\n      <th>Request Method:</th>\\n      <td>GET</td>\\n    </tr>\\n    <tr>\\n      <th>Request URL:</th>\\n      <td>http://127.0.0.1:8000/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Django Version:</th>\\n      <td>5.0.1</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Exception Type:</th>\\n      <td>TypeError</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Value:</th>\\n      <td><pre>QuerySet.annotate() received non-expression(s): test_category_id.</pre></td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Exception Location:</th>\\n      <td><span class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</span>, line 1995, in _validate_values_are_expressions</td>\\n    </tr>\\n\\n\\n    <tr>\\n      <th>Raised during:</th>\\n      <td>product.views.TestCasesAndScripts</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Python Executable:</th>\\n      <td>C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Scripts\\\\python.exe</td>\\n    </tr>\\n    <tr>\\n      <th>Python Version:</th>\\n      <td>3.11.1</td>\\n    </tr>\\n    <tr>\\n      <th>Python Path:</th>\\n      <td><pre>[&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND&#x27;,\\n &#x27;c:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\ms-python.python-2023.22.1\\\\\\\\pythonFiles\\\\\\\\lib\\\\\\\\python\\\\\\\\debugpy\\\\\\\\_vendored\\\\\\\\pydevd&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\python311.zip&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\DLLs&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Lib&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai&#x27;,\\n &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\envs\\\\\\\\gen_ai\\\\\\\\Lib\\\\\\\\site-packages&#x27;]</pre></td>\\n    </tr>\\n    <tr>\\n      <th>Server time:</th>\\n      <td>Wed, 07 Feb 2024 10:43:07 +0000</td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\\n\\n\\n<div id=\"traceback\">\\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\\n    Switch to copy-and-paste view</a></span>\\n  </h2>\\n  <div id=\"browserTraceback\">\\n    <ul class=\"traceback\">\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py</code>, line 55, in inner\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368877140736\">\\n              \\n                <ol start=\"48\" class=\"pre-context\" id=\"pre1368877140736\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>        return inner</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>        @wraps(get_response)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>        def inner(request):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"55\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>                response = get_response(request)\\n                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'56\\' class=\"post-context\" id=\"post1368877140736\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>            except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>            return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre>        return inner</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140736\\', \\'post1368877140736\\')\"><pre></pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368877140736\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&#x27;QuerySet.annotate() received non-expression(s): test_category_id.&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>get_response</td>\\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000013EB32EBC50&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py</code>, line 197, in _get_response\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368877140608\">\\n              \\n                <ol start=\"190\" class=\"pre-context\" id=\"pre1368877140608\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>        if response is None:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>            try:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"197\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'198\\' class=\"post-context\" id=\"post1368877140608\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>            except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>                if response is None:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>                    raise</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140608\\', \\'post1368877140608\\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368877140608\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000013EB6C47C40&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>callback_kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>middleware_method</td>\\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000013EB32EBC50&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>wrapped_callback</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000013EB6C47C40&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py</code>, line 65, in _view_wrapper\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368877140544\">\\n              \\n                <ol start=\"58\" class=\"pre-context\" id=\"pre1368877140544\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre>            return await view_func(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre>    else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"65\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre>            return view_func(request, *args, **kwargs)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'66\\' class=\"post-context\" id=\"post1368877140544\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre>    _view_wrapper.csrf_exempt = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140544\\', \\'post1368877140544\\')\"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368877140544\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>view_func</td>\\n                    <td class=\"code\"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000013EB6C47BA0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py</code>, line 104, in view\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368871748352\">\\n              \\n                <ol start=\"97\" class=\"pre-context\" id=\"pre1368871748352\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>            self = cls(**initkwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>                raise AttributeError(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>                )</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"104\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>            return self.dispatch(request, *args, **kwargs)\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'105\\' class=\"post-context\" id=\"post1368871748352\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>        view.view_class = cls</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871748352\\', \\'post1368871748352\\')\"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368871748352\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>cls</td>\\n                    <td class=\"code\"><pre>&lt;class &#x27;product.views.TestCasesAndScripts&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>initkwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 509, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368877140480\">\\n              \\n                <ol start=\"502\" class=\"pre-context\" id=\"pre1368877140480\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>        except Exception as exc:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"509\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>            response = self.handle_exception(exc)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'510\\' class=\"post-context\" id=\"post1368877140480\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>        return self.response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140480\\', \\'post1368877140480\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368877140480\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method TestCasesAndScripts.get of &lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 469, in handle_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368877140416\">\\n              \\n                <ol start=\"462\" class=\"pre-context\" id=\"pre1368877140416\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>        response = exception_handler(exc, context)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>        if response is None:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"469\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>            self.raise_uncaught_exception(exc)\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'470\\' class=\"post-context\" id=\"post1368877140416\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>        response.exception = True</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>        return response</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877140416\\', \\'post1368877140416\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368877140416\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>context</td>\\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\\n &#x27;kwargs&#x27;: {},\\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;,\\n &#x27;view&#x27;: &lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&#x27;QuerySet.annotate() received non-expression(s): test_category_id.&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>exception_handler</td>\\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x0000013EB3F7D620&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>response</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 480, in raise_uncaught_exception\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368866832768\">\\n              \\n                <ol start=\"473\" class=\"pre-context\" id=\"pre1368866832768\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>        if settings.DEBUG:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>            request = self.request</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"480\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>        raise exc\\n             ^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'481\\' class=\"post-context\" id=\"post1368866832768\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>    # be overridden.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866832768\\', \\'post1368866832768\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368866832768\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>exc</td>\\n                    <td class=\"code\"><pre>TypeError(&#x27;QuerySet.annotate() received non-expression(s): test_category_id.&#x27;)</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>renderer_format</td>\\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>use_plaintext_traceback</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py</code>, line 506, in dispatch\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368877139584\">\\n              \\n                <ol start=\"499\" class=\"pre-context\" id=\"pre1368877139584\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>            # Get the appropriate handler method</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>            else:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre></pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"506\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>            response = handler(request, *args, **kwargs)\\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'507\\' class=\"post-context\" id=\"post1368877139584\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>        except Exception as exc:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>            response = self.handle_exception(exc)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368877139584\\', \\'post1368877139584\\')\"><pre>        return self.response</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368877139584\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>handler</td>\\n                    <td class=\"code\"><pre>&lt;bound method TestCasesAndScripts.get of &lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 431, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368871754560\">\\n              \\n                <ol start=\"424\" class=\"pre-context\" id=\"pre1368871754560\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>            }</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>            test_category_id = request.GET.get(&quot;test_category_id&quot;, None)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>            if not test_category_id:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>                # filters[&#x27;test_category_id&#x27;] = test_category_id</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>                queryset = self.get_queryset(filters).annotate(id = &quot;test_category_id&quot;).values(&quot;test_category_id&quot;, &#x27;request_id&#x27;, name=F(&quot;test_category__name&quot;))</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>                return Response(list(queryset))</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>        except Exception as e:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"431\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>            raise e\\n                 ^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'432\\' class=\"post-context\" id=\"post1368871754560\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>class TestCasesView(generics.ListAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>    permission_classes = (IsAuthenticated,)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>    authentication_classes = (BasicAuthentication, TokenAuthentication)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>    filter_backends = (django_filters.DjangoFilterBackend,)</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871754560\\', \\'post1368871754560\\')\"><pre>    filterset_class = TestCasesFilter</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368871754560\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filters</td>\\n                    <td class=\"code\"><pre>{&#x27;customer&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;request_id&#x27;: &#x27;ade794c20eb046879ce39c6d4787880f&#x27;,\\n &#x27;status&#x27;: 1}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request_id</td>\\n                    <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>test_category_id</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame user\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py</code>, line 428, in get\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368871149760\">\\n              \\n                <ol start=\"421\" class=\"pre-context\" id=\"pre1368871149760\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>                &quot;status&quot;:1,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>                &quot;customer&quot;:request.user.customer,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>                &quot;request_id&quot; : request_id,</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>            }</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>            test_category_id = request.GET.get(&quot;test_category_id&quot;, None)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>            if not test_category_id:</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>                # filters[&#x27;test_category_id&#x27;] = test_category_id</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"428\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>                queryset = self.get_queryset(filters).annotate(id = &quot;test_category_id&quot;).values(&quot;test_category_id&quot;, &#x27;request_id&#x27;, name=F(&quot;test_category__name&quot;))\\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'429\\' class=\"post-context\" id=\"post1368871149760\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>                return Response(list(queryset))</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>        except Exception as e:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>            raise e</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>class TestCasesView(generics.ListAPIView):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871149760\\', \\'post1368871149760\\')\"><pre>    permission_classes = (IsAuthenticated,)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368871149760\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>filters</td>\\n                    <td class=\"code\"><pre>{&#x27;customer&#x27;: &lt;Customer: Juniper - Juniper&gt;,\\n &#x27;request_id&#x27;: &#x27;ade794c20eb046879ce39c6d4787880f&#x27;,\\n &#x27;status&#x27;: 1}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request</td>\\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f&#x27;&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>request_id</td>\\n                    <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;product.views.TestCasesAndScripts object at 0x0000013EB71D6CD0&gt;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>test_category_id</td>\\n                    <td class=\"code\"><pre>None</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</code>, line 1630, in annotate\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368873200192\">\\n              \\n                <ol start=\"1623\" class=\"pre-context\" id=\"pre1368873200192\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>    def annotate(self, *args, **kwargs):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        Return a query set in which the returned objects have been annotated</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        with extra data or aggregations.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        self._not_support_combined_queries(&quot;annotate&quot;)</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1630\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        return self._annotate(args, kwargs, select=True)\\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1631\\' class=\"post-context\" id=\"post1368873200192\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre></pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>    def alias(self, *args, **kwargs):</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        Return a query set with added aliases for extra data or aggregations.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368873200192\\', \\'post1368873200192\\')\"><pre>        self._not_support_combined_queries(&quot;alias&quot;)</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368873200192\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{&#x27;id&#x27;: &#x27;test_category_id&#x27;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</code>, line 1640, in _annotate\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368871752512\">\\n              \\n                <ol start=\"1633\" class=\"pre-context\" id=\"pre1368871752512\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        Return a query set with added aliases for extra data or aggregations.</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        &quot;&quot;&quot;</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        self._not_support_combined_queries(&quot;alias&quot;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        return self._annotate(args, kwargs, select=False)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>    def _annotate(self, args, kwargs, select=True):</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1640\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        self._validate_values_are_expressions(\\n              ^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1641\\' class=\"post-context\" id=\"post1368871752512\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>            args + tuple(kwargs.values()), method_name=&quot;annotate&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        )</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        annotations = {}</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>        for arg in args:</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>            # The default_alias property may raise a TypeError.</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368871752512\\', \\'post1368871752512\\')\"><pre>            try:</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368871752512\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>args</td>\\n                    <td class=\"code\"><pre>()</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>kwargs</td>\\n                    <td class=\"code\"><pre>{&#x27;id&#x27;: &#x27;test_category_id&#x27;}</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>select</td>\\n                    <td class=\"code\"><pre>True</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>self</td>\\n                    <td class=\"code\"><pre>&lt;QuerySet [&lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;, &lt;StructuredTestCases: juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table&gt;]&gt;</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n        \\n        <li class=\"frame django\">\\n          \\n            <code class=\"fname\">C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py</code>, line 1995, in _validate_values_are_expressions\\n          \\n\\n          \\n            <div class=\"context\" id=\"c1368866004160\">\\n              \\n                <ol start=\"1988\" class=\"pre-context\" id=\"pre1368866004160\">\\n                \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre></pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>    @staticmethod</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>    def _validate_values_are_expressions(values, method_name):</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>        invalid_args = sorted(</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>            str(arg) for arg in values if not hasattr(arg, &quot;resolve_expression&quot;)</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>        )</pre></li>\\n                \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>        if invalid_args:</pre></li>\\n                \\n                </ol>\\n              \\n              <ol start=\"1995\" class=\"context-line\">\\n                <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>            raise TypeError(\\n                  ^</pre> <span>\\xe2\\x80\\xa6</span></li>\\n              </ol>\\n              \\n                <ol start=\\'1996\\' class=\"post-context\" id=\"post1368866004160\">\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>                &quot;QuerySet.%s() received non-expression(s): %s.&quot;</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>                % (</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>                    method_name,</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>                    &quot;, &quot;.join(invalid_args),</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>                )</pre></li>\\n                  \\n                  <li onclick=\"toggle(\\'pre1368866004160\\', \\'post1368866004160\\')\"><pre>            )</pre></li>\\n                  \\n              </ol>\\n              \\n            </div>\\n          \\n\\n          \\n            \\n              <details>\\n                <summary class=\"commands\">Local vars</summary>\\n            \\n            <table class=\"vars\" id=\"v1368866004160\">\\n              <thead>\\n                <tr>\\n                  <th>Variable</th>\\n                  <th>Value</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                \\n                  <tr>\\n                    <td>invalid_args</td>\\n                    <td class=\"code\"><pre>[&#x27;test_category_id&#x27;]</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>method_name</td>\\n                    <td class=\"code\"><pre>&#x27;annotate&#x27;</pre></td>\\n                  </tr>\\n                \\n                  <tr>\\n                    <td>values</td>\\n                    <td class=\"code\"><pre>(&#x27;test_category_id&#x27;,)</pre></td>\\n                  </tr>\\n                \\n              </tbody>\\n            </table>\\n            </details>\\n          \\n        </li>\\n      \\n    </ul>\\n  </div>\\n\\n  <form action=\"https://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\\n    <input type=\"hidden\" name=\"title\"\\n      value=\"TypeError at /product/structured_test_cases_and_scripts/\">\\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\\nEnvironment:\\n\\n\\nRequest Method: GET\\nRequest URL: http://127.0.0.1:8000/product/structured_test_cases_and_scripts/?request_id=ade794c20eb046879ce39c6d4787880f\\n\\nDjango Version: 5.0.1\\nPython Version: 3.11.1\\nInstalled Applications:\\n[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]\\nInstalled Middleware:\\n[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]\\n\\n\\n\\nTraceback (most recent call last):\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\exception.py\", line 55, in inner\\n    response = get_response(request)\\n               ^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 197, in _get_response\\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\csrf.py\", line 65, in _view_wrapper\\n    return view_func(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\views\\\\generic\\\\base.py\", line 104, in view\\n    return self.dispatch(request, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 509, in dispatch\\n    response = self.handle_exception(exc)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 469, in handle_exception\\n    self.raise_uncaught_exception(exc)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 480, in raise_uncaught_exception\\n    raise exc\\n    ^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\rest_framework\\\\views.py\", line 506, in dispatch\\n    response = handler(request, *args, **kwargs)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 431, in get\\n    raise e\\n    ^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\Desktop\\\\crys_cloud\\\\gen_ai\\\\git_ver_1\\\\GEN_AI_BACKEND\\\\product\\\\views.py\", line 428, in get\\n    queryset = self.get_queryset(filters).annotate(id = &quot;test_category_id&quot;).values(&quot;test_category_id&quot;, &#x27;request_id&#x27;, name=F(&quot;test_category__name&quot;))\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\", line 1630, in annotate\\n    return self._annotate(args, kwargs, select=True)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\", line 1640, in _annotate\\n    self._validate_values_are_expressions(\\n    ^\\n  File \"C:\\\\Users\\\\damod\\\\envs\\\\gen_ai\\\\Lib\\\\site-packages\\\\django\\\\db\\\\models\\\\query.py\", line 1995, in _validate_values_are_expressions\\n    raise TypeError(\\n    ^\\n\\nException Type: TypeError at /product/structured_test_cases_and_scripts/\\nException Value: QuerySet.annotate() received non-expression(s): test_category_id.\\n</textarea>\\n  <br><br>\\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\\n  </div>\\n</form>\\n\\n</div>\\n\\n\\n<div id=\"requestinfo\">\\n  <h2>Request information</h2>\\n\\n\\n  \\n    <h3 id=\"user-info\">USER</h3>\\n    <p>Juniper - damodar</p>\\n  \\n\\n  <h3 id=\"get-info\">GET</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>request_id</td>\\n            <td class=\"code\"><pre>&#x27;ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"post-info\">POST</h3>\\n  \\n    <p>No POST data</p>\\n  \\n\\n  <h3 id=\"files-info\">FILES</h3>\\n  \\n    <p>No FILES data</p>\\n  \\n\\n  <h3 id=\"cookie-info\">COOKIES</h3>\\n  \\n    <table class=\"req\">\\n      <thead>\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \\n          <tr>\\n            <td>csrftoken</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n          <tr>\\n            <td>sessionid</td>\\n            <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n          </tr>\\n        \\n      </tbody>\\n    </table>\\n  \\n\\n  <h3 id=\"meta-info\">META</h3>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Variable</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ALLUSERSPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYINSTALL</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\chocolatey&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\\n          <td class=\"code\"><pre>&#x27;133370791278584704&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\crashpad_5180_VTPFHXDUJXIJGMKK&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CLASSPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mqjms.jar;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib\\\\\\\\com.ibm.mq.jar&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COLORTERM</td>\\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMMONPROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\Common Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMPUTERNAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>COMSPEC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\cmd.exe&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONFIGSETROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS\\\\\\\\ConfigSetRoot&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_LENGTH</td>\\n          <td class=\"code\"><pre>&#x27;91&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CONTENT_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;application/json&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;C219J5idJvTgSjJfJzNSDOzVdFJ1r8C2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DJANGO_SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DRIVERDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Drivers\\\\\\\\DriverData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EFC_4176</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ELECTRON_RUN_AS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GATEWAY_INTERFACE</td>\\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>GIT_ASKPASS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HOMEPATH</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT</td>\\n          <td class=\"code\"><pre>&#x27;*/*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_ACCEPT_ENCODING</td>\\n          <td class=\"code\"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_AUTHORIZATION</td>\\n          <td class=\"code\"><pre>&#x27;Token d03190df82c766c3aab6aaa35adb52fefd5d6263&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CACHE_CONTROL</td>\\n          <td class=\"code\"><pre>&#x27;no-cache&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_CONNECTION</td>\\n          <td class=\"code\"><pre>&#x27;keep-alive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_COOKIE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_HOST</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_POSTMAN_TOKEN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>HTTP_USER_AGENT</td>\\n          <td class=\"code\"><pre>&#x27;PostmanRuntime/7.36.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INCLUDE</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\include;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\cplus\\\\\\\\include&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANG</td>\\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LIB</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\lib&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALAPPDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGONSERVER</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_FILE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_DATA_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData\\\\\\\\IBM\\\\\\\\MQ&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_INSTALL_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JAVA_LIB_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MQ_JRE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\jre&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_OF_PROCESSORS</td>\\n          <td class=\"code\"><pre>&#x27;12&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_HOME</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NVM_SYMLINK</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files\\\\\\\\nodejs&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ONEDRIVECONSUMER</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\OneDrive&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>OS</td>\\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai\\\\\\\\Scripts;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATHEXT</td>\\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PATH_INFO</td>\\n          <td class=\"code\"><pre>&#x27;/product/structured_test_cases_and_scripts/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_ARCHITECTURE</td>\\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_IDENTIFIER</td>\\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 165 Stepping 2, GenuineIntel&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_LEVEL</td>\\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROCESSOR_REVISION</td>\\n          <td class=\"code\"><pre>&#x27;a502&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMDATA</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\ProgramData&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMFILES(X86)</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files (x86)&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROGRAMW6432</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Program Files&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;(gen_ai) $P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PSMODULEPATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\WindowsPowerShell\\\\\\\\Modules;C:\\\\\\\\WINDOWS\\\\\\\\system32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\Modules&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PUBLIC</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\Public&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYDEVD_USE_FRAME_EVAL</td>\\n          <td class=\"code\"><pre>&#x27;NO&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYENV</td>\\n          <td class=\"code\"><pre>&#x27;%USERPROFILE%\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONIOENCODING</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PYTHONUNBUFFERED</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>QUERY_STRING</td>\\n          <td class=\"code\"><pre>&#x27;request_id=ade794c20eb046879ce39c6d4787880f&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_ADDR</td>\\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REMOTE_HOST</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REQUEST_METHOD</td>\\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>RUN_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PORT</td>\\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_PROTOCOL</td>\\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_SOFTWARE</td>\\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSIONNAME</td>\\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMDRIVE</td>\\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SYSTEMROOT</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM</td>\\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TERM_PROGRAM_VERSION</td>\\n          <td class=\"code\"><pre>&#x27;1.85.2&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TMP</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;MSI&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERNAME</td>\\n          <td class=\"code\"><pre>&#x27;damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USERPROFILE</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Envs\\\\\\\\gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VIRTUAL_ENV_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;gen_ai&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_AMD_ENTRYPOINT</td>\\n          <td class=\"code\"><pre>&#x27;vs/workbench/api/node/extensionHostProcess&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CODE_CACHE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\Code\\\\\\\\CachedData\\\\\\\\8b3775030ed1a69b13e4f4c628c612102e30a681&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CRASH_REPORTER_PROCESS_TYPE</td>\\n          <td class=\"code\"><pre>&#x27;extensionHost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_CWD</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_GIT_IPC_HANDLE</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-git-c239e2437b-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_HANDLES_UNCAUGHT_ERRORS</td>\\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_IPC_HOOK</td>\\n          <td class=\"code\"><pre>&#x27;\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\16febde85b2dfcc2544cbe3dac85ae44-1.85.2-main-sock&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_L10N_BUNDLE_LOCATION</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_NLS_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;{&quot;locale&quot;:&quot;en-us&quot;,&quot;osLocale&quot;:&quot;en-us&quot;,&quot;availableLanguages&quot;:{},&quot;_languagePackSupport&quot;:true}&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>VSCODE_PID</td>\\n          <td class=\"code\"><pre>&#x27;5180&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WINDIR</td>\\n          <td class=\"code\"><pre>&#x27;C:\\\\\\\\WINDOWS&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ZES_ENABLE_SYSMAN</td>\\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PATH</td>\\n          <td class=\"code\"><pre>(&#x27;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\java\\\\\\\\lib64;C:\\\\\\\\Windows\\\\\\\\system32;C:\\\\\\\\Windows;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files (x86)\\\\\\\\NVIDIA Corporation\\\\\\\\PhysX\\\\\\\\Common;C:\\\\\\\\Program Files\\\\\\\\NVIDIA &#x27;\\n &#x27;Corporation\\\\\\\\NVIDIA &#x27;\\n &#x27;NvDLISR;C:\\\\\\\\WINDOWS\\\\\\\\system32;C:\\\\\\\\WINDOWS;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\Wbem;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\;C:\\\\\\\\WINDOWS\\\\\\\\System32\\\\\\\\OpenSSH\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSSAMCLI\\\\\\\\bin\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X64\\\\\\\\;C:\\\\\\\\Program Files (x86)\\\\\\\\Pulse &#x27;\\n &#x27;Secure\\\\\\\\VC142.CRT\\\\\\\\X86\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Git\\\\\\\\cmd;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Amazon\\\\\\\\AWSCLIV2\\\\\\\\;C:\\\\\\\\ProgramData\\\\\\\\chocolatey\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin64;C:\\\\\\\\Program Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin64;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\IBM\\\\\\\\MQ\\\\\\\\tools\\\\\\\\c\\\\\\\\samples\\\\\\\\bin;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\PuTTY\\\\\\\\;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\Graphviz\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\Scripts\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Python\\\\\\\\Python311\\\\\\\\;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Microsoft\\\\\\\\WindowsApps;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft &#x27;\\n &#x27;VS &#x27;\\n &#x27;Code\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\npm;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\AppData\\\\\\\\Roaming\\\\\\\\nvm;C:\\\\\\\\Program &#x27;\\n &#x27;Files\\\\\\\\nodejs;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\bin;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\.pyenv\\\\\\\\pyenv-win\\\\\\\\shims;&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>_OLD_VIRTUAL_PROMPT</td>\\n          <td class=\"code\"><pre>&#x27;$P$G&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>__PSLOCKDOWNPOLICY</td>\\n          <td class=\"code\"><pre>&#x27;0&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.errors</td>\\n          <td class=\"code\"><pre>&lt;_pydevd_bundle.pydevd_io.IORedirector object at 0x0000013EB16AA4D0&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.file_wrapper</td>\\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.input</td>\\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x0000013EB7407CA0&gt;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multiprocess</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.multithread</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.run_once</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.url_scheme</td>\\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>wsgi.version</td>\\n          <td class=\"code\"><pre>(1, 0)</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n\\n  <h3 id=\"settings-info\">Settings</h3>\\n  <h4>Using settings module <code>user.settings</code></h4>\\n  <table class=\"req\">\\n    <thead>\\n      <tr>\\n        <th>Setting</th>\\n        <th>Value</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      \\n        <tr>\\n          <td>ABSOLUTE_URL_OVERRIDES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ADMINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ALLOWED_HOSTS</td>\\n          <td class=\"code\"><pre>[&#x27;*&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>APPEND_SLASH</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTHENTICATION_BACKENDS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_PASSWORD_VALIDATORS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>AUTH_USER_MODEL</td>\\n          <td class=\"code\"><pre>&#x27;user.User&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>BASE_DIR</td>\\n          <td class=\"code\"><pre>WindowsPath(&#x27;C:/Users/damod/Desktop/crys_cloud/gen_ai/git_ver_1/GEN_AI_BACKEND&#x27;)</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\\n          <td class=\"code\"><pre>600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_ALL_ORIGINS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_CREDENTIALS</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CORS_ALLOW_HEADERS</td>\\n          <td class=\"code\"><pre>&#x27;*&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>31449600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_FAILURE_VIEW</td>\\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_HEADER_NAME</td>\\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_TRUSTED_ORIGINS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>CSRF_USE_SESSIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\\n             &#x27;AUTOCOMMIT&#x27;: True,\\n             &#x27;CONN_HEALTH_CHECKS&#x27;: False,\\n             &#x27;CONN_MAX_AGE&#x27;: 0,\\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,\\n             &#x27;HOST&#x27;: &#x27;gen-ai.c54r5svdjqsu.us-west-2.rds.amazonaws.com&#x27;,\\n             &#x27;NAME&#x27;: &#x27;GEN_AI&#x27;,\\n             &#x27;OPTIONS&#x27;: {},\\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\\n             &#x27;PORT&#x27;: &#x27;3306&#x27;,\\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\\n                      &#x27;COLLATION&#x27;: None,\\n                      &#x27;MIGRATE&#x27;: True,\\n                      &#x27;MIRROR&#x27;: None,\\n                      &#x27;NAME&#x27;: None},\\n             &#x27;TIME_ZONE&#x27;: None,\\n             &#x27;USER&#x27;: &#x27;admin&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATABASE_ROUTERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\\n          <td class=\"code\"><pre>1000</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>\\n          <td class=\"code\"><pre>100</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATETIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\\n &#x27;%Y-%m-%d %H:%M&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%Y %H:%M&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DATE_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\\n &#x27;%m/%d/%Y&#x27;,\\n &#x27;%m/%d/%y&#x27;,\\n &#x27;%b %d %Y&#x27;,\\n &#x27;%b %d, %Y&#x27;,\\n &#x27;%d %b %Y&#x27;,\\n &#x27;%d %b, %Y&#x27;,\\n &#x27;%B %d %Y&#x27;,\\n &#x27;%B %d, %Y&#x27;,\\n &#x27;%d %B %Y&#x27;,\\n &#x27;%d %B, %Y&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DECIMAL_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_AUTO_FIELD</td>\\n          <td class=\"code\"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_CHARSET</td>\\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FILE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_FROM_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_INDEX_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DEFAULT_TABLESPACE</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>DISALLOWED_USER_AGENTS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST</td>\\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_PASSWORD</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_HOST_USER</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_PORT</td>\\n          <td class=\"code\"><pre>25</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_CERTFILE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SSL_KEYFILE</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_SUBJECT_PREFIX</td>\\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_TIMEOUT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_LOCALTIME</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_SSL</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>EMAIL_USE_TLS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_HANDLERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\\n          <td class=\"code\"><pre>2621440</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_PERMISSIONS</td>\\n          <td class=\"code\"><pre>420</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FILE_UPLOAD_TEMP_DIR</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIRST_DAY_OF_WEEK</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FIXTURE_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORCE_SCRIPT_NAME</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMAT_MODULE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>FORM_RENDERER</td>\\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>IGNORABLE_404_URLS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INSTALLED_APPS</td>\\n          <td class=\"code\"><pre>[&#x27;corsheaders&#x27;,\\n &#x27;django.contrib.admin&#x27;,\\n &#x27;django.contrib.auth&#x27;,\\n &#x27;rest_framework.authtoken&#x27;,\\n &#x27;django.contrib.contenttypes&#x27;,\\n &#x27;django.contrib.sessions&#x27;,\\n &#x27;django.contrib.messages&#x27;,\\n &#x27;django.contrib.staticfiles&#x27;,\\n &#x27;django_extensions&#x27;,\\n &#x27;user&#x27;,\\n &#x27;product&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>INTERNAL_IPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES</td>\\n          <td class=\"code\"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),\\n (&#x27;ar&#x27;, &#x27;Arabic&#x27;),\\n (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),\\n (&#x27;ast&#x27;, &#x27;Asturian&#x27;),\\n (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),\\n (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),\\n (&#x27;be&#x27;, &#x27;Belarusian&#x27;),\\n (&#x27;bn&#x27;, &#x27;Bengali&#x27;),\\n (&#x27;br&#x27;, &#x27;Breton&#x27;),\\n (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),\\n (&#x27;ca&#x27;, &#x27;Catalan&#x27;),\\n (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),\\n (&#x27;cs&#x27;, &#x27;Czech&#x27;),\\n (&#x27;cy&#x27;, &#x27;Welsh&#x27;),\\n (&#x27;da&#x27;, &#x27;Danish&#x27;),\\n (&#x27;de&#x27;, &#x27;German&#x27;),\\n (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),\\n (&#x27;el&#x27;, &#x27;Greek&#x27;),\\n (&#x27;en&#x27;, &#x27;English&#x27;),\\n (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),\\n (&#x27;en-gb&#x27;, &#x27;British English&#x27;),\\n (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),\\n (&#x27;es&#x27;, &#x27;Spanish&#x27;),\\n (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),\\n (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),\\n (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),\\n (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),\\n (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),\\n (&#x27;et&#x27;, &#x27;Estonian&#x27;),\\n (&#x27;eu&#x27;, &#x27;Basque&#x27;),\\n (&#x27;fa&#x27;, &#x27;Persian&#x27;),\\n (&#x27;fi&#x27;, &#x27;Finnish&#x27;),\\n (&#x27;fr&#x27;, &#x27;French&#x27;),\\n (&#x27;fy&#x27;, &#x27;Frisian&#x27;),\\n (&#x27;ga&#x27;, &#x27;Irish&#x27;),\\n (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),\\n (&#x27;gl&#x27;, &#x27;Galician&#x27;),\\n (&#x27;he&#x27;, &#x27;Hebrew&#x27;),\\n (&#x27;hi&#x27;, &#x27;Hindi&#x27;),\\n (&#x27;hr&#x27;, &#x27;Croatian&#x27;),\\n (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),\\n (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),\\n (&#x27;hy&#x27;, &#x27;Armenian&#x27;),\\n (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),\\n (&#x27;id&#x27;, &#x27;Indonesian&#x27;),\\n (&#x27;ig&#x27;, &#x27;Igbo&#x27;),\\n (&#x27;io&#x27;, &#x27;Ido&#x27;),\\n (&#x27;is&#x27;, &#x27;Icelandic&#x27;),\\n (&#x27;it&#x27;, &#x27;Italian&#x27;),\\n (&#x27;ja&#x27;, &#x27;Japanese&#x27;),\\n (&#x27;ka&#x27;, &#x27;Georgian&#x27;),\\n (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),\\n (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),\\n (&#x27;km&#x27;, &#x27;Khmer&#x27;),\\n (&#x27;kn&#x27;, &#x27;Kannada&#x27;),\\n (&#x27;ko&#x27;, &#x27;Korean&#x27;),\\n (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),\\n (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),\\n (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),\\n (&#x27;lv&#x27;, &#x27;Latvian&#x27;),\\n (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),\\n (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),\\n (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),\\n (&#x27;mr&#x27;, &#x27;Marathi&#x27;),\\n (&#x27;ms&#x27;, &#x27;Malay&#x27;),\\n (&#x27;my&#x27;, &#x27;Burmese&#x27;),\\n (&#x27;nb&#x27;, &#x27;Norwegian Bokm\\xc3\\xa5l&#x27;),\\n (&#x27;ne&#x27;, &#x27;Nepali&#x27;),\\n (&#x27;nl&#x27;, &#x27;Dutch&#x27;),\\n (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),\\n (&#x27;os&#x27;, &#x27;Ossetic&#x27;),\\n (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),\\n (&#x27;pl&#x27;, &#x27;Polish&#x27;),\\n (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),\\n (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),\\n (&#x27;ro&#x27;, &#x27;Romanian&#x27;),\\n (&#x27;ru&#x27;, &#x27;Russian&#x27;),\\n (&#x27;sk&#x27;, &#x27;Slovak&#x27;),\\n (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),\\n (&#x27;sq&#x27;, &#x27;Albanian&#x27;),\\n (&#x27;sr&#x27;, &#x27;Serbian&#x27;),\\n (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),\\n (&#x27;sv&#x27;, &#x27;Swedish&#x27;),\\n (&#x27;sw&#x27;, &#x27;Swahili&#x27;),\\n (&#x27;ta&#x27;, &#x27;Tamil&#x27;),\\n (&#x27;te&#x27;, &#x27;Telugu&#x27;),\\n (&#x27;tg&#x27;, &#x27;Tajik&#x27;),\\n (&#x27;th&#x27;, &#x27;Thai&#x27;),\\n (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),\\n (&#x27;tr&#x27;, &#x27;Turkish&#x27;),\\n (&#x27;tt&#x27;, &#x27;Tatar&#x27;),\\n (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),\\n (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),\\n (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),\\n (&#x27;ur&#x27;, &#x27;Urdu&#x27;),\\n (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),\\n (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),\\n (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),\\n (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGES_BIDI</td>\\n          <td class=\"code\"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_CODE</td>\\n          <td class=\"code\"><pre>&#x27;en-us&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;django_language&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LANGUAGE_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOCALE_PATHS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING</td>\\n          <td class=\"code\"><pre>{&#x27;disable_existing_loggers&#x27;: False,\\n &#x27;handlers&#x27;: {&#x27;console&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;},\\n              &#x27;file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,\\n                       &#x27;filename&#x27;: &#x27;C:\\\\\\\\Users\\\\\\\\damod\\\\\\\\Desktop\\\\\\\\crys_cloud\\\\\\\\gen_ai\\\\\\\\git_ver_1\\\\\\\\GEN_AI_BACKEND/log/log_file.log&#x27;,\\n                       &#x27;level&#x27;: &#x27;DEBUG&#x27;}},\\n &#x27;root&#x27;: {&#x27;handlers&#x27;: [&#x27;file&#x27;], &#x27;level&#x27;: &#x27;NOTSET&#x27;},\\n &#x27;version&#x27;: 1}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGGING_CONFIG</td>\\n          <td class=\"code\"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/profile/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGIN_URL</td>\\n          <td class=\"code\"><pre>&#x27;/accounts/login/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>LOGOUT_REDIRECT_URL</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MANAGERS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_ROOT</td>\\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MEDIA_URL</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MESSAGE_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIDDLEWARE</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\\n &#x27;corsheaders.middleware.CorsMiddleware&#x27;,\\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,\\n &#x27;user.middleware.request_tracking_middleware.RequestIDMiddleware&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MIGRATION_MODULES</td>\\n          <td class=\"code\"><pre>{}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>MONTH_DAY_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F j&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>NUMBER_GROUPING</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_HASHERS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PASSWORD_RESET_TIMEOUT</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>PREPEND_WWW</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>REST_FRAMEWORK</td>\\n          <td class=\"code\"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework.authentication.TokenAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.BasicAuthentication&#x27;,\\n                                    &#x27;rest_framework.authentication.SessionAuthentication&#x27;],\\n &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],\\n &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;rest_framework.renderers.JSONRenderer&#x27;]}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>ROOT_URLCONF</td>\\n          <td class=\"code\"><pre>&#x27;user.urls&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECRET_KEY_FALLBACKS</td>\\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_PRELOAD</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_HSTS_SECONDS</td>\\n          <td class=\"code\"><pre>0</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_PROXY_SSL_HEADER</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REDIRECT_EXEMPT</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_REFERRER_POLICY</td>\\n          <td class=\"code\"><pre>&#x27;same-origin&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_HOST</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SECURE_SSL_REDIRECT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SERVER_EMAIL</td>\\n          <td class=\"code\"><pre>&#x27;root@localhost&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_CACHE_ALIAS</td>\\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_AGE</td>\\n          <td class=\"code\"><pre>1209600</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_DOMAIN</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_HTTPONLY</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_NAME</td>\\n          <td class=\"code\"><pre>&#x27;sessionid&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_PATH</td>\\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SAMESITE</td>\\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_COOKIE_SECURE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_ENGINE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_FILE_PATH</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SESSION_SERIALIZER</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SETTINGS_MODULE</td>\\n          <td class=\"code\"><pre>&#x27;user.settings&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATETIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SHORT_DATE_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;m/d/Y&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SIGNING_BACKEND</td>\\n          <td class=\"code\"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>SILENCED_SYSTEM_CHECKS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_DIRS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_FINDERS</td>\\n          <td class=\"code\"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,\\n &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATICFILES_STORAGE</td>\\n          <td class=\"code\"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_ROOT</td>\\n          <td class=\"code\"><pre>None</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STATIC_URL</td>\\n          <td class=\"code\"><pre>&#x27;/static/&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>STORAGES</td>\\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},\\n &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEMPLATES</td>\\n          <td class=\"code\"><pre>[{&#x27;APP_DIRS&#x27;: True,\\n  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,\\n  &#x27;DIRS&#x27;: [],\\n  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,\\n                                     &#x27;django.template.context_processors.request&#x27;,\\n                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,\\n                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_NON_SERIALIZED_APPS</td>\\n          <td class=\"code\"><pre>[]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TEST_RUNNER</td>\\n          <td class=\"code\"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>&#x27;,&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;P&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_INPUT_FORMATS</td>\\n          <td class=\"code\"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>TIME_ZONE</td>\\n          <td class=\"code\"><pre>&#x27;UTC&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_I18N</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_THOUSAND_SEPARATOR</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_TZ</td>\\n          <td class=\"code\"><pre>True</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_HOST</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>USE_X_FORWARDED_PORT</td>\\n          <td class=\"code\"><pre>False</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>WSGI_APPLICATION</td>\\n          <td class=\"code\"><pre>&#x27;user.wsgi.application&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>X_FRAME_OPTIONS</td>\\n          <td class=\"code\"><pre>&#x27;DENY&#x27;</pre></td>\\n        </tr>\\n      \\n        <tr>\\n          <td>YEAR_MONTH_FORMAT</td>\\n          <td class=\"code\"><pre>&#x27;F Y&#x27;</pre></td>\\n        </tr>\\n      \\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n  <div id=\"explanation\">\\n    <p>\\n      You\\xe2\\x80\\x99re seeing this error because you have <code>DEBUG = True</code> in your\\n      Django settings file. Change that to <code>False</code>, and Django will\\n      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'"}}, {"model": "user.requesttracking", "pk": 962, "fields": {"request_id": "077c574ce59e447eb220e2b7ff0b6bb5", "start_time": "2024-02-07T10:43:41.955Z", "end_time": "2024-02-07T10:43:41.955Z", "created_by": 15, "time_taken": 2.376072, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 963, "fields": {"request_id": "7a6078cff27348f7a20734ac658b307a", "start_time": "2024-02-07T10:47:07.663Z", "end_time": "2024-02-07T10:47:07.663Z", "created_by": 2, "time_taken": 0.00018, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 964, "fields": {"request_id": "2c3dddcef5bd42e582350d165b39282f", "start_time": "2024-02-07T10:47:08.437Z", "end_time": "2024-02-07T10:47:08.437Z", "created_by": 2, "time_taken": 0.000143, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 965, "fields": {"request_id": "ae251f865f964d52b9e80aee361a7aed", "start_time": "2024-02-07T10:47:08.969Z", "end_time": "2024-02-07T10:47:08.969Z", "created_by": 2, "time_taken": 0.000133, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 966, "fields": {"request_id": "15fe8f5f8b4b4dff932e7599d0480cdb", "start_time": "2024-02-07T10:47:43.781Z", "end_time": "2024-02-07T10:47:43.781Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 967, "fields": {"request_id": "1e3bad85f0d94751a429b317cca6ed93", "start_time": "2024-02-07T10:47:44.561Z", "end_time": "2024-02-07T10:47:44.561Z", "created_by": 2, "time_taken": 0.000139, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 968, "fields": {"request_id": "630fe7958ef14f9bb61be00581861ffe", "start_time": "2024-02-07T10:47:45.095Z", "end_time": "2024-02-07T10:47:45.095Z", "created_by": 2, "time_taken": 0.000133, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 969, "fields": {"request_id": "7ba6c3f5f1ee408a919f84be134f970c", "start_time": "2024-02-07T10:47:47.983Z", "end_time": "2024-02-07T10:47:47.983Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 970, "fields": {"request_id": "6df06ae39f044681bceadb86f7dc66ea", "start_time": "2024-02-07T10:47:48.758Z", "end_time": "2024-02-07T10:47:48.758Z", "created_by": 2, "time_taken": 0.000141, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 971, "fields": {"request_id": "640fe45957654afc88d30e82b6cd2ae6", "start_time": "2024-02-07T10:47:49.295Z", "end_time": "2024-02-07T10:47:49.295Z", "created_by": 2, "time_taken": 0.000138, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 972, "fields": {"request_id": "b8788154f929437db4804ccf115f4f56", "start_time": "2024-02-07T10:47:52.026Z", "end_time": "2024-02-07T10:47:52.026Z", "created_by": 15, "time_taken": 2.666182, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 973, "fields": {"request_id": "a0fbe39138f245b188236a12da535c00", "start_time": "2024-02-07T10:47:59.242Z", "end_time": "2024-02-07T10:47:59.243Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 974, "fields": {"request_id": "0ad9d671c34143a0a040af5298cb1804", "start_time": "2024-02-07T10:48:00.340Z", "end_time": "2024-02-07T10:48:00.340Z", "created_by": 2, "time_taken": 0.000139, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 975, "fields": {"request_id": "62e41fa37bdf4eceb9110591a7ddfed3", "start_time": "2024-02-07T10:48:00.927Z", "end_time": "2024-02-07T10:48:00.927Z", "created_by": 2, "time_taken": 0.000133, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 976, "fields": {"request_id": "d5562de684b546568290ef2486392640", "start_time": "2024-02-07T10:48:03.198Z", "end_time": "2024-02-07T10:48:03.198Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 977, "fields": {"request_id": "6aa611905602438cad9fedb6aa549386", "start_time": "2024-02-07T10:48:03.459Z", "end_time": "2024-02-07T10:48:03.459Z", "created_by": 2, "time_taken": 0.000136, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 978, "fields": {"request_id": "d880cbf145df480ea4af9562c335fb36", "start_time": "2024-02-07T10:48:03.973Z", "end_time": "2024-02-07T10:48:03.973Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 979, "fields": {"request_id": "df56ad32912d4e20b63fab676cf5f99c", "start_time": "2024-02-07T10:48:04.281Z", "end_time": "2024-02-07T10:48:04.281Z", "created_by": 2, "time_taken": 0.000139, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 980, "fields": {"request_id": "6bfd89d302264edb9e9f6de2fd28e9b7", "start_time": "2024-02-07T10:48:04.506Z", "end_time": "2024-02-07T10:48:04.506Z", "created_by": 2, "time_taken": 0.000131, "api": "/product/product/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 981, "fields": {"request_id": "277e9af4a3bc48dbb0bdd9a7c202580f", "start_time": "2024-02-07T10:48:04.839Z", "end_time": "2024-02-07T10:48:04.839Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 982, "fields": {"request_id": "2f32f5f58ec149f3bb831c2d98df83ac", "start_time": "2024-02-07T10:48:07.454Z", "end_time": "2024-02-07T10:48:07.454Z", "created_by": 2, "time_taken": 0.000141, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 983, "fields": {"request_id": "97c7962d477e419c8aadae31b774b6b7", "start_time": "2024-02-07T10:48:08.269Z", "end_time": "2024-02-07T10:48:08.269Z", "created_by": 2, "time_taken": 0.000137, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 984, "fields": {"request_id": "8ef8af846c7e4b4b9ccd180fd4e4a3e5", "start_time": "2024-02-07T10:48:08.824Z", "end_time": "2024-02-07T10:48:08.824Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/productcategory/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 985, "fields": {"request_id": "bf400f02e0d8439d82fcdd1398c37a36", "start_time": "2024-02-07T10:48:09.505Z", "end_time": "2024-02-07T10:48:09.505Z", "created_by": 2, "time_taken": 0.000138, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 986, "fields": {"request_id": "4137227fef41447faba8ccb3f1c34c2a", "start_time": "2024-02-07T10:48:10.083Z", "end_time": "2024-02-07T10:48:10.083Z", "created_by": 2, "time_taken": 0.000135, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 987, "fields": {"request_id": "b8ead546c7694326a8f79523458b702e", "start_time": "2024-02-07T10:48:10.643Z", "end_time": "2024-02-07T10:48:10.643Z", "created_by": 2, "time_taken": 0.000134, "api": "/product/testtypes/", "payload": "", "request_method": "GET", "status": "", "error_message": null}}, {"model": "user.requesttracking", "pk": 988, "fields": {"request_id": "d0aedf304ee547148ff2f3fc7b4b3346", "start_time": "2024-02-07T11:22:44.910Z", "end_time": "2024-02-07T11:23:57.407Z", "created_by": 2, "time_taken": 72.497014, "api": "/product/structured_test_cases_and_scripts/", "payload": "{\r\n    \"device_id\":5,\r\n    \"test_type_id\" : [1],\r\n    \"ai_model\":\"anthropic.claude-v2:1\"\r\n}", "request_method": "GET", "status": "200", "error_message": null}}, {"model": "product.testtype", "pk": 1, "fields": {"name": "", "code": "UNIT TEST", "description": "unit test", "status": true, "valid_till": null, "comments": "", "created_at": null, "last_updated_at": null, "last_updated_by": "", "executable_codes": {"TestCases": {"code": "Unit Test"}, "TestScripts": {"code": "python script in seperate file for each Unit test"}}}}, {"model": "product.testtype", "pk": 2, "fields": {"name": "", "code": "Regression", "description": "Regression Test", "status": true, "valid_till": "2023-12-21", "comments": "This is regression test f", "created_at": "2023-12-15T18:30:00Z", "last_updated_at": "2024-01-05T18:30:00Z", "last_updated_by": "Avion-x", "executable_codes": {"TestCases": {"code": "Regression Test"}, "TestScripts": {"code": "python script in seperate file for each Regression test"}}}}, {"model": "product.testtype", "pk": 7, "fields": {"name": "", "code": "Security Test", "description": "Security Test", "status": true, "valid_till": "2023-12-25", "comments": "This is security test ", "created_at": "2023-12-19T18:30:00Z", "last_updated_at": "2024-01-09T18:30:00Z", "last_updated_by": "Avion-x", "executable_codes": {"TestCases": {"code": "Security Test"}, "TestScripts": {"default": ["python script in seperate file for each Security test"]}}}}, {"model": "product.testtype", "pk": 8, "fields": {"name": "integration", "code": "Integration test", "description": "integration test", "status": true, "valid_till": null, "comments": "This is integration test", "created_at": "2023-12-19T18:30:00Z", "last_updated_at": "2024-01-09T18:30:00Z", "last_updated_by": "AvionX", "executable_codes": {"TestCases": {"code": "Integration Test"}, "TestScripts": {"default": ["python script in seperate file for each Integration test"]}}}}, {"model": "product.testtype", "pk": 9, "fields": {"name": "Functional", "code": "Functional Test", "description": "Functional test", "status": true, "valid_till": null, "comments": "This is functional test test", "created_at": "2023-12-19T18:30:00Z", "last_updated_at": "2024-01-09T18:30:00Z", "last_updated_by": "AvionX", "executable_codes": {"TestCases": {"code": "Functional Test"}, "TestScripts": {"default": ["python script in seperate file for each Functional test"]}}}}, {"model": "product.testtype", "pk": 10, "fields": {"name": "Protocol Conformance Test", "code": "Protocol Conformance Test", "description": "Protocol Conformance Test", "status": true, "valid_till": null, "comments": "This is Protocol Conformance Test", "created_at": "2023-12-19T18:30:00Z", "last_updated_at": "2024-01-09T18:30:00Z", "last_updated_by": "AvionX", "executable_codes": {"TestCases": {"code": "Protocol Conformance Test"}, "TestScripts": {"default": ["python script in seperate file for each Protocol Conformance Test"]}}}}, {"model": "product.testcategories", "pk": 102, "fields": {"name": "Bootup process", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {"Tests": {"code": "2 Unit Test Cases and its respective python test cases for Bootup process"}}}}, {"model": "product.testcategories", "pk": 103, "fields": {"name": "Routing protocols (OSPF, BGP, IS-IS, etc)", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {"TestCases": {"code": "Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc)"}, "TestScripts": {"code": "python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc)"}}}}, {"model": "product.testcategories", "pk": 104, "fields": {"name": "Firewall filters", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 105, "fields": {"name": "NAT configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 106, "fields": {"name": "VPN configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 107, "fields": {"name": "Access control lists", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 108, "fields": {"name": "QoS configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 109, "fields": {"name": "Interface configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 110, "fields": {"name": "VLAN configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 111, "fields": {"name": "Static routes", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 112, "fields": {"name": "Policy configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 113, "fields": {"name": "SNMP configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 114, "fields": {"name": "NTP configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 115, "fields": {"name": "Logging and monitoring", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 116, "fields": {"name": "Image install and upgrade", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 117, "fields": {"name": "Configuration rollback", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 118, "fields": {"name": "Chassis redundancy", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 119, "fields": {"name": "Line card redundancy", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 120, "fields": {"name": "Power supply redundancy", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 121, "fields": {"name": "Fan redundancy", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 7, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 122, "fields": {"name": "Fabric redundancy", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 123, "fields": {"name": "Control plane protection", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 124, "fields": {"name": "Graceful restart", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 7, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 125, "fields": {"name": "Link aggregation", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 126, "fields": {"name": "IPsec tunnel connectivity", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 127, "fields": {"name": "GRE tunnel connectivity", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 128, "fields": {"name": "Multicast routing", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 129, "fields": {"name": "Bidirectional forwarding detection", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 7, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 130, "fields": {"name": "Spanning tree protocol", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 7, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 131, "fields": {"name": "MPLS configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 132, "fields": {"name": "VRRP configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 133, "fields": {"name": "IPv6 configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 134, "fields": {"name": "DHCP configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 7, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 135, "fields": {"name": "DNS configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 136, "fields": {"name": "RADIUS authentication", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 137, "fields": {"name": "TACACS+ authentication", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 7, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 138, "fields": {"name": "User authentication", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 139, "fields": {"name": "SSH connectivity", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 140, "fields": {"name": "NETCONF connectivity", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 141, "fields": {"name": "ZTP functionality", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 142, "fields": {"name": "L2C/L2VPN functionality", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 143, "fields": {"name": "L3C/L3VPN functionality", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 144, "fields": {"name": "EVPN functionality", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 145, "fields": {"name": "VxLAN functionality", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 146, "fields": {"name": "SD-WAN functionality", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 147, "fields": {"name": "Class of service", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 148, "fields": {"name": "Forwarding class", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 149, "fields": {"name": "Schedulers", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 150, "fields": {"name": "Shapers", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 151, "fields": {"name": "Policers", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 152, "fields": {"name": "Filters - firewall, route, etc", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 153, "fields": {"name": "Forwarding options", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 154, "fields": {"name": "Sampling configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 155, "fields": {"name": "Auto-RP configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 156, "fields": {"name": "MD5 authentication", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 157, "fields": {"name": "ECMP load balancing", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 8, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 158, "fields": {"name": "Sticky MAC configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 8, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 159, "fields": {"name": "Proxy ARP", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 8, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 160, "fields": {"name": "IP directed broadcast", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 8, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 161, "fields": {"name": "Denial of service protection", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 8, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 162, "fields": {"name": "Loopback interface connectivity", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 8, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 163, "fields": {"name": "Management interface connectivity", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 8, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 164, "fields": {"name": "Inline tap interface connectivity", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 9, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 165, "fields": {"name": "MACsec configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 9, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 166, "fields": {"name": "Lawful intercept configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 9, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 167, "fields": {"name": "Port mirroring", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 9, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 168, "fields": {"name": "sFlow monitoring", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 9, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 169, "fields": {"name": "Top talkers monitoring", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 9, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 170, "fields": {"name": "Interface counters and statistics", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 9, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 171, "fields": {"name": "Routing table validation", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 9, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 172, "fields": {"name": "Cisco EVPN Interoperability", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 10, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 173, "fields": {"name": "VMware NSX integration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 10, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 174, "fields": {"name": "Memory utilization", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 10, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 175, "fields": {"name": "CPU utilization", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 10, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 176, "fields": {"name": "Hardware sensors/environmentals", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 10, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 177, "fields": {"name": "Jitter buffer configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 10, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 178, "fields": {"name": "Auto-VoIP configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 10, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 179, "fields": {"name": "SIP ALG configuration", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 10, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 180, "fields": {"name": "Media gateways", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 181, "fields": {"name": "SRX chassis cluster", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 182, "fields": {"name": "Session table utilization", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 183, "fields": {"name": "Next hop group testing", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 184, "fields": {"name": "Destination NAT", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 185, "fields": {"name": "Source NAT", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 186, "fields": {"name": "Port address translation", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 187, "fields": {"name": "Zone-based firewall", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 2, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {"Tests": {"code": "2 Regression Test Cases and its respective python test scripts for Zone-based firewall"}}}}, {"model": "product.testcategories", "pk": 188, "fields": {"name": "Unified threat management", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 189, "fields": {"name": "Intrusion detection/prevention", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 190, "fields": {"name": "Content filtering", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 2, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 191, "fields": {"name": "Antivirus scanning", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 192, "fields": {"name": "Botnet detection", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 2, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {"Tests": {"code": "2 Regression Test Cases and its respective python test scripts for Botnet detection"}}}}, {"model": "product.testcategories", "pk": 193, "fields": {"name": "Application identification", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 2, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 194, "fields": {"name": "URL filtering", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 2, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 195, "fields": {"name": "Traffic shaping per application", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 196, "fields": {"name": "Threat prevention policy", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 197, "fields": {"name": "Anti-spam filtering", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 2, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 198, "fields": {"name": "Screen options", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 199, "fields": {"name": "Traceoptions", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 200, "fields": {"name": "Root authentication", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.testcategories", "pk": 201, "fields": {"name": "Password policies", "number_of_test_cases": 2, "description": "", "is_approved": true, "approved_by": 2, "status": true, "valid_till": "2024-11-18", "customer": 3, "test_type": 1, "created_at": null, "last_updated_at": null, "last_updated_by": 0, "executable_codes": {}}}, {"model": "product.prompt", "pk": 1, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "Please provide me the ${TestType} test cases for the ${ReplaceWithProductCategoryPromptCode} {ReplaceWithProductCode}.", "status": false, "valid_till": "2025-01-31", "comments": "This is a generic promt ", "created_at": "2020-12-14T18:30:00Z", "last_updated_at": "2023-12-14T18:30:00Z", "last_updated_by": 2}}, {"model": "product.prompt", "pk": 2, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "Creating detailed ${TestType} for the ${ReplaceWithProductCategoryPromptCode}.", "status": true, "valid_till": "2025-02-01", "comments": "This is a generic promt ", "created_at": "2020-12-15T18:30:00Z", "last_updated_at": "2023-12-15T18:30:00Z", "last_updated_by": 7}}, {"model": "product.prompt", "pk": 3, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "${TestType} for the ${ReplaceWithProductCategoryPromptCode} focusing on high-performance networking, scalability, reliability, security features, and ease of configuration.", "status": true, "valid_till": "2025-02-02", "comments": "This is a generic promt ", "created_at": "2020-12-16T18:30:00Z", "last_updated_at": "2023-12-16T18:30:00Z", "last_updated_by": 8}}, {"model": "product.prompt", "pk": 13, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "Please provide me the ${TestType} test cases for the ${ReplaceWithProductCategoryPromptCode} {ReplaceWithProductCode}.", "status": false, "valid_till": "2025-01-31", "comments": "This is a generic promt ", "created_at": "2020-12-14T18:30:00Z", "last_updated_at": "2023-12-14T18:30:00Z", "last_updated_by": 2}}, {"model": "product.prompt", "pk": 14, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "Creating detailed ${TestType} for the ${ReplaceWithProductCategoryPromptCode}.", "status": false, "valid_till": "2025-02-01", "comments": "This is a generic promt ", "created_at": "2020-12-15T18:30:00Z", "last_updated_at": "2023-12-15T18:30:00Z", "last_updated_by": 8}}, {"model": "product.prompt", "pk": 15, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "${TestType} for the ${ReplaceWithProductCategoryPromptCode} focusing on high-performance networking, scalability, reliability, security features, and ease of configuration.", "status": false, "valid_till": "2025-02-02", "comments": "This is a generic promt ", "created_at": "2020-12-16T18:30:00Z", "last_updated_at": "2023-12-16T18:30:00Z", "last_updated_by": 7}}, {"model": "product.prompt", "pk": 16, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "Test cases for ${ReplaceWithProductCategoryPromptCode} should cover functionality, performance, security, and usability.", "status": true, "valid_till": "2025-02-03", "comments": "This is a generic promt ", "created_at": "2020-12-17T18:30:00Z", "last_updated_at": "2023-12-17T18:30:00Z", "last_updated_by": 2}}, {"model": "product.prompt", "pk": 17, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "${TestType} for ${ReplaceWithProductCategoryPromptCode} with each test case, including setup, execution, verification, and teardown.", "status": true, "valid_till": "2025-02-04", "comments": "This is a generic promt ", "created_at": "2020-12-18T18:30:00Z", "last_updated_at": "2023-12-18T18:30:00Z", "last_updated_by": 7}}, {"model": "product.prompt", "pk": 18, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "Detailed Python ${TestType}  of the ${ReplaceWithProductCategoryPromptCode}.", "status": true, "valid_till": "2025-03-04", "comments": "This is a generic promt ", "created_at": "2020-12-19T18:30:00Z", "last_updated_at": "2023-12-19T18:30:00Z", "last_updated_by": 2}}, {"model": "product.prompt", "pk": 19, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "Sample configuration file for a  ${ReplaceWithProductCategoryPromptCode}. ", "status": true, "valid_till": "2025-04-04", "comments": "This is a generic promt ", "created_at": "2020-12-20T18:30:00Z", "last_updated_at": "2023-12-20T18:30:00Z", "last_updated_by": 8}}, {"model": "product.prompt", "pk": 20, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "${TestType} for running a detailed test on the ${ReplaceWithProductCategoryPromptCode} router to verify configuration.", "status": true, "valid_till": "2025-05-04", "comments": "This is a generic promt ", "created_at": "2020-12-21T18:30:00Z", "last_updated_at": "2023-12-21T18:30:00Z", "last_updated_by": 2}}, {"model": "product.prompt", "pk": 21, "fields": {"provider": "Aws", "foundation_model": "Bedrock", "rag": "null", "prompt": "Python ${TestType} for the router configuration verification user story.", "status": true, "valid_till": "2025-06-04", "comments": "This is a generic promt ", "created_at": "2020-12-22T18:30:00Z", "last_updated_at": "2023-12-22T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategory", "pk": 3, "fields": {"customer": 2, "category": "router", "description": "This is cisco router", "status": true, "valid_till": "2025-12-02", "comments": "This is router R series", "created_at": "2022-12-15T18:30:00Z", "last_updated_at": "2023-12-15T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategory", "pk": 4, "fields": {"customer": 2, "category": "switch", "description": "This is cisco switch", "status": true, "valid_till": "2025-12-03", "comments": "This is switch S series", "created_at": "2022-12-16T18:30:00Z", "last_updated_at": "2023-12-16T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productcategory", "pk": 5, "fields": {"customer": 3, "category": "router", "description": "This is Juniper router", "status": true, "valid_till": "2025-12-04", "comments": "This is router R series", "created_at": "2022-12-17T18:30:00Z", "last_updated_at": "2023-12-17T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategory", "pk": 6, "fields": {"customer": 3, "category": "switch", "description": "This is Juniper switch", "status": true, "valid_till": "2025-12-05", "comments": "This is switch S series", "created_at": "2022-12-18T18:30:00Z", "last_updated_at": "2023-12-18T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategory", "pk": 8, "fields": {"customer": 3, "category": "router", "description": "This is test router", "status": true, "valid_till": "2025-05-11", "comments": "test category", "created_at": "2024-02-07T02:33:13.348Z", "last_updated_at": "2024-02-07T02:33:13.348Z", "last_updated_by": 2}}, {"model": "product.productcategory", "pk": 9, "fields": {"customer": 3, "category": "router xv", "description": "This a test category router", "status": true, "valid_till": "2025-05-11", "comments": "test category", "created_at": "2024-02-07T05:54:36.637Z", "last_updated_at": "2024-02-07T05:54:36.637Z", "last_updated_by": 2}}, {"model": "product.productsubcategory", "pk": 2, "fields": {"customer": 3, "product_category": 5, "sub_category": "M series", "description": "This is  M series router", "status": true, "valid_till": "2027-12-14", "comments": "This is 2nd gen routers", "created_at": "2023-12-14T18:30:00Z", "last_updated_at": "2022-12-14T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productsubcategory", "pk": 3, "fields": {"customer": 3, "product_category": 6, "sub_category": "S series", "description": "This is  S series switch", "status": true, "valid_till": "2027-12-15", "comments": "This is 2nd gen routers", "created_at": "2023-12-15T18:30:00Z", "last_updated_at": "2022-12-15T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productsubcategory", "pk": 4, "fields": {"customer": 2, "product_category": 3, "sub_category": "5000 series", "description": "This is  5000 series router", "status": true, "valid_till": "2027-12-16", "comments": "This is 2nd gen routers", "created_at": "2023-12-16T18:30:00Z", "last_updated_at": "2022-12-16T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 5, "fields": {"customer": 2, "product_category": 4, "sub_category": "Catalyst 3850", "description": "This is  3850 series switch", "status": true, "valid_till": "2027-12-14", "comments": "This is 2nd gen routers", "created_at": "2023-12-14T18:30:00Z", "last_updated_at": "2022-12-14T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productsubcategory", "pk": 6, "fields": {"customer": 2, "product_category": 4, "sub_category": "IE3000 Rugged", "description": "This is  3650 series switch", "status": true, "valid_till": "2027-12-15", "comments": "This is 2nd gen routers", "created_at": "2023-12-15T18:30:00Z", "last_updated_at": "2022-12-15T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productsubcategory", "pk": 7, "fields": {"customer": 2, "product_category": 3, "sub_category": "ASR 9000", "description": "This is  9000 series router", "status": true, "valid_till": "2027-12-16", "comments": "This is 2nd gen routers", "created_at": "2023-12-16T18:30:00Z", "last_updated_at": "2022-12-16T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 8, "fields": {"customer": 2, "product_category": 3, "sub_category": "Industrial Routers", "description": "This is  Industrial router series ", "status": true, "valid_till": "2027-12-17", "comments": "This is 2nd gen routers", "created_at": "2023-12-17T18:30:00Z", "last_updated_at": "2022-12-17T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 9, "fields": {"customer": 2, "product_category": 3, "sub_category": "ISR 4000 series", "description": "This is  4000 series router", "status": true, "valid_till": "2027-12-18", "comments": "This is 2nd gen routers", "created_at": "2023-12-18T18:30:00Z", "last_updated_at": "2022-12-18T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 10, "fields": {"customer": 2, "product_category": 4, "sub_category": "Nexus series", "description": "This is Nexus reries switch", "status": true, "valid_till": "2027-12-19", "comments": "This is 2nd gen routers", "created_at": "2023-12-19T18:30:00Z", "last_updated_at": "2022-12-19T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 11, "fields": {"customer": 1, "product_category": 4, "sub_category": "", "description": "", "status": false, "valid_till": "2027-12-20", "comments": "This is 2nd gen routers", "created_at": "2023-12-20T18:30:00Z", "last_updated_at": "2022-12-20T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 12, "fields": {"customer": 1, "product_category": 4, "sub_category": "", "description": "", "status": false, "valid_till": "2027-12-21", "comments": "This is 2nd gen routers", "created_at": "2023-12-21T18:30:00Z", "last_updated_at": "2022-12-21T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 13, "fields": {"customer": 1, "product_category": 4, "sub_category": "", "description": "", "status": false, "valid_till": "2027-12-22", "comments": "This is 2nd gen routers", "created_at": "2023-12-22T18:30:00Z", "last_updated_at": "2022-12-22T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 14, "fields": {"customer": 1, "product_category": 4, "sub_category": "", "description": "", "status": false, "valid_till": "2027-12-23", "comments": "This is 2nd gen routers", "created_at": "2023-12-23T18:30:00Z", "last_updated_at": "2022-12-23T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 15, "fields": {"customer": 1, "product_category": 5, "sub_category": "", "description": "", "status": false, "valid_till": "2027-12-24", "comments": "This is 2nd gen routers", "created_at": "2023-12-24T18:30:00Z", "last_updated_at": "2022-12-24T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 16, "fields": {"customer": 1, "product_category": 5, "sub_category": "", "description": "", "status": false, "valid_till": "2027-12-25", "comments": "This is 2nd gen routers", "created_at": "2023-12-25T18:30:00Z", "last_updated_at": "2022-12-25T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productsubcategory", "pk": 28, "fields": {"customer": 2, "product_category": 8, "sub_category": "RX series", "description": "This is test sub category", "status": true, "valid_till": "2025-05-11", "comments": "test sub category", "created_at": "2024-02-07T03:07:12.233Z", "last_updated_at": "2024-02-07T03:07:12.233Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 1, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router M Series", "status": true, "valid_till": "2026-12-04", "comments": "This is promt for M series router", "created_at": "2023-12-14T18:30:00Z", "last_updated_at": "2023-11-30T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 2, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router M Series", "status": false, "valid_till": "2026-12-05", "comments": "This is promt for M series router", "created_at": "2023-12-15T18:30:00Z", "last_updated_at": "2023-12-01T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productcategorypromptcode", "pk": 3, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router M Series", "status": false, "valid_till": "2026-12-06", "comments": "This is promt for M series router", "created_at": "2023-12-16T18:30:00Z", "last_updated_at": "2023-12-02T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategorypromptcode", "pk": 5, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router M Series", "status": false, "valid_till": "2026-12-05", "comments": "This is promt for M series router", "created_at": "2023-02-01T18:30:00Z", "last_updated_at": "2023-12-01T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 6, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router M Series", "status": false, "valid_till": "2026-12-06", "comments": "This is promt for M series router", "created_at": "2023-03-01T18:30:00Z", "last_updated_at": "2023-12-02T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 7, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router S Series", "status": true, "valid_till": "2026-12-07", "comments": "This is promt for s series switches", "created_at": "2023-04-01T18:30:00Z", "last_updated_at": "2023-12-03T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 8, "fields": {"product_sub_category": 3, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router S Series", "status": false, "valid_till": "2026-12-08", "comments": "This is promt for s series switches", "created_at": "2023-05-01T18:30:00Z", "last_updated_at": "2023-12-04T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productcategorypromptcode", "pk": 9, "fields": {"product_sub_category": 3, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router S Series", "status": false, "valid_till": "2026-12-09", "comments": "This is promt for s series switches", "created_at": "2023-06-01T18:30:00Z", "last_updated_at": "2023-12-05T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productcategorypromptcode", "pk": 10, "fields": {"product_sub_category": 3, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router S Series", "status": false, "valid_till": "2026-12-10", "comments": "This is promt for s series switches", "created_at": "2023-07-01T18:30:00Z", "last_updated_at": "2023-12-06T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productcategorypromptcode", "pk": 11, "fields": {"product_sub_category": 9, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Cisco Router ISR", "status": true, "valid_till": "2026-12-11", "comments": "This is promt for Cisco ISR routers", "created_at": "2023-08-01T18:30:00Z", "last_updated_at": "2023-12-07T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productcategorypromptcode", "pk": 12, "fields": {"product_sub_category": 5, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Cisco Rugged Series", "status": true, "valid_till": "2026-12-12", "comments": "This is promt for Rugged series", "created_at": "2023-09-01T18:30:00Z", "last_updated_at": "2023-12-08T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategorypromptcode", "pk": 13, "fields": {"product_sub_category": 3, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Network Router S Series", "status": true, "valid_till": "2026-12-13", "comments": "This is promt for s series switches", "created_at": "2023-10-01T18:30:00Z", "last_updated_at": "2023-12-09T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategorypromptcode", "pk": 14, "fields": {"product_sub_category": 7, "customer": 2, "foundation_model": "BedRock", "prompt_code": "Cisco Router ASR", "status": true, "valid_till": "2026-12-04", "comments": "This is promt Cisco ASI ISR", "created_at": "2023-01-01T18:30:00Z", "last_updated_at": "2023-11-30T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 15, "fields": {"product_sub_category": 5, "customer": 2, "foundation_model": "BedRock", "prompt_code": "Cisco Catalyst Series", "status": true, "valid_till": "2026-12-05", "comments": "This is Cisco catalyst series", "created_at": "2023-02-01T18:30:00Z", "last_updated_at": "2023-12-01T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 16, "fields": {"product_sub_category": 2, "customer": 2, "foundation_model": "BedRock", "prompt_code": "Cisco Nexus Series", "status": true, "valid_till": "2026-12-06", "comments": "This is promt Nexus series", "created_at": "2023-03-01T18:30:00Z", "last_updated_at": "2023-12-02T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 17, "fields": {"product_sub_category": 5, "customer": 2, "foundation_model": "BedRock", "prompt_code": "Cisco Catalyst Switch", "status": true, "valid_till": "2026-12-07", "comments": "This is promt for Cisco Switch", "created_at": "2023-04-01T18:30:00Z", "last_updated_at": "2023-12-03T18:30:00Z", "last_updated_by": 2}}, {"model": "product.productcategorypromptcode", "pk": 18, "fields": {"product_sub_category": 3, "customer": 3, "foundation_model": "BedRock", "prompt_code": "Juniper Series Ethernet Switches", "status": false, "valid_till": "2026-12-08", "comments": "This is promt for Juniper series", "created_at": "2023-05-01T18:30:00Z", "last_updated_at": "2023-12-04T18:30:00Z", "last_updated_by": 7}}, {"model": "product.productcategorypromptcode", "pk": 19, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:44:25.601Z", "last_updated_at": "2024-01-25T04:44:25.601Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 20, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:45:48.657Z", "last_updated_at": "2024-01-25T04:45:48.657Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 21, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:47:02.248Z", "last_updated_at": "2024-01-25T04:47:02.248Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 22, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:48:26.442Z", "last_updated_at": "2024-01-25T04:48:26.442Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 23, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:49:21.137Z", "last_updated_at": "2024-01-25T04:49:21.137Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 24, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:50:32.691Z", "last_updated_at": "2024-01-25T04:50:32.691Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 25, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:52:25.304Z", "last_updated_at": "2024-01-25T04:52:25.304Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 26, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:53:49.320Z", "last_updated_at": "2024-01-25T04:53:49.320Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 27, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:55:55.597Z", "last_updated_at": "2024-01-25T04:55:55.598Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 28, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:56:57.316Z", "last_updated_at": "2024-01-25T04:56:57.318Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 29, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:59:18.749Z", "last_updated_at": "2024-01-25T04:59:18.749Z", "last_updated_by": 10}}, {"model": "product.productcategorypromptcode", "pk": 30, "fields": {"product_sub_category": 2, "customer": 3, "foundation_model": "", "prompt_code": "Juniper M series", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:31.553Z", "last_updated_at": "2024-01-25T05:00:31.554Z", "last_updated_by": 10}}, {"model": "product.product", "pk": 5, "fields": {"customer": 3, "product_sub_category": 2, "product_code": "MX480", "status": true, "valid_till": "2025-12-14", "comments": "This is Juniper router", "created_at": "2023-12-14T18:30:00Z", "last_updated_at": "2023-12-14T18:30:00Z", "last_updated_by": 2}}, {"model": "product.product", "pk": 6, "fields": {"customer": 3, "product_sub_category": 2, "product_code": "MX481", "status": true, "valid_till": "2025-12-15", "comments": "This is Juniper router", "created_at": "2023-12-15T18:30:00Z", "last_updated_at": "2023-12-15T18:30:00Z", "last_updated_by": 7}}, {"model": "product.product", "pk": 7, "fields": {"customer": 3, "product_sub_category": 2, "product_code": "MX482", "status": true, "valid_till": "2023-12-16", "comments": "This is Juniper router", "created_at": "2023-12-16T18:30:00Z", "last_updated_at": "2023-12-16T18:30:00Z", "last_updated_by": 8}}, {"model": "product.product", "pk": 8, "fields": {"customer": 3, "product_sub_category": 2, "product_code": "MX483", "status": true, "valid_till": "2023-12-15", "comments": "This is Juniper router", "created_at": "2023-12-15T00:00:00Z", "last_updated_at": "2023-12-15T00:00:00Z", "last_updated_by": 2}}, {"model": "product.product", "pk": 9, "fields": {"customer": 3, "product_sub_category": 2, "product_code": "MX484", "status": true, "valid_till": "2023-12-16", "comments": "This is Juniper router", "created_at": "2023-12-16T00:00:00Z", "last_updated_at": "2023-12-16T00:00:00Z", "last_updated_by": 7}}, {"model": "product.product", "pk": 10, "fields": {"customer": 3, "product_sub_category": 2, "product_code": "MX485", "status": true, "valid_till": "2023-12-17", "comments": "This is Juniper router", "created_at": "2023-12-17T00:00:00Z", "last_updated_at": "2023-12-17T00:00:00Z", "last_updated_by": 8}}, {"model": "product.product", "pk": 11, "fields": {"customer": 2, "product_sub_category": 9, "product_code": "ISR 4000 ", "status": true, "valid_till": "2023-12-18", "comments": "This is Cisco router", "created_at": "2023-12-18T00:00:00Z", "last_updated_at": "2023-12-18T00:00:00Z", "last_updated_by": 2}}, {"model": "product.product", "pk": 12, "fields": {"customer": 2, "product_sub_category": 5, "product_code": "Catalyst 3850", "status": true, "valid_till": "2023-12-19", "comments": "This is Cisco switch", "created_at": "2023-12-19T00:00:00Z", "last_updated_at": "2023-12-19T00:00:00Z", "last_updated_by": 8}}, {"model": "product.product", "pk": 13, "fields": {"customer": 2, "product_sub_category": 5, "product_code": "Catalyst 3851", "status": true, "valid_till": "2023-12-20", "comments": "This is Cisco switch", "created_at": "2023-12-20T00:00:00Z", "last_updated_at": "2023-12-20T00:00:00Z", "last_updated_by": 7}}, {"model": "product.product", "pk": 14, "fields": {"customer": 2, "product_sub_category": 5, "product_code": "Catalyst 3852", "status": true, "valid_till": "2023-12-21", "comments": "This is Cisco switch", "created_at": "2023-12-21T00:00:00Z", "last_updated_at": "2023-12-21T00:00:00Z", "last_updated_by": 2}}, {"model": "product.product", "pk": 15, "fields": {"customer": 2, "product_sub_category": 9, "product_code": "ISR 4321", "status": true, "valid_till": "2023-12-22", "comments": "This is Cisco router", "created_at": "2023-12-22T00:00:00Z", "last_updated_at": "2023-12-22T00:00:00Z", "last_updated_by": 2}}, {"model": "product.product", "pk": 16, "fields": {"customer": 2, "product_sub_category": 4, "product_code": "ISR 5052", "status": true, "valid_till": "2023-12-23", "comments": "This is Cisco router", "created_at": "2023-12-23T00:00:00Z", "last_updated_at": "2023-12-23T00:00:00Z", "last_updated_by": 7}}, {"model": "product.product", "pk": 17, "fields": {"customer": 2, "product_sub_category": 9, "product_code": "ISR 4325", "status": true, "valid_till": "2023-12-24", "comments": "This is Cisco router", "created_at": "2023-12-24T00:00:00Z", "last_updated_at": "2023-12-24T00:00:00Z", "last_updated_by": 7}}, {"model": "product.product", "pk": 18, "fields": {"customer": 2, "product_sub_category": 9, "product_code": "ISR 4326", "status": true, "valid_till": "2023-12-25", "comments": "This is Cisco router", "created_at": "2023-12-25T00:00:00Z", "last_updated_at": "2023-12-25T00:00:00Z", "last_updated_by": 8}}, {"model": "product.product", "pk": 19, "fields": {"customer": 2, "product_sub_category": 8, "product_code": "IR8101", "status": true, "valid_till": "2023-12-26", "comments": "This is Cisco router", "created_at": "2023-12-26T00:00:00Z", "last_updated_at": "2023-12-26T00:00:00Z", "last_updated_by": 8}}, {"model": "product.product", "pk": 20, "fields": {"customer": 2, "product_sub_category": 6, "product_code": "IE3001", "status": true, "valid_till": "2023-12-27", "comments": "This is Cisco router", "created_at": "2023-12-27T00:00:00Z", "last_updated_at": "2023-12-27T00:00:00Z", "last_updated_by": 8}}, {"model": "product.product", "pk": 21, "fields": {"customer": 3, "product_sub_category": 3, "product_code": "S 501", "status": true, "valid_till": "2023-12-28", "comments": "This is Juniper switch", "created_at": "2023-12-28T00:00:00Z", "last_updated_at": "2023-12-28T00:00:00Z", "last_updated_by": 7}}, {"model": "product.product", "pk": 22, "fields": {"customer": 2, "product_sub_category": 7, "product_code": "ASR 9011", "status": true, "valid_till": "2023-12-27", "comments": "This is Cisco router", "created_at": "2023-12-27T00:00:00Z", "last_updated_at": "2023-12-27T00:00:00Z", "last_updated_by": 8}}, {"model": "product.product", "pk": 28, "fields": {"customer": 3, "product_sub_category": 2, "product_code": "MX486", "status": true, "valid_till": null, "comments": "test product", "created_at": "2024-02-07T01:50:14.703Z", "last_updated_at": "2024-02-07T01:50:14.703Z", "last_updated_by": 2}}, {"model": "product.productcategoryprompt", "pk": 1, "fields": {"customer": 2, "product_category": 3, "prompt": 1, "sequence_no": 1, "executable_prompt": "Please provide me the ${TestType} test cases for the Cisco Router ASR {ReplaceWithProductCode}.", "status": true, "valid_till": "2026-02-24", "comments": "This promt is for unit test case", "created_at": "2023-12-24T18:30:00Z", "last_updated_at": "2023-12-24T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 2, "fields": {"customer": 2, "product_category": 3, "prompt": 2, "sequence_no": 2, "executable_prompt": "Create detailed ${TestType} for the Cisco Router ASR {ReplaceWithProductCode}", "status": true, "valid_till": "2026-02-25", "comments": "This promt is for unit test case", "created_at": "2023-12-25T18:30:00Z", "last_updated_at": "2023-12-25T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 3, "fields": {"customer": 2, "product_category": 4, "prompt": 3, "sequence_no": 3, "executable_prompt": "${TestType} for the Cisco Catalyst Rugged Series {ReplaceWithProductCode} focusing on high-performance networking, scalability, reliability, security features, and ease of configuration.", "status": true, "valid_till": "2026-02-26", "comments": "This promt is for unit test case", "created_at": "2023-12-26T18:30:00Z", "last_updated_at": "2023-12-26T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 4, "fields": {"customer": 2, "product_category": 4, "prompt": 16, "sequence_no": 4, "executable_prompt": "Test cases for Cisco Nexus Series {ReplaceWithProductCode} should cover functionality, performance, security, and usability.", "status": true, "valid_till": "2026-02-27", "comments": "This promt is for unit test case", "created_at": "2023-12-27T18:30:00Z", "last_updated_at": "2023-12-27T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 5, "fields": {"customer": 3, "product_category": 6, "prompt": 17, "sequence_no": 5, "executable_prompt": "${TestType} forJuniper Series Ethernet Switches {ReplaceWithProductCode} with each test case, including setup, execution, verification, and teardown.", "status": true, "valid_till": "2026-02-28", "comments": "This promt is for unit test case", "created_at": "2023-12-28T18:30:00Z", "last_updated_at": "2023-12-28T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 6, "fields": {"customer": 2, "product_category": 3, "prompt": 18, "sequence_no": 6, "executable_prompt": "Detailed Python ${TestType} of the Cisco Router ISR {ReplaceWithProductCode}.", "status": true, "valid_till": "2026-03-01", "comments": "This promt is for unit test case", "created_at": "2023-12-29T18:30:00Z", "last_updated_at": "2023-12-29T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 7, "fields": {"customer": 2, "product_category": 3, "prompt": 19, "sequence_no": 7, "executable_prompt": "Sample configuration file for a Cisco Router ASR {ReplaceWithProductCode}.", "status": true, "valid_till": "2026-03-02", "comments": "This promt is for unit test case", "created_at": "2023-12-30T18:30:00Z", "last_updated_at": "2023-12-30T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 8, "fields": {"customer": 2, "product_category": 4, "prompt": 20, "sequence_no": 8, "executable_prompt": "${TestType} for running a detailed test on the Cisco Catalyst Switch router {ReplaceWithProductCode} to verify configuration.", "status": true, "valid_till": "2026-03-03", "comments": "This promt is for unit test case", "created_at": "2023-12-31T18:30:00Z", "last_updated_at": "2023-12-31T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 9, "fields": {"customer": 2, "product_category": 3, "prompt": 21, "sequence_no": 9, "executable_prompt": "Python ${TestType} for {ReplaceWithProductCode} configuration verification user story", "status": true, "valid_till": "2026-03-04", "comments": "This promt is for unit test case", "created_at": "2024-01-01T18:30:00Z", "last_updated_at": "2024-01-01T18:30:00Z", "last_updated_by": 8}}, {"model": "product.productcategoryprompt", "pk": 10, "fields": {"customer": 3, "product_category": 5, "prompt": 1, "sequence_no": 10, "executable_prompt": "Please provide me the ${TestType} test cases for the Juniper M series {ReplaceWithProductCode}.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T04:59:19.318Z", "last_updated_at": "2024-01-25T04:59:19.318Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 11, "fields": {"customer": 3, "product_category": 5, "prompt": 1, "sequence_no": 10, "executable_prompt": "Please provide me the ${TestType} test cases for the Juniper M series {ReplaceWithProductCode}.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:32.144Z", "last_updated_at": "2024-01-25T05:00:32.144Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 12, "fields": {"customer": 3, "product_category": 5, "prompt": 2, "sequence_no": 10, "executable_prompt": "Creating detailed ${TestType} for the Juniper M series.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:32.987Z", "last_updated_at": "2024-01-25T05:00:32.987Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 13, "fields": {"customer": 3, "product_category": 5, "prompt": 3, "sequence_no": 10, "executable_prompt": "${TestType} for the Juniper M series focusing on high-performance networking, scalability, reliability, security features, and ease of configuration.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:33.642Z", "last_updated_at": "2024-01-25T05:00:33.642Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 14, "fields": {"customer": 3, "product_category": 5, "prompt": 13, "sequence_no": 10, "executable_prompt": "Please provide me the ${TestType} test cases for the Juniper M series {ReplaceWithProductCode}.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:34.231Z", "last_updated_at": "2024-01-25T05:00:34.231Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 15, "fields": {"customer": 3, "product_category": 5, "prompt": 14, "sequence_no": 10, "executable_prompt": "Creating detailed ${TestType} for the Juniper M series.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:34.825Z", "last_updated_at": "2024-01-25T05:00:34.825Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 16, "fields": {"customer": 3, "product_category": 5, "prompt": 15, "sequence_no": 10, "executable_prompt": "${TestType} for the Juniper M series focusing on high-performance networking, scalability, reliability, security features, and ease of configuration.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:35.424Z", "last_updated_at": "2024-01-25T05:00:35.425Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 17, "fields": {"customer": 3, "product_category": 5, "prompt": 16, "sequence_no": 10, "executable_prompt": "Test cases for Juniper M series should cover functionality, performance, security, and usability.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:36.029Z", "last_updated_at": "2024-01-25T05:00:36.029Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 18, "fields": {"customer": 3, "product_category": 5, "prompt": 17, "sequence_no": 10, "executable_prompt": "${TestType} for Juniper M series with each test case, including setup, execution, verification, and teardown.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:36.623Z", "last_updated_at": "2024-01-25T05:00:36.623Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 19, "fields": {"customer": 3, "product_category": 5, "prompt": 18, "sequence_no": 10, "executable_prompt": "Detailed Python ${TestType}  of the Juniper M series.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:37.217Z", "last_updated_at": "2024-01-25T05:00:37.217Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 20, "fields": {"customer": 3, "product_category": 5, "prompt": 19, "sequence_no": 10, "executable_prompt": "Sample configuration file for a  Juniper M series. ", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:37.825Z", "last_updated_at": "2024-01-25T05:00:37.825Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 21, "fields": {"customer": 3, "product_category": 5, "prompt": 20, "sequence_no": 10, "executable_prompt": "${TestType} for running a detailed test on the Juniper M series router to verify configuration.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:38.413Z", "last_updated_at": "2024-01-25T05:00:38.414Z", "last_updated_by": 10}}, {"model": "product.productcategoryprompt", "pk": 22, "fields": {"customer": 3, "product_category": 5, "prompt": 21, "sequence_no": 10, "executable_prompt": "Python ${TestType} for the router configuration verification user story.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:38.995Z", "last_updated_at": "2024-01-25T05:00:38.995Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 9, "fields": {"customer": 3, "product": 5, "prompt": 1, "sequence_no": 1, "executable_prompt": "Please provide me the ${TestType} cases for the Network MSeries Router MX480.", "status": true, "valid_till": "2029-02-15", "comments": "This is Executable prompt", "created_at": "2023-12-15T00:00:00Z", "last_updated_at": "2022-12-15T00:00:00Z", "last_updated_by": 2}}, {"model": "product.productprompt", "pk": 10, "fields": {"customer": 3, "product": 6, "prompt": 1, "sequence_no": 2, "executable_prompt": "Please provide me the ${TestType} cases for the Network MSeries Router MX481", "status": true, "valid_till": "2029-02-16", "comments": "This is Executable prompt", "created_at": "2023-12-16T00:00:00Z", "last_updated_at": "2022-12-16T00:00:00Z", "last_updated_by": 7}}, {"model": "product.productprompt", "pk": 11, "fields": {"customer": 3, "product": 7, "prompt": 1, "sequence_no": 3, "executable_prompt": "Please provide me the ${TestType} cases for the Network MSeries Router MX482", "status": true, "valid_till": "2029-02-17", "comments": "This is Executable prompt", "created_at": "2023-12-17T00:00:00Z", "last_updated_at": "2022-12-17T00:00:00Z", "last_updated_by": 8}}, {"model": "product.productprompt", "pk": 12, "fields": {"customer": 3, "product": 9, "prompt": 1, "sequence_no": 4, "executable_prompt": "Please provide me the ${TestType} cases for the Network MSeries Router MX484", "status": true, "valid_till": "2029-02-18", "comments": "This is Executable prompt", "created_at": "2023-12-18T00:00:00Z", "last_updated_at": "2022-12-18T00:00:00Z", "last_updated_by": 2}}, {"model": "product.productprompt", "pk": 13, "fields": {"customer": 3, "product": 10, "prompt": 1, "sequence_no": 5, "executable_prompt": "Please provide me the ${TestType} cases for the Network MSeries Router MX485", "status": true, "valid_till": "2029-02-19", "comments": "This is Executable prompt", "created_at": "2023-12-19T00:00:00Z", "last_updated_at": "2022-12-19T00:00:00Z", "last_updated_by": 7}}, {"model": "product.productprompt", "pk": 14, "fields": {"customer": 2, "product": 5, "prompt": 2, "sequence_no": 6, "executable_prompt": "Create detailed ${TestType} for the ISR 4321.", "status": false, "valid_till": "2029-02-20", "comments": "This is Executable prompt", "created_at": "2023-12-20T00:00:00Z", "last_updated_at": "2022-12-20T00:00:00Z", "last_updated_by": 8}}, {"model": "product.productprompt", "pk": 15, "fields": {"customer": 2, "product": 8, "prompt": 3, "sequence_no": 7, "executable_prompt": "${TestType} for the Catalyst 3850 focusing on high-performance networking, scalability, reliability, security features, and ease of configuration.", "status": true, "valid_till": "2029-02-21", "comments": "This is Executable prompt", "created_at": "2023-12-21T00:00:00Z", "last_updated_at": "2022-12-21T00:00:00Z", "last_updated_by": 2}}, {"model": "product.productprompt", "pk": 16, "fields": {"customer": 2, "product": 11, "prompt": 16, "sequence_no": 8, "executable_prompt": "${TestType} for ISR 4321 should cover functionality, performance, security, and usability.", "status": true, "valid_till": "2029-02-22", "comments": "This is Executable prompt", "created_at": "2023-12-22T00:00:00Z", "last_updated_at": "2022-12-22T00:00:00Z", "last_updated_by": 7}}, {"model": "product.productprompt", "pk": 17, "fields": {"customer": 3, "product": 5, "prompt": 17, "sequence_no": 9, "executable_prompt": "${TestType} for MX480 with each test case, including setup, execution, verification, and teardown.", "status": false, "valid_till": "2029-02-23", "comments": "This is Executable prompt", "created_at": "2023-12-23T00:00:00Z", "last_updated_at": "2022-12-23T00:00:00Z", "last_updated_by": 8}}, {"model": "product.productprompt", "pk": 18, "fields": {"customer": 3, "product": 5, "prompt": 18, "sequence_no": 10, "executable_prompt": "Detailed Python ${TestType} of the MX480.", "status": false, "valid_till": "2029-02-24", "comments": "This is Executable prompt", "created_at": "2023-12-24T00:00:00Z", "last_updated_at": "2022-12-24T00:00:00Z", "last_updated_by": 8}}, {"model": "product.productprompt", "pk": 19, "fields": {"customer": 2, "product": 11, "prompt": 19, "sequence_no": 11, "executable_prompt": "Sample configuration file for ${TestType} for a  ISR 4321. ", "status": true, "valid_till": "2029-02-25", "comments": "This is Executable prompt", "created_at": "2023-12-25T00:00:00Z", "last_updated_at": "2022-12-25T00:00:00Z", "last_updated_by": 7}}, {"model": "product.productprompt", "pk": 20, "fields": {"customer": 3, "product": 5, "prompt": 20, "sequence_no": 12, "executable_prompt": "${TestType} for running a detailed test on the  MX480 router to verify configuration.", "status": false, "valid_till": "2029-02-26", "comments": "This is Executable prompt", "created_at": "2023-12-26T00:00:00Z", "last_updated_at": "2022-12-26T00:00:00Z", "last_updated_by": 2}}, {"model": "product.productprompt", "pk": 21, "fields": {"customer": 2, "product": 11, "prompt": 21, "sequence_no": 13, "executable_prompt": "Python ${TestType} for the router ISR 4321 configuration.", "status": true, "valid_till": "2029-02-27", "comments": "This is Executable prompt", "created_at": "2023-12-27T00:00:00Z", "last_updated_at": "2022-12-27T00:00:00Z", "last_updated_by": 2}}, {"model": "product.productprompt", "pk": 22, "fields": {"customer": 3, "product": 9, "prompt": 1, "sequence_no": 14, "executable_prompt": "Please provide me the ${TestType} test cases for the Juniper M series MX484.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:32.526Z", "last_updated_at": "2024-01-25T05:00:32.526Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 23, "fields": {"customer": 3, "product": 9, "prompt": 2, "sequence_no": 14, "executable_prompt": "Creating detailed ${TestType} for the Juniper M series.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:33.285Z", "last_updated_at": "2024-01-25T05:00:33.285Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 24, "fields": {"customer": 3, "product": 9, "prompt": 3, "sequence_no": 14, "executable_prompt": "${TestType} for the Juniper M series focusing on high-performance networking, scalability, reliability, security features, and ease of configuration.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:33.935Z", "last_updated_at": "2024-01-25T05:00:33.935Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 25, "fields": {"customer": 3, "product": 9, "prompt": 13, "sequence_no": 14, "executable_prompt": "Please provide me the ${TestType} test cases for the Juniper M series MX484.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:34.528Z", "last_updated_at": "2024-01-25T05:00:34.528Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 26, "fields": {"customer": 3, "product": 9, "prompt": 14, "sequence_no": 14, "executable_prompt": "Creating detailed ${TestType} for the Juniper M series.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:35.120Z", "last_updated_at": "2024-01-25T05:00:35.120Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 27, "fields": {"customer": 3, "product": 9, "prompt": 15, "sequence_no": 14, "executable_prompt": "${TestType} for the Juniper M series focusing on high-performance networking, scalability, reliability, security features, and ease of configuration.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:35.723Z", "last_updated_at": "2024-01-25T05:00:35.724Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 28, "fields": {"customer": 3, "product": 9, "prompt": 16, "sequence_no": 14, "executable_prompt": "Test cases for Juniper M series should cover functionality, performance, security, and usability.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:36.326Z", "last_updated_at": "2024-01-25T05:00:36.326Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 29, "fields": {"customer": 3, "product": 9, "prompt": 17, "sequence_no": 14, "executable_prompt": "${TestType} for Juniper M series with each test case, including setup, execution, verification, and teardown.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:36.916Z", "last_updated_at": "2024-01-25T05:00:36.916Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 30, "fields": {"customer": 3, "product": 9, "prompt": 18, "sequence_no": 14, "executable_prompt": "Detailed Python ${TestType}  of the Juniper M series.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:37.519Z", "last_updated_at": "2024-01-25T05:00:37.520Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 31, "fields": {"customer": 3, "product": 9, "prompt": 19, "sequence_no": 14, "executable_prompt": "Sample configuration file for a  Juniper M series. ", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:38.119Z", "last_updated_at": "2024-01-25T05:00:38.119Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 32, "fields": {"customer": 3, "product": 9, "prompt": 20, "sequence_no": 14, "executable_prompt": "${TestType} for running a detailed test on the Juniper M series router to verify configuration.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:38.703Z", "last_updated_at": "2024-01-25T05:00:38.703Z", "last_updated_by": 10}}, {"model": "product.productprompt", "pk": 33, "fields": {"customer": 3, "product": 9, "prompt": 21, "sequence_no": 14, "executable_prompt": "Python ${TestType} for the router configuration verification user story.", "status": true, "valid_till": null, "comments": "", "created_at": "2024-01-25T05:00:39.298Z", "last_updated_at": "2024-01-25T05:00:39.298Z", "last_updated_by": 10}}, {"model": "product.testcases", "pk": 1, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/2024-01-10%2017_55_57.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration."]}, "created_at": "2024-01-10T12:26:28.232Z", "updated_at": "2024-01-10T12:26:28.232Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 2, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/2024-01-10%2017_58_30.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration."]}, "created_at": "2024-01-10T12:32:02.800Z", "updated_at": "2024-01-10T12:32:02.801Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 3, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/2024-01-10%2019_12_32.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration."], "test_types": [{"id": 1, "code": "UNIT TEST"}]}, "created_at": "2024-01-10T13:42:59.055Z", "updated_at": "2024-01-10T13:42:59.055Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 4, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/2024-01-10%2019_23_49.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration."], "test_types": [{"id": 1, "code": "UNIT TEST"}]}, "created_at": "2024-01-10T13:54:14.110Z", "updated_at": "2024-01-10T13:54:14.110Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 5, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/2024-01-10%2019_24_48.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration.", "Please provide me the Unit cases for the Network MSeries Router MX480.", "Unit for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit of the MX480.", "Unit for running a detailed test on the  MX480 router to verify configuration."], "test_types": [{"id": 1, "code": "UNIT TEST"}, {"id": 2, "code": "Unit"}]}, "created_at": "2024-01-10T13:55:05.424Z", "updated_at": "2024-01-10T13:55:05.424Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 6, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/2024-01-10%2019_47_10.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration.", "Please provide me the Unit cases for the Network MSeries Router MX480.", "Unit for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit of the MX480.", "Unit for running a detailed test on the  MX480 router to verify configuration."], "test_types": [{"id": 1, "code": "UNIT TEST"}, {"id": 2, "code": "Unit"}]}, "created_at": "2024-01-10T14:17:31.210Z", "updated_at": "2024-01-10T14:17:31.210Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 7, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/2024-01-10%2019_48_41.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration.", "Please provide me the Unit cases for the Network MSeries Router MX480.", "Unit for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit of the MX480.", "Unit for running a detailed test on the  MX480 router to verify configuration."], "test_types": [{"id": 1, "code": "UNIT TEST"}, {"id": 2, "code": "Unit"}]}, "created_at": "2024-01-10T14:18:56.882Z", "updated_at": "2024-01-10T14:18:56.882Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 8, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/2024-01-10%2020_47_45.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration.", "Please provide me the Unit cases for the Network MSeries Router MX480.", "Unit for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit of the MX480.", "Unit for running a detailed test on the  MX480 router to verify configuration."], "test_types": [{"id": 1, "code": "UNIT TEST"}, {"id": 2, "code": "Unit"}]}, "created_at": "2024-01-10T15:18:05.870Z", "updated_at": "2024-01-10T15:18:05.870Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 9, "fields": {"customer": 1, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/2024-01-11%2010_36_03.md?ref=main", "sha": null, "data": {"prompts": ["Please provide me the UNIT TEST cases for the Network MSeries Router MX480.", "UNIT TEST for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python UNIT TEST of the MX480.", "UNIT TEST for running a detailed test on the  MX480 router to verify configuration.", "Please provide me the Unit cases for the Network MSeries Router MX480.", "Unit for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit of the MX480.", "Unit for running a detailed test on the  MX480 router to verify configuration."], "test_types": [{"id": 1, "code": "UNIT TEST"}, {"id": 2, "code": "Unit"}]}, "created_at": "2024-01-11T05:06:17.321Z", "updated_at": "2024-01-11T05:06:17.321Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 10, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T19:25:13.336Z", "updated_at": "2024-01-11T19:25:13.336Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 11, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T19:26:42.252Z", "updated_at": "2024-01-11T19:26:42.252Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 12, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T19:28:16.592Z", "updated_at": "2024-01-11T19:28:16.593Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 13, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T19:28:25.352Z", "updated_at": "2024-01-11T19:28:25.352Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 14, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T19:29:41.091Z", "updated_at": "2024-01-11T19:29:41.091Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 15, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T19:29:48.885Z", "updated_at": "2024-01-11T19:29:48.885Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 16, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:03:48.102Z", "updated_at": "2024-01-11T20:03:48.102Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 17, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:03:57.157Z", "updated_at": "2024-01-11T20:03:57.157Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 18, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:05:13.951Z", "updated_at": "2024-01-11T20:05:13.951Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 19, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:05:25.196Z", "updated_at": "2024-01-11T20:05:25.196Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 20, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:06:44.743Z", "updated_at": "2024-01-11T20:06:44.743Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 21, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:08:42.344Z", "updated_at": "2024-01-11T20:08:42.344Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 22, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:08:52.805Z", "updated_at": "2024-01-11T20:08:52.805Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 23, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:09:05.264Z", "updated_at": "2024-01-11T20:09:05.264Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 24, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/CISCO/MX480/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:09:16.462Z", "updated_at": "2024-01-11T20:09:16.462Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 25, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:14:27.533Z", "updated_at": "2024-01-11T20:14:27.533Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 26, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:14:38.119Z", "updated_at": "2024-01-11T20:14:38.119Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 27, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:14:50.373Z", "updated_at": "2024-01-11T20:14:50.374Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 28, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:14:57.305Z", "updated_at": "2024-01-11T20:14:57.305Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 29, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:18:21.354Z", "updated_at": "2024-01-11T20:18:21.354Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 30, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:18:30.259Z", "updated_at": "2024-01-11T20:18:30.259Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 31, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:19:52.683Z", "updated_at": "2024-01-11T20:19:52.683Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 32, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:20:03.993Z", "updated_at": "2024-01-11T20:20:03.993Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 33, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:22:26.365Z", "updated_at": "2024-01-11T20:22:26.365Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 34, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:22:35.890Z", "updated_at": "2024-01-11T20:22:35.890Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 35, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:24:13.317Z", "updated_at": "2024-01-11T20:24:13.317Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 36, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:24:22.730Z", "updated_at": "2024-01-11T20:24:22.730Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 37, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:29:32.676Z", "updated_at": "2024-01-11T20:29:32.676Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 38, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:29:41.089Z", "updated_at": "2024-01-11T20:29:41.089Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 39, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:31:06.530Z", "updated_at": "2024-01-11T20:31:06.530Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 40, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:31:34.623Z", "updated_at": "2024-01-11T20:31:34.624Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 41, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Security%20Test/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:32:52.222Z", "updated_at": "2024-01-11T20:32:52.222Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 42, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Security%20Test/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-11T20:33:04.385Z", "updated_at": "2024-01-11T20:33:04.385Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 43, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-12T13:44:17.009Z", "updated_at": "2024-01-12T13:44:17.009Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 44, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-12T13:44:28.535Z", "updated_at": "2024-01-12T13:44:28.535Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 45, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-12T15:46:17.338Z", "updated_at": "2024-01-12T15:46:17.338Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 46, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-12T15:46:27.568Z", "updated_at": "2024-01-12T15:46:27.568Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 47, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-12T15:49:49.809Z", "updated_at": "2024-01-12T15:49:49.809Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 48, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-12T15:49:59.332Z", "updated_at": "2024-01-12T15:49:59.332Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 49, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-16T09:37:36.786Z", "updated_at": "2024-01-16T09:37:36.786Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 50, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-16T09:37:43.884Z", "updated_at": "2024-01-16T09:37:43.884Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 51, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-16T09:51:13.261Z", "updated_at": "2024-01-16T09:51:13.261Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 52, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-16T09:51:18.693Z", "updated_at": "2024-01-16T09:51:18.693Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 53, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-16T09:53:31.898Z", "updated_at": "2024-01-16T09:53:31.898Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 54, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-16T09:53:43.184Z", "updated_at": "2024-01-16T09:53:43.184Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 55, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-16T10:57:08.757Z", "updated_at": "2024-01-16T10:57:08.757Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 56, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-16T10:57:16.828Z", "updated_at": "2024-01-16T10:57:16.828Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 57, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:06:30.777Z", "updated_at": "2024-01-18T18:06:30.777Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 58, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:09:33.105Z", "updated_at": "2024-01-18T18:09:33.105Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 59, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:13:48.963Z", "updated_at": "2024-01-18T18:13:48.963Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 60, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:16:08.759Z", "updated_at": "2024-01-18T18:16:08.759Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 61, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:18:06.944Z", "updated_at": "2024-01-18T18:18:06.944Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 62, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:18:49.153Z", "updated_at": "2024-01-18T18:18:49.153Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 63, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:26:16.799Z", "updated_at": "2024-01-18T18:26:16.799Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 64, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/Regression/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:26:36.655Z", "updated_at": "2024-01-18T18:26:36.655Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 65, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:28:30.938Z", "updated_at": "2024-01-18T18:28:30.938Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 66, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:28:49.146Z", "updated_at": "2024-01-18T18:28:49.146Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 67, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:31:31.785Z", "updated_at": "2024-01-18T18:31:31.785Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 68, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-18T18:32:52.775Z", "updated_at": "2024-01-18T18:32:52.775Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 69, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-23T13:18:16.561Z", "updated_at": "2024-01-23T13:18:16.561Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 70, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": null, "data": {}, "created_at": "2024-01-23T13:19:45.890Z", "updated_at": "2024-01-23T13:19:45.890Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 71, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "sha": "0567b4b69b2c6cb65d74fc78ad2448d382721c48", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc) cases for the Network MSeries Router MX480.", "Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc) for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc) of the MX480.", "Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc) for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc) cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc) for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc) of the MX480.", "python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc) for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "0567b4b69b2c6cb65d74fc78ad2448d382721c48", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/0567b4b69b2c6cb65d74fc78ad2448d382721c48", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/TestCases.md"}}, "created_at": "2024-01-23T14:02:03.531Z", "updated_at": "2024-01-23T14:02:03.531Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 72, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "sha": "5935c8966a72a900a4fac63b083ec09534d43814", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc) cases for the Network MSeries Router MX480.", "Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc) for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc) of the MX480.", "Unit Test for Routing protocols (OSPF, BGP, IS-IS, etc) for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc) cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc) for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc) of the MX480.", "python script in seperate file for each Unit test for Routing protocols (OSPF, BGP, IS-IS, etc) for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "5935c8966a72a900a4fac63b083ec09534d43814", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/5935c8966a72a900a4fac63b083ec09534d43814", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/TestScripts.md"}}, "created_at": "2024-01-23T14:05:19.162Z", "updated_at": "2024-01-23T14:05:19.163Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 73, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "b80c3ca0651a975a75428b5c8cd8be08306e3adc", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "b80c3ca0651a975a75428b5c8cd8be08306e3adc", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/b80c3ca0651a975a75428b5c8cd8be08306e3adc", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-24T15:10:16.746Z", "updated_at": "2024-01-24T15:10:16.746Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 74, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "eb82aab461baf61def16e5b4ff576465a5d82e04", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "eb82aab461baf61def16e5b4ff576465a5d82e04", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/eb82aab461baf61def16e5b4ff576465a5d82e04", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-24T15:11:39.666Z", "updated_at": "2024-01-24T15:11:39.666Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 75, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "68b0714c3fb075062883b01ea64da19fcdde4a07", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "68b0714c3fb075062883b01ea64da19fcdde4a07", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/68b0714c3fb075062883b01ea64da19fcdde4a07", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T04:32:34.114Z", "updated_at": "2024-01-29T04:32:34.114Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 76, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "492b9b316be2fefc73673e494f30073b26dddd34", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "492b9b316be2fefc73673e494f30073b26dddd34", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/492b9b316be2fefc73673e494f30073b26dddd34", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T04:33:27.904Z", "updated_at": "2024-01-29T04:33:27.904Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 77, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "137589441ad9d3430e2dd012814a5cb1a7a99e0c", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "137589441ad9d3430e2dd012814a5cb1a7a99e0c", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/137589441ad9d3430e2dd012814a5cb1a7a99e0c", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T04:36:54.963Z", "updated_at": "2024-01-29T04:36:54.963Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 78, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "e1f3ecece5774d3d24036db6c109aec535d4d690", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e1f3ecece5774d3d24036db6c109aec535d4d690", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e1f3ecece5774d3d24036db6c109aec535d4d690", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T04:38:28.438Z", "updated_at": "2024-01-29T04:38:28.438Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 79, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "e275e8d489d73e40ea25cc732ff9d02943276591", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e275e8d489d73e40ea25cc732ff9d02943276591", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e275e8d489d73e40ea25cc732ff9d02943276591", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T04:44:12.923Z", "updated_at": "2024-01-29T04:44:12.923Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 80, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "0dd9d7f6452616772a4c1ac69de4825a3076e46c", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "0dd9d7f6452616772a4c1ac69de4825a3076e46c", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/0dd9d7f6452616772a4c1ac69de4825a3076e46c", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T04:45:12.109Z", "updated_at": "2024-01-29T04:45:12.109Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 81, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "2da9809b871521ec0a81092d095df184bfdd23ee", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "2da9809b871521ec0a81092d095df184bfdd23ee", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/2da9809b871521ec0a81092d095df184bfdd23ee", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T04:46:58.701Z", "updated_at": "2024-01-29T04:46:58.701Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 82, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "12b4e1d85b37728078fa8e996d52857f018975eb", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "12b4e1d85b37728078fa8e996d52857f018975eb", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/12b4e1d85b37728078fa8e996d52857f018975eb", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T04:48:04.472Z", "updated_at": "2024-01-29T04:48:04.472Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 83, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "7097c489141c6e8006e2963354d8570bb48e47e2", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "7097c489141c6e8006e2963354d8570bb48e47e2", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/7097c489141c6e8006e2963354d8570bb48e47e2", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T04:54:27.872Z", "updated_at": "2024-01-29T04:54:27.872Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 84, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "0533bf0385199faf13b0bc80395487906e40b9ae", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "0533bf0385199faf13b0bc80395487906e40b9ae", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/0533bf0385199faf13b0bc80395487906e40b9ae", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T04:55:05.296Z", "updated_at": "2024-01-29T04:55:05.296Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 85, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "d02f4b1c506353565df98e974cdb7ccfa47720e9", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "d02f4b1c506353565df98e974cdb7ccfa47720e9", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/d02f4b1c506353565df98e974cdb7ccfa47720e9", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T04:55:52.733Z", "updated_at": "2024-01-29T04:55:52.733Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 86, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "59186a93571dbabd957d172117898ba0d667de36", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "59186a93571dbabd957d172117898ba0d667de36", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/59186a93571dbabd957d172117898ba0d667de36", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T04:56:16.512Z", "updated_at": "2024-01-29T04:56:16.512Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 87, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "2758eee2ae3e4d042ca0a2d1a9a954ce549c9969", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "2758eee2ae3e4d042ca0a2d1a9a954ce549c9969", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/2758eee2ae3e4d042ca0a2d1a9a954ce549c9969", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T04:59:29.545Z", "updated_at": "2024-01-29T04:59:29.545Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 88, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "c6413e630c9139d1e07aaed235b84a3d1bf21efe", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "c6413e630c9139d1e07aaed235b84a3d1bf21efe", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/c6413e630c9139d1e07aaed235b84a3d1bf21efe", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T05:01:29.907Z", "updated_at": "2024-01-29T05:01:29.907Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 89, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "48b3566aa378b5b5517285f6a3e891460cfd0e44", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "48b3566aa378b5b5517285f6a3e891460cfd0e44", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/48b3566aa378b5b5517285f6a3e891460cfd0e44", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T05:03:10.699Z", "updated_at": "2024-01-29T05:03:10.699Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 90, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "d511f68d99c81ef524011e678b54c032167bab8d", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "d511f68d99c81ef524011e678b54c032167bab8d", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/d511f68d99c81ef524011e678b54c032167bab8d", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T05:04:13.505Z", "updated_at": "2024-01-29T05:04:13.505Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 91, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "647320b1f39956f63731823febafd1358e9d3337", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "647320b1f39956f63731823febafd1358e9d3337", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/647320b1f39956f63731823febafd1358e9d3337", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T05:05:04.102Z", "updated_at": "2024-01-29T05:05:04.102Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 92, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "77289cdc8f22548b0e02e104373cb1d90a9c5cbb", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "77289cdc8f22548b0e02e104373cb1d90a9c5cbb", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/77289cdc8f22548b0e02e104373cb1d90a9c5cbb", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T05:05:39.367Z", "updated_at": "2024-01-29T05:05:39.367Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 93, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "f301e0fbadf419bd5952742a91bf0f6fd1e76a7a", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "f301e0fbadf419bd5952742a91bf0f6fd1e76a7a", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f301e0fbadf419bd5952742a91bf0f6fd1e76a7a", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-29T05:13:22.108Z", "updated_at": "2024-01-29T05:13:22.108Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 94, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "a969bda7cb8ef62581cee28ffe2d5ec47edf7086", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "a969bda7cb8ef62581cee28ffe2d5ec47edf7086", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/a969bda7cb8ef62581cee28ffe2d5ec47edf7086", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-29T05:15:09.940Z", "updated_at": "2024-01-29T05:15:09.940Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 95, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "e3a2b4b9545534f53dbff70def742b7cbe32bb8f", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e3a2b4b9545534f53dbff70def742b7cbe32bb8f", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e3a2b4b9545534f53dbff70def742b7cbe32bb8f", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-30T09:14:34.269Z", "updated_at": "2024-01-30T09:14:34.269Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 96, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "1eacb50f132b716286ad864aa6dee4dd507821ff", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "1eacb50f132b716286ad864aa6dee4dd507821ff", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/1eacb50f132b716286ad864aa6dee4dd507821ff", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-30T09:15:53.406Z", "updated_at": "2024-01-30T09:15:53.406Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 97, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "de5df021c2e4043bdb31b9b7587514c54834a29b", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "de5df021c2e4043bdb31b9b7587514c54834a29b", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/de5df021c2e4043bdb31b9b7587514c54834a29b", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-30T09:16:29.022Z", "updated_at": "2024-01-30T09:16:29.022Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 98, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "efd92e8ebc69c2d561fd27c15769b5f2005117ca", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "efd92e8ebc69c2d561fd27c15769b5f2005117ca", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/efd92e8ebc69c2d561fd27c15769b5f2005117ca", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-30T09:17:41.939Z", "updated_at": "2024-01-30T09:17:41.939Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 99, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "5db3e7fa71d6a7e343af22d83a10d9f43b934614", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "5db3e7fa71d6a7e343af22d83a10d9f43b934614", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/5db3e7fa71d6a7e343af22d83a10d9f43b934614", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-31T06:39:47.993Z", "updated_at": "2024-01-31T06:39:47.993Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 100, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "a28e1404b9246e6a3466d61edbb94f55c853d0b5", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "a28e1404b9246e6a3466d61edbb94f55c853d0b5", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/a28e1404b9246e6a3466d61edbb94f55c853d0b5", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-31T06:40:52.140Z", "updated_at": "2024-01-31T06:40:52.140Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 101, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "e18fd93f25b85329d74e5aef4eb8292d6e8b707d", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e18fd93f25b85329d74e5aef4eb8292d6e8b707d", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e18fd93f25b85329d74e5aef4eb8292d6e8b707d", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-31T07:02:52.240Z", "updated_at": "2024-01-31T07:02:52.240Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 102, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "c8ffdbdf8703e23396f4a4dd4fb6934854d92c7e", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "c8ffdbdf8703e23396f4a4dd4fb6934854d92c7e", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/c8ffdbdf8703e23396f4a4dd4fb6934854d92c7e", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-31T07:04:12.452Z", "updated_at": "2024-01-31T07:04:12.452Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 103, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "ba8ea3234f32dc0edc88ca6ddb51a7e6e383481e", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "ba8ea3234f32dc0edc88ca6ddb51a7e6e383481e", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/ba8ea3234f32dc0edc88ca6ddb51a7e6e383481e", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-31T09:15:56.994Z", "updated_at": "2024-01-31T09:15:56.994Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 104, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "761a9921749a98130953813d4bc0a6f1e277ebe3", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "761a9921749a98130953813d4bc0a6f1e277ebe3", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/761a9921749a98130953813d4bc0a6f1e277ebe3", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-01-31T09:17:00.477Z", "updated_at": "2024-01-31T09:17:00.477Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 105, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "25303df58139937951ad0ba20a5ba2418b75cb55", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "25303df58139937951ad0ba20a5ba2418b75cb55", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/25303df58139937951ad0ba20a5ba2418b75cb55", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-01-31T10:17:53.175Z", "updated_at": "2024-01-31T10:17:53.175Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 106, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "0a1a4fb08b9dba7a3a33044298ee22e1ba54930b", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "0a1a4fb08b9dba7a3a33044298ee22e1ba54930b", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/0a1a4fb08b9dba7a3a33044298ee22e1ba54930b", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-01T05:17:32.456Z", "updated_at": "2024-02-01T05:17:32.456Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 107, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "cb40cbb0ef57583b4251af7915e3bc31bb60c52b", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "cb40cbb0ef57583b4251af7915e3bc31bb60c52b", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/cb40cbb0ef57583b4251af7915e3bc31bb60c52b", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-01T05:18:46.589Z", "updated_at": "2024-02-01T05:18:46.589Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 108, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "f327da3da881e3161ea52ef530c5657e98f4505d", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "f327da3da881e3161ea52ef530c5657e98f4505d", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f327da3da881e3161ea52ef530c5657e98f4505d", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-01T05:23:50.302Z", "updated_at": "2024-02-01T05:23:50.302Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 109, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "59c3d2ef3e8fa799d46a11d6268f7e5d42912127", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "59c3d2ef3e8fa799d46a11d6268f7e5d42912127", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/59c3d2ef3e8fa799d46a11d6268f7e5d42912127", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-01T05:24:57.166Z", "updated_at": "2024-02-01T05:24:57.166Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 110, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "0fcefc8c95648de85a77ca2c024c62b58f304ab6", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "0fcefc8c95648de85a77ca2c024c62b58f304ab6", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/0fcefc8c95648de85a77ca2c024c62b58f304ab6", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-01T05:29:03.715Z", "updated_at": "2024-02-01T05:29:03.715Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 111, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "e9da9fb03c31bb838593eda3b727786164c678ba", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e9da9fb03c31bb838593eda3b727786164c678ba", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e9da9fb03c31bb838593eda3b727786164c678ba", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-01T05:30:27.959Z", "updated_at": "2024-02-01T05:30:27.959Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 112, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "e2ff1dc04d8713937cbfe86916ceb9529a061c9d", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e2ff1dc04d8713937cbfe86916ceb9529a061c9d", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e2ff1dc04d8713937cbfe86916ceb9529a061c9d", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-01T05:35:23.480Z", "updated_at": "2024-02-01T05:35:23.480Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 113, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "8e6b787a55d94f6809d27d2e9d43101c540930df", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "8e6b787a55d94f6809d27d2e9d43101c540930df", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/8e6b787a55d94f6809d27d2e9d43101c540930df", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-01T05:36:42.811Z", "updated_at": "2024-02-01T05:36:42.811Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 114, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "26280a947f86b445dfd5d696268fc148997807ab", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "26280a947f86b445dfd5d696268fc148997807ab", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/26280a947f86b445dfd5d696268fc148997807ab", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-01T05:39:25.357Z", "updated_at": "2024-02-01T05:39:25.357Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 115, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "5bb55d7040492d91f2cce1fd6fbe6d88945745a2", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "5bb55d7040492d91f2cce1fd6fbe6d88945745a2", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/5bb55d7040492d91f2cce1fd6fbe6d88945745a2", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-01T05:40:28.856Z", "updated_at": "2024-02-01T05:40:28.856Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 116, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "24f01d90c3f4b1392b5a23f98e5477d181ad6385", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "24f01d90c3f4b1392b5a23f98e5477d181ad6385", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/24f01d90c3f4b1392b5a23f98e5477d181ad6385", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-01T05:45:23.076Z", "updated_at": "2024-02-01T05:45:23.076Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 117, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "6ca71e82a9ae790fb11d032095265c315529115c", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "6ca71e82a9ae790fb11d032095265c315529115c", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/6ca71e82a9ae790fb11d032095265c315529115c", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-01T05:46:43.404Z", "updated_at": "2024-02-01T05:46:43.404Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 118, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "038510d03c9194bf075baaaad7388f9f77d27961", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "038510d03c9194bf075baaaad7388f9f77d27961", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/038510d03c9194bf075baaaad7388f9f77d27961", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-02T03:39:37.545Z", "updated_at": "2024-02-02T03:39:37.545Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 119, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "9e1b1cdc2a9ba2d4955fb4c7d73fcbeb89330d5f", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "9e1b1cdc2a9ba2d4955fb4c7d73fcbeb89330d5f", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/9e1b1cdc2a9ba2d4955fb4c7d73fcbeb89330d5f", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-02T03:40:39.135Z", "updated_at": "2024-02-02T03:40:39.135Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 120, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "82351628f018da8cc285ef5fdb72bfb97765d222", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "82351628f018da8cc285ef5fdb72bfb97765d222", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/82351628f018da8cc285ef5fdb72bfb97765d222", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-02T03:40:49.600Z", "updated_at": "2024-02-02T03:40:49.600Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 121, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "e2c214691e2d1b9f6a085f374eac60a14e2d47f1", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e2c214691e2d1b9f6a085f374eac60a14e2d47f1", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e2c214691e2d1b9f6a085f374eac60a14e2d47f1", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-02T03:41:52.334Z", "updated_at": "2024-02-02T03:41:52.334Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 122, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "56cfc4187c6f30d9c67ef93d6c07940a590dc213", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "56cfc4187c6f30d9c67ef93d6c07940a590dc213", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/56cfc4187c6f30d9c67ef93d6c07940a590dc213", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-02T03:43:25.795Z", "updated_at": "2024-02-02T03:43:25.795Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 123, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "8c156317c299cf86c66c51544800ce736707559d", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for Bootup process cases for the Network MSeries Router MX480.", "Unit Test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for Bootup process of the MX480.", "Unit Test for Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for Bootup process of the MX480.", "python script in seperate file for each Unit test for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "8c156317c299cf86c66c51544800ce736707559d", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/8c156317c299cf86c66c51544800ce736707559d", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-02T03:44:32.365Z", "updated_at": "2024-02-02T03:44:32.365Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 124, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "f4e1cc9abdc2f3035ea20dca0416b6ad37d2914a", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "f4e1cc9abdc2f3035ea20dca0416b6ad37d2914a", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f4e1cc9abdc2f3035ea20dca0416b6ad37d2914a", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-02T09:26:41.552Z", "updated_at": "2024-02-02T09:26:41.552Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 125, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "16cb8869f8338a4a073192a2d578697ad0412fc2", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "16cb8869f8338a4a073192a2d578697ad0412fc2", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/16cb8869f8338a4a073192a2d578697ad0412fc2", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-02T12:32:05.374Z", "updated_at": "2024-02-02T12:32:05.374Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 126, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "97d753d81a2d5b5d638b66fc035d46bb47807e76", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "97d753d81a2d5b5d638b66fc035d46bb47807e76", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/97d753d81a2d5b5d638b66fc035d46bb47807e76", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-02T12:56:58.538Z", "updated_at": "2024-02-02T12:56:58.539Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 127, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "3cfb8276dc4ce72568ce1288e520a98465fa8699", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "3cfb8276dc4ce72568ce1288e520a98465fa8699", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/3cfb8276dc4ce72568ce1288e520a98465fa8699", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-02T13:09:46.033Z", "updated_at": "2024-02-02T13:09:46.033Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 128, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "d9c9a2da0fca9ff026f821d34a979b0aadd40017", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "d9c9a2da0fca9ff026f821d34a979b0aadd40017", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/d9c9a2da0fca9ff026f821d34a979b0aadd40017", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-02T13:13:16.244Z", "updated_at": "2024-02-02T13:13:16.245Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 129, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "246dc2ef7f89094a20e85d478bfea6b26d0013fb", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX481"]}, "git_data": {"sha": "246dc2ef7f89094a20e85d478bfea6b26d0013fb", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/246dc2ef7f89094a20e85d478bfea6b26d0013fb", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-02T16:03:25.964Z", "updated_at": "2024-02-02T16:03:25.964Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 130, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "1867490f21423b2b41660d209a56ece87c480187", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "1867490f21423b2b41660d209a56ece87c480187", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/1867490f21423b2b41660d209a56ece87c480187", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-03T15:32:35.162Z", "updated_at": "2024-02-03T15:32:35.162Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 131, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "2295bf9f8926f475b7c42535442f609554013642", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Detailed Python Unit Test for  Bootup process of the MX480."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480."]}, "git_data": {"sha": "2295bf9f8926f475b7c42535442f609554013642", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/2295bf9f8926f475b7c42535442f609554013642", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-03T15:39:53.212Z", "updated_at": "2024-02-03T15:39:53.212Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 132, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "ee43a9e3d7ca285ebcb4a903adbfab9dc9554544", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Detailed Python Unit Test for  Bootup process of the MX480."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480."]}, "git_data": {"sha": "ee43a9e3d7ca285ebcb4a903adbfab9dc9554544", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/ee43a9e3d7ca285ebcb4a903adbfab9dc9554544", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-03T15:40:43.581Z", "updated_at": "2024-02-03T15:40:43.581Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 133, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "263749aaff6a291ecd9119853a0d5e99dff1b011", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX481"], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX481"]}, "git_data": {"sha": "263749aaff6a291ecd9119853a0d5e99dff1b011", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/263749aaff6a291ecd9119853a0d5e99dff1b011", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-03T16:03:25.013Z", "updated_at": "2024-02-03T16:03:25.013Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 134, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "2d97314254d27d1d0abd67bbec750c7a0453b2d4", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX481"], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX481"]}, "git_data": {"sha": "2d97314254d27d1d0abd67bbec750c7a0453b2d4", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/2d97314254d27d1d0abd67bbec750c7a0453b2d4", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-03T16:03:40.600Z", "updated_at": "2024-02-03T16:03:40.600Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 135, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "578b6a0406d9db14301f4b19bd6abb5ed1b4f715", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Detailed Python Unit Test for  Bootup process of the MX480."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480."]}, "git_data": {"sha": "578b6a0406d9db14301f4b19bd6abb5ed1b4f715", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/578b6a0406d9db14301f4b19bd6abb5ed1b4f715", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-03T16:50:05.438Z", "updated_at": "2024-02-03T16:50:05.439Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 136, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "3dcc6d838367cc1c551760e5db2d92fa86f384f0", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Detailed Python Unit Test for  Bootup process of the MX480."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480."]}, "git_data": {"sha": "3dcc6d838367cc1c551760e5db2d92fa86f384f0", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/3dcc6d838367cc1c551760e5db2d92fa86f384f0", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-03T16:50:41.315Z", "updated_at": "2024-02-03T16:50:41.315Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 137, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "aa560a081b738e89e5936fc6bca7245a30e7cd58", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "aa560a081b738e89e5936fc6bca7245a30e7cd58", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/aa560a081b738e89e5936fc6bca7245a30e7cd58", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-03T19:56:20.243Z", "updated_at": "2024-02-03T19:56:20.243Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 138, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "f95bc041b9325f3351de73056f00b24e3cbc9950", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "f95bc041b9325f3351de73056f00b24e3cbc9950", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f95bc041b9325f3351de73056f00b24e3cbc9950", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-03T19:57:47.739Z", "updated_at": "2024-02-03T19:57:47.739Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 139, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "6c10a162a3e55305f278b759ec70f7c69c5b1b85", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "6c10a162a3e55305f278b759ec70f7c69c5b1b85", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/6c10a162a3e55305f278b759ec70f7c69c5b1b85", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-03T21:46:36.550Z", "updated_at": "2024-02-03T21:46:36.550Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 140, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "891e1d166c6249345f8e4ac194d676343cc9177e", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "891e1d166c6249345f8e4ac194d676343cc9177e", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/891e1d166c6249345f8e4ac194d676343cc9177e", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-03T21:46:47.326Z", "updated_at": "2024-02-03T21:46:47.326Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 141, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "2ac2c403f97cafdb56bb94e0488e6838e8e6671a", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "2ac2c403f97cafdb56bb94e0488e6838e8e6671a", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/2ac2c403f97cafdb56bb94e0488e6838e8e6671a", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-03T21:47:23.551Z", "updated_at": "2024-02-03T21:47:23.551Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 142, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "c8a1b7d3141e131257658a27d30ca8e8c8f91c37", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "c8a1b7d3141e131257658a27d30ca8e8c8f91c37", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/c8a1b7d3141e131257658a27d30ca8e8c8f91c37", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-03T21:47:47.199Z", "updated_at": "2024-02-03T21:47:47.199Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 143, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "9705c75c0c6ff53697c8195bcc059361ae395b75", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "9705c75c0c6ff53697c8195bcc059361ae395b75", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/9705c75c0c6ff53697c8195bcc059361ae395b75", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-03T21:48:28.477Z", "updated_at": "2024-02-03T21:48:28.477Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 144, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "53f483e16b3ee4b495d135db917d954154c64e78", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "53f483e16b3ee4b495d135db917d954154c64e78", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/53f483e16b3ee4b495d135db917d954154c64e78", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-03T21:48:29.917Z", "updated_at": "2024-02-03T21:48:29.917Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 145, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "2721d1b6bd8492bad560beed6708cda792a00d5f", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "2721d1b6bd8492bad560beed6708cda792a00d5f", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/2721d1b6bd8492bad560beed6708cda792a00d5f", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-04T20:32:02.864Z", "updated_at": "2024-02-04T20:32:02.864Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 146, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "a95808689918b7b0c5b57f22142affb30c3f9b95", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "a95808689918b7b0c5b57f22142affb30c3f9b95", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/a95808689918b7b0c5b57f22142affb30c3f9b95", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-04T20:33:26.373Z", "updated_at": "2024-02-04T20:33:26.373Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 147, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "e4a49bd60e50f4d3983db4f7857cd2d8fcdf9802", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e4a49bd60e50f4d3983db4f7857cd2d8fcdf9802", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e4a49bd60e50f4d3983db4f7857cd2d8fcdf9802", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-05T01:01:14.204Z", "updated_at": "2024-02-05T01:01:14.204Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 148, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "28aad250b1f1443e60a13d4a2cfb8a90c4ae3adb", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "28aad250b1f1443e60a13d4a2cfb8a90c4ae3adb", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/28aad250b1f1443e60a13d4a2cfb8a90c4ae3adb", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-05T01:03:01.982Z", "updated_at": "2024-02-05T01:03:01.982Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 149, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "66881fefa203b3f7ba78adbc7565d06750cc980e", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "66881fefa203b3f7ba78adbc7565d06750cc980e", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/66881fefa203b3f7ba78adbc7565d06750cc980e", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-05T07:32:41.897Z", "updated_at": "2024-02-05T07:32:41.897Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 150, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "08479c38b99847bf335b295a8a9fec906ef4c763", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "08479c38b99847bf335b295a8a9fec906ef4c763", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/08479c38b99847bf335b295a8a9fec906ef4c763", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-05T07:33:44.775Z", "updated_at": "2024-02-05T07:33:44.775Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 151, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "sha": "4cbd2ce26e2868e8a8bc1e5e6a176b990a3e969a", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "4cbd2ce26e2868e8a8bc1e5e6a176b990a3e969a", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/4cbd2ce26e2868e8a8bc1e5e6a176b990a3e969a", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestCases.md"}}, "created_at": "2024-02-05T07:34:53.058Z", "updated_at": "2024-02-05T07:34:53.058Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 152, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "sha": "bf0eaedfcf36289f21eef06d1a3a563e4a19b35d", "data": {"prompts": {"TestCases": ["Please provide me the Unit Test for  Bootup process cases for the Network MSeries Router MX480.", "Unit Test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test for  Bootup process of the MX480.", "Unit Test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."], "TestScripts": ["Please provide me the python script in seperate file for each Unit test for  Bootup process cases for the Network MSeries Router MX480.", "python script in seperate file for each Unit test for  Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python python script in seperate file for each Unit test for  Bootup process of the MX480.", "python script in seperate file for each Unit test for  Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "bf0eaedfcf36289f21eef06d1a3a563e4a19b35d", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/bf0eaedfcf36289f21eef06d1a3a563e4a19b35d", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/TestScripts.md"}}, "created_at": "2024-02-05T07:35:47.596Z", "updated_at": "2024-02-05T07:35:47.596Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 153, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "e0137237a86c8f0f4c6a532ed6b06a8aa43c447b", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e0137237a86c8f0f4c6a532ed6b06a8aa43c447b", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e0137237a86c8f0f4c6a532ed6b06a8aa43c447b", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T08:05:52.351Z", "updated_at": "2024-02-05T08:05:52.351Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 154, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "db50a28d7edf7e3ee9acea2585a84a16aa01a062", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "db50a28d7edf7e3ee9acea2585a84a16aa01a062", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/db50a28d7edf7e3ee9acea2585a84a16aa01a062", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T08:14:37.889Z", "updated_at": "2024-02-05T08:14:37.889Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 155, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "13a40ef5a21187264f0b47d07111e9a97d24a0bc", "data": {"prompts": {"Tests": ["Please provide me the Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "13a40ef5a21187264f0b47d07111e9a97d24a0bc", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/13a40ef5a21187264f0b47d07111e9a97d24a0bc", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T08:20:00.245Z", "updated_at": "2024-02-05T08:20:00.253Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 156, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "65bda2a4c429a4fea2f92573166fb2f741473b06", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "65bda2a4c429a4fea2f92573166fb2f741473b06", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/65bda2a4c429a4fea2f92573166fb2f741473b06", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T08:41:33.368Z", "updated_at": "2024-02-05T08:41:33.368Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 157, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "b004782796cf94736a5d8d5ecc337a760cce3632", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "b004782796cf94736a5d8d5ecc337a760cce3632", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/b004782796cf94736a5d8d5ecc337a760cce3632", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T09:07:00.928Z", "updated_at": "2024-02-05T09:07:00.928Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 158, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "698f4921e325a8d9ac5a3128a60eb9cb0c6edd8c", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX481"]}, "git_data": {"sha": "698f4921e325a8d9ac5a3128a60eb9cb0c6edd8c", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/698f4921e325a8d9ac5a3128a60eb9cb0c6edd8c", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T10:04:35.709Z", "updated_at": "2024-02-05T10:04:35.709Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 159, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "e67519d8bb92f1341b9f2ba5371738bd1e615ef3", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "e67519d8bb92f1341b9f2ba5371738bd1e615ef3", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/e67519d8bb92f1341b9f2ba5371738bd1e615ef3", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T11:10:02.000Z", "updated_at": "2024-02-05T11:10:02.000Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 160, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "722f06743a59c9b5d5f696a754e4dabcf22961ca", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "722f06743a59c9b5d5f696a754e4dabcf22961ca", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/722f06743a59c9b5d5f696a754e4dabcf22961ca", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T11:23:16.417Z", "updated_at": "2024-02-05T11:23:16.417Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 161, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "1f254f79f08c85403b84b6dee68d6dd416cf1f8c", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "1f254f79f08c85403b84b6dee68d6dd416cf1f8c", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/1f254f79f08c85403b84b6dee68d6dd416cf1f8c", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T11:29:50.356Z", "updated_at": "2024-02-05T11:29:50.356Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 162, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "7c641a1d3417d1b70cf4aa4f5cc5315db3471f78", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "7c641a1d3417d1b70cf4aa4f5cc5315db3471f78", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/7c641a1d3417d1b70cf4aa4f5cc5315db3471f78", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T11:35:28.586Z", "updated_at": "2024-02-05T11:35:28.586Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 163, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "d95ec33b3944ed98ef2b887e8b9628e1ef63b577", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "d95ec33b3944ed98ef2b887e8b9628e1ef63b577", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/d95ec33b3944ed98ef2b887e8b9628e1ef63b577", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T11:43:20.639Z", "updated_at": "2024-02-05T11:43:20.639Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 164, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "81d03dfc35335466f1e723046c643f4820d9c936", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "81d03dfc35335466f1e723046c643f4820d9c936", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/81d03dfc35335466f1e723046c643f4820d9c936", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T11:46:37.167Z", "updated_at": "2024-02-05T11:46:37.167Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 165, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "5e331d7d38e330aea77cc2270c656ab6f5639157", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "5e331d7d38e330aea77cc2270c656ab6f5639157", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/5e331d7d38e330aea77cc2270c656ab6f5639157", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T12:10:35.329Z", "updated_at": "2024-02-05T12:10:35.329Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 166, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "474b9bb0ffd503d2554464cb1d96e49bf4361062", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "474b9bb0ffd503d2554464cb1d96e49bf4361062", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/474b9bb0ffd503d2554464cb1d96e49bf4361062", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T12:12:45.265Z", "updated_at": "2024-02-05T12:12:45.265Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 167, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "60caa242aa73dfec6fce087d2339499a08b2e88c", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "60caa242aa73dfec6fce087d2339499a08b2e88c", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/60caa242aa73dfec6fce087d2339499a08b2e88c", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T13:16:24.011Z", "updated_at": "2024-02-05T13:16:24.011Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 168, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "790376b28f93d61478e088ba27f623703102744f", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "790376b28f93d61478e088ba27f623703102744f", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/790376b28f93d61478e088ba27f623703102744f", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T13:19:25.519Z", "updated_at": "2024-02-05T13:19:25.519Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 169, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "d7f271599c1d4cbb611492ff9530fdac494225c7", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "d7f271599c1d4cbb611492ff9530fdac494225c7", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/d7f271599c1d4cbb611492ff9530fdac494225c7", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T13:43:43.301Z", "updated_at": "2024-02-05T13:43:43.301Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 170, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "f6a27b65b63eec8a296b8bf4921742e506f881a6", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "f6a27b65b63eec8a296b8bf4921742e506f881a6", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f6a27b65b63eec8a296b8bf4921742e506f881a6", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T13:54:43.619Z", "updated_at": "2024-02-05T13:54:43.619Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 171, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "b488f4e3744d6b050805e7dd67b7a46cbc2a4bae", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "b488f4e3744d6b050805e7dd67b7a46cbc2a4bae", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/b488f4e3744d6b050805e7dd67b7a46cbc2a4bae", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T14:08:06.708Z", "updated_at": "2024-02-05T14:08:06.708Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 172, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "6519662095bf0a0fe4517b9145e866eb65de3972", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "6519662095bf0a0fe4517b9145e866eb65de3972", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/6519662095bf0a0fe4517b9145e866eb65de3972", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T14:14:11.002Z", "updated_at": "2024-02-05T14:14:11.002Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 173, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "aa0655cb37af6c7004b7e336fdb00f7f00502740", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "aa0655cb37af6c7004b7e336fdb00f7f00502740", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/aa0655cb37af6c7004b7e336fdb00f7f00502740", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T15:29:08.229Z", "updated_at": "2024-02-05T15:29:08.229Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 174, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 13, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "cc4eecde956b95dc729f7bf7a3185dc8e7bbeaad", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "cc4eecde956b95dc729f7bf7a3185dc8e7bbeaad", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/cc4eecde956b95dc729f7bf7a3185dc8e7bbeaad", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-05T21:39:33.143Z", "updated_at": "2024-02-05T21:39:33.143Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 175, "fields": {"customer": 3, "product": 6, "test_category": 102, "created_by": 16, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "9a2506eff19f8f6e635d048737ebb2250483c1ae", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX481"]}, "git_data": {"sha": "9a2506eff19f8f6e635d048737ebb2250483c1ae", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/9a2506eff19f8f6e635d048737ebb2250483c1ae", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX481/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T02:51:25.621Z", "updated_at": "2024-02-06T02:51:25.621Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 176, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "2fd8003f26ca2f1d484e0a63ba293268e810f591", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "2fd8003f26ca2f1d484e0a63ba293268e810f591", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/2fd8003f26ca2f1d484e0a63ba293268e810f591", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T10:26:14.190Z", "updated_at": "2024-02-06T10:26:14.190Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 177, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "c2711f10c1824e7f7e1cdbe569826afdb7671586", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "c2711f10c1824e7f7e1cdbe569826afdb7671586", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/c2711f10c1824e7f7e1cdbe569826afdb7671586", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T11:00:42.787Z", "updated_at": "2024-02-06T11:00:42.787Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 178, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "09d5e87c89e7c0254e42171316af949e46e438f9", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "09d5e87c89e7c0254e42171316af949e46e438f9", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/09d5e87c89e7c0254e42171316af949e46e438f9", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T11:05:37.790Z", "updated_at": "2024-02-06T11:05:37.790Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 179, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "bcd9bffdc917d7a85e92b5b10014df72d3f013a5", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "bcd9bffdc917d7a85e92b5b10014df72d3f013a5", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/bcd9bffdc917d7a85e92b5b10014df72d3f013a5", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T12:36:25.198Z", "updated_at": "2024-02-06T12:36:25.198Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 180, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "7563d819f9f4003ee2518b2e45cd18daedae0d71", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "7563d819f9f4003ee2518b2e45cd18daedae0d71", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/7563d819f9f4003ee2518b2e45cd18daedae0d71", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T12:39:08.233Z", "updated_at": "2024-02-06T12:39:08.233Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 181, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "f1cdb0f3edd57f776a7ceaa080c7e6b267c1b8b5", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "f1cdb0f3edd57f776a7ceaa080c7e6b267c1b8b5", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f1cdb0f3edd57f776a7ceaa080c7e6b267c1b8b5", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T12:51:02.184Z", "updated_at": "2024-02-06T12:51:02.184Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 182, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "43c4c31c64d88471d83bcd07745783352476417f", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "43c4c31c64d88471d83bcd07745783352476417f", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/43c4c31c64d88471d83bcd07745783352476417f", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T13:20:57.682Z", "updated_at": "2024-02-06T13:20:57.682Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 183, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "d3725597367301be0940f4823bd70bd8d9571995", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "d3725597367301be0940f4823bd70bd8d9571995", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/d3725597367301be0940f4823bd70bd8d9571995", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T13:23:57.505Z", "updated_at": "2024-02-06T13:23:57.505Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 184, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "5bf6e44f6f6c404bde22bc13ec6e5a6e5e69045c", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "5bf6e44f6f6c404bde22bc13ec6e5a6e5e69045c", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/5bf6e44f6f6c404bde22bc13ec6e5a6e5e69045c", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T13:41:53.342Z", "updated_at": "2024-02-06T13:41:53.342Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 185, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "c52e979b0bea1db2b91bb3956338d967d6d86589", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "c52e979b0bea1db2b91bb3956338d967d6d86589", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/c52e979b0bea1db2b91bb3956338d967d6d86589", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T13:53:47.860Z", "updated_at": "2024-02-06T13:53:47.860Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 186, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "a65f70cd39c2cd260b79d95f770269e99d20c6b1", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "a65f70cd39c2cd260b79d95f770269e99d20c6b1", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/a65f70cd39c2cd260b79d95f770269e99d20c6b1", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T15:17:40.955Z", "updated_at": "2024-02-06T15:17:40.956Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 187, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "9a3a1198790dc3978ed9b2b68c002c67e4671ab6", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "9a3a1198790dc3978ed9b2b68c002c67e4671ab6", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/9a3a1198790dc3978ed9b2b68c002c67e4671ab6", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T15:24:19.410Z", "updated_at": "2024-02-06T15:24:19.410Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 188, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "2364c7d80c042c9a6d915b58f63bec12298912e9", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "2364c7d80c042c9a6d915b58f63bec12298912e9", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/2364c7d80c042c9a6d915b58f63bec12298912e9", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T15:28:42.756Z", "updated_at": "2024-02-06T15:28:42.756Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 189, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "ab26e377ec26e52fffe7e4edf2aae70aeac0e49a", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "ab26e377ec26e52fffe7e4edf2aae70aeac0e49a", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/ab26e377ec26e52fffe7e4edf2aae70aeac0e49a", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T15:34:11.794Z", "updated_at": "2024-02-06T15:34:11.794Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 190, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "330bed5e2149c5c4772365d68ef977c010834b27", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "330bed5e2149c5c4772365d68ef977c010834b27", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/330bed5e2149c5c4772365d68ef977c010834b27", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T18:56:03.026Z", "updated_at": "2024-02-06T18:56:03.026Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 191, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "b3ca9d713194013dc238a1da8054e35e24357099", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "b3ca9d713194013dc238a1da8054e35e24357099", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/b3ca9d713194013dc238a1da8054e35e24357099", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T19:15:34.326Z", "updated_at": "2024-02-06T19:15:34.326Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 192, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "f02e9089c30e375376a186763f8340032d3746c5", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "f02e9089c30e375376a186763f8340032d3746c5", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f02e9089c30e375376a186763f8340032d3746c5", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T19:15:46.443Z", "updated_at": "2024-02-06T19:15:46.443Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 193, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "4c6809b12ff2052443b0cf34b3df6294c4ed1984", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "4c6809b12ff2052443b0cf34b3df6294c4ed1984", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/4c6809b12ff2052443b0cf34b3df6294c4ed1984", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T19:18:40.633Z", "updated_at": "2024-02-06T19:18:40.633Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 194, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "fae635114ca16bbf695489b77044edb58c5eafb4", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "fae635114ca16bbf695489b77044edb58c5eafb4", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/fae635114ca16bbf695489b77044edb58c5eafb4", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T19:21:38.498Z", "updated_at": "2024-02-06T19:21:38.498Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 195, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "25e4117f3196adc3bd8df503ccb3c95f1b5cf104", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "25e4117f3196adc3bd8df503ccb3c95f1b5cf104", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/25e4117f3196adc3bd8df503ccb3c95f1b5cf104", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T19:23:06.010Z", "updated_at": "2024-02-06T19:23:06.010Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 196, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "cad13889c4e407121935ed668df13d581b41c7f7", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "cad13889c4e407121935ed668df13d581b41c7f7", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/cad13889c4e407121935ed668df13d581b41c7f7", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T19:26:05.627Z", "updated_at": "2024-02-06T19:26:05.627Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 197, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "dd0eacb733e9921c26a3682c5b04bc1d5d47eddc", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "dd0eacb733e9921c26a3682c5b04bc1d5d47eddc", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/dd0eacb733e9921c26a3682c5b04bc1d5d47eddc", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-06T19:28:11.927Z", "updated_at": "2024-02-06T19:28:11.927Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 198, "fields": {"customer": 3, "product": 5, "test_category": 187, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "sha": "b6abc717adabb6ae88c553218b9297ff062a0337", "data": {"prompts": {"Tests": ["Please provide me the 2 Regression Test Cases and its respective python test cases for Zone-based firewall cases for the Network MSeries Router MX480.", "Create detailed 2 Regression Test Cases and its respective python test cases for Zone-based firewall for the ISR 4321.", "Detailed Python 2 Regression Test Cases and its respective python test cases for Zone-based firewall of the MX480."]}, "git_data": {"sha": "b6abc717adabb6ae88c553218b9297ff062a0337", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/b6abc717adabb6ae88c553218b9297ff062a0337", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests"}}, "created_at": "2024-02-06T19:41:51.650Z", "updated_at": "2024-02-06T19:41:51.650Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 199, "fields": {"customer": 3, "product": 5, "test_category": 187, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "sha": "a3786b8a5918ce3f6587e3416d005b8837286cb6", "data": {"prompts": {"Tests": ["Please provide me the 2 Regression Test Cases and its respective python test scripts for Zone-based firewall cases for the Network MSeries Router MX480.", "Create detailed 2 Regression Test Cases and its respective python test scripts for Zone-based firewall for the ISR 4321.", "Detailed Python 2 Regression Test Cases and its respective python test scripts for Zone-based firewall of the MX480."]}, "git_data": {"sha": "a3786b8a5918ce3f6587e3416d005b8837286cb6", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/a3786b8a5918ce3f6587e3416d005b8837286cb6", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests"}}, "created_at": "2024-02-06T19:44:51.319Z", "updated_at": "2024-02-06T19:44:51.319Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 200, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "7c00ece665acc85f3887dc5274c92fcd13baa4f6", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Create detailed 2 Unit Test Cases and its respective python test cases for Bootup process for the ISR 4321.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "7c00ece665acc85f3887dc5274c92fcd13baa4f6", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/7c00ece665acc85f3887dc5274c92fcd13baa4f6", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-07T02:32:14.929Z", "updated_at": "2024-02-07T02:32:14.929Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 201, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "944b6173caee257ad6d08a7f45ea8504b2d2ad78", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Create detailed 2 Unit Test Cases and its respective python test cases for Bootup process for the ISR 4321.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480."]}, "git_data": {"sha": "944b6173caee257ad6d08a7f45ea8504b2d2ad78", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/944b6173caee257ad6d08a7f45ea8504b2d2ad78", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-07T02:33:58.620Z", "updated_at": "2024-02-07T02:33:58.620Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 202, "fields": {"customer": 3, "product": 5, "test_category": 102, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "sha": "460d2c84fce332d7b0e0e90c38744a43aada25d2", "data": {"prompts": {"Tests": ["Please provide me the 2 Unit Test Cases and its respective python test cases for Bootup process cases for the Network MSeries Router MX480.", "Create detailed 2 Unit Test Cases and its respective python test cases for Bootup process for the ISR 4321.", "2 Unit Test Cases and its respective python test cases for Bootup process for MX480 with each test case, including setup, execution, verification, and teardown.", "Detailed Python 2 Unit Test Cases and its respective python test cases for Bootup process of the MX480.", "2 Unit Test Cases and its respective python test cases for Bootup process for running a detailed test on the  MX480 router to verify configuration."]}, "git_data": {"sha": "460d2c84fce332d7b0e0e90c38744a43aada25d2", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/460d2c84fce332d7b0e0e90c38744a43aada25d2", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/UNIT%20TEST/Bootup%20process/Tests"}}, "created_at": "2024-02-07T06:03:21.218Z", "updated_at": "2024-02-07T06:03:21.218Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 203, "fields": {"customer": 3, "product": 5, "test_category": 187, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "sha": "ed39b9d5cf6a39f7160b7f2f7ff6d7889d70cd82", "data": {"prompts": {"Tests": ["Please provide me the 2 Regression Test Cases and its respective python test scripts for Zone-based firewall cases for the Network MSeries Router MX480.", "Create detailed 2 Regression Test Cases and its respective python test scripts for Zone-based firewall for the ISR 4321.", "Detailed Python 2 Regression Test Cases and its respective python test scripts for Zone-based firewall of the MX480."]}, "git_data": {"sha": "ed39b9d5cf6a39f7160b7f2f7ff6d7889d70cd82", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/ed39b9d5cf6a39f7160b7f2f7ff6d7889d70cd82", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests"}}, "created_at": "2024-02-07T07:40:49.082Z", "updated_at": "2024-02-07T07:40:49.082Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 204, "fields": {"customer": 3, "product": 5, "test_category": 187, "created_by": 2, "data_url": null, "sha": "033e2aceee7450c343e1f84ad6e12b6ad2a5236e", "data": {"prompts": {"Tests": ["Please provide me the 2 Regression Test Cases and its respective python test scripts for Zone-based firewall cases for the Network MSeries Router MX480.", "Detailed Python 2 Regression Test Cases and its respective python test scripts for Zone-based firewall of the MX480."]}, "git_data": {"sha": "033e2aceee7450c343e1f84ad6e12b6ad2a5236e", "file": [{"sha": "ff2422b29e64dfda4673117219e2a6f4d4620414", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/ff2422b29e64dfda4673117219e2a6f4d4620414", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests"}], "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/commits/033e2aceee7450c343e1f84ad6e12b6ad2a5236e", "html_url": "https://github.com/Avion-x/AI_GEN_TEST_CASES/commit/033e2aceee7450c343e1f84ad6e12b6ad2a5236e"}}, "created_at": "2024-02-07T07:57:43.293Z", "updated_at": "2024-02-07T07:57:43.293Z", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 215, "fields": {"customer": 3, "product": 5, "test_category": 187, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/commits/6bb0607aaa406af486f77b87b6c89557d9cc4475", "sha": "6bb0607aaa406af486f77b87b6c89557d9cc4475", "data": {"prompts": {"Tests": ["Please provide me the 2 Regression Test Cases and its respective python test scripts for Zone-based firewall cases for the Network MSeries Router MX480."]}, "git_data": {"sha": "6bb0607aaa406af486f77b87b6c89557d9cc4475", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/commits/6bb0607aaa406af486f77b87b6c89557d9cc4475", "file": [{"sha": "f3f321160dbe5646155c9c21d4e2b72ed16c6d31", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f3f321160dbe5646155c9c21d4e2b72ed16c6d31", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests"}], "html_url": "https://github.com/Avion-x/AI_GEN_TEST_CASES/commit/6bb0607aaa406af486f77b87b6c89557d9cc4475"}}, "created_at": "2024-02-07T09:59:18.091Z", "updated_at": "2024-02-07T09:59:18.091Z", "request": "1ad237be0b694ff285837f33e14b88a4", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testcases", "pk": 216, "fields": {"customer": 3, "product": 5, "test_category": 187, "created_by": 2, "data_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/commits/6bb0607aaa406af486f77b87b6c89557d9cc4475", "sha": "6bb0607aaa406af486f77b87b6c89557d9cc4475", "data": {"prompts": {"Tests": ["Please provide me the 2 Regression Test Cases and its respective python test scripts for Zone-based firewall cases for the Network MSeries Router MX480."]}, "git_data": {"sha": "6bb0607aaa406af486f77b87b6c89557d9cc4475", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/commits/6bb0607aaa406af486f77b87b6c89557d9cc4475", "file": [{"sha": "f3f321160dbe5646155c9c21d4e2b72ed16c6d31", "url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/contents/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests?ref=main", "git_url": "https://api.github.com/repos/Avion-x/AI_GEN_TEST_CASES/git/blobs/f3f321160dbe5646155c9c21d4e2b72ed16c6d31", "download_url": "https://raw.githubusercontent.com/Avion-x/AI_GEN_TEST_CASES/main/data/JUNIPER/MX480/Regression/Zone-based%20firewall/Tests"}], "html_url": "https://github.com/Avion-x/AI_GEN_TEST_CASES/commit/6bb0607aaa406af486f77b87b6c89557d9cc4475"}}, "created_at": "2024-02-07T09:59:24.717Z", "updated_at": "2024-02-07T09:59:24.717Z", "request": "1ad237be0b694ff285837f33e14b88a4", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.testscriptexecresults", "pk": 1, "fields": {"customer": 3, "product": 5, "test_category": 103, "created_by": 2, "created_at": "2024-02-01T03:59:33Z", "pass_count": 1, "fail_count": 1, "comments": "", "execution_result_details": {"Result": [{"Test": "test_ospf_neighbors", "Test Stauts": "passed", "Actual Result": "ge-0/0/1, ge-0/0/2", "Expected Result": "Look for ge-0/0/1 and ge-0/0/1 in output"}, {"Test": "test_bgp_peer_state", "Test Stauts": "failed", "Actual Result": "172.16.1.1", "Expected Result": "Look for 172.16.1.1 and Established in output"}]}, "test_script_number": "Juniper-MX480-UNIT TEST-Routing protocols (OSPF, BGP, IS-IS, etc)", "status": true, "test_type": 1, "product_sub_category": 2}}, {"model": "product.testscriptexecresults", "pk": 2, "fields": {"customer": 3, "product": 5, "test_category": 106, "created_by": 2, "created_at": "2024-02-01T11:07:42Z", "pass_count": 2, "fail_count": 0, "comments": "", "execution_result_details": {"Result": [{"Test": "test_ipsec_proposal", "Test Stauts": "passed", "Actual Result": "ipsec-prop1", "Expected Result": "Look for ipsec-prop1 in output"}, {"Test": "test_ike_policy", "Test Stauts": "passed", "Actual Result": "ike-pol1", "Expected Result": "Look for ike-pol1 in output"}]}, "test_script_number": "Juniper-MX480-UNIT TEST-VPN configuration", "status": true, "test_type": 1, "product_sub_category": 2}}, {"model": "product.structuredtestcases", "pk": 1, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_", "test_name": "_TC", "objective": "Validate bootup time is under 120 seconds", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Note start time", "Wait for router to complete bootup", "Note end time", "Validate bootup time is under 120 seconds"], "testname": "Test Bootup Time", "objective": "Validate bootup time is under 120 seconds", "test_data": {"max_bootup_time": 120}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 2, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_", "test_name": "_TS", "objective": "Validate bootup time is under 120 seconds", "customer": 3, "product": 5, "data": {"script": "\nimport time\nimport unittest\n\nmax_bootup_time = 120\n\nclass TestBootupTime(unittest.TestCase):\n    def test_bootup_under_120_sec(self):\n        start_time = time.time()\n        # Code to power on router\n        bootup_completed = False\n        while not bootup_completed:\n            # Code to check if router bootup is complete\n            bootup_completed = True\n        end_time = time.time()\n        \n        bootup_time = end_time - start_time\n        self.assertLess(bootup_time, max_bootup_time)\n", "testname": "Test Bootup Time", "file_name": "test_bootup_time.py", "objective": "Validate bootup time is under 120 seconds", "run_command": "python test_bootup_time.py", "init_scripts": "import time\nimport unittest", "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 3, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_", "test_name": "_TC", "objective": "Validate hardware inventory report contains expected components after bootup", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Wait for router to complete bootup", "Run 'show hardware inventory' command", "Validate report contains expected components like fans, power supplies, ports etc."], "testname": "Test Hardware Inventory", "objective": "Validate hardware inventory report contains expected components after bootup", "test_data": {"expected_components": ["FanTray", "PowerSupply", "MIC"]}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 4, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_", "test_name": "_TS", "objective": "Validate hardware inventory contains expected components after bootup", "customer": 3, "product": 5, "data": {"script": "  \nimport unittest\nfrom router import Router\n\nexpected_components = [\"FanTray\", \"PowerSupply\", \"MIC\"]\n\nclass TestHardwareInventory(unittest.TestCase):\n    def test_hardware_inventory(self):\n        router = Router()\n        router.power_on()\n        router.wait_for_bootup()\n        \n        inventory = router.run_command(\"show hardware inventory\")\n        for component in expected_components:\n            self.assertIn(component, inventory)  \n", "testname": "Test Hardware Inventory", "file_name": "test_hardware_inventory.py", "objective": "Validate hardware inventory contains expected components after bootup", "run_command": "python test_hardware_inventory.py", "init_scripts": "import unittest\nfrom router import Router", "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 5, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_", "test_name": "_TC", "objective": "Validate that the MX480 goes through the correct bootup sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on the MX480", "Validate bootrom version", "Validate uboot version", "Validate linux kernel version", "Validate successful boot to login prompt"], "objective": "Validate that the MX480 goes through the correct bootup sequence", "test_data": {"login_prompt": "login:", "expected_uboot_version": "2021.10", "expected_kernel_version": "5.4.0-juniper", "expected_bootrom_version": "1.0"}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 6, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_", "test_name": "_TS", "objective": "Automate validation of MX480 boot sequence", "customer": 3, "product": 5, "data": {"script": "\n        import pexpect\n        \n        bootrom_version = \"1.0\"\n        uboot_version = \"2021.10\" \n        kernel_version = \"5.4.0-juniper\"\n        \n        child = pexpect.spawn(\"telnet mx480\")\n        child.expect(\"bootrom version: (?P<ver>.*)\")\n        bootrom_ver = child.match.group(\"ver\")\n        assert bootrom_ver == bootrom_version\n        \n        child.expect(\"U-Boot 20(?P<ver>.*)\")\n        uboot_ver = child.match.group(\"ver\")\n        assert uboot_ver == uboot_version\n        \n        child.expect(\"Linux version (?P<ver>.*)\")\n        kernel_ver = child.match.group(\"ver\")        \n        assert kernel_ver == kernel_version\n        \n        child.expect(\"login:\")\n        print(\"Login prompt found\")\n      ", "testname": "Test Boot Sequence", "file_name": "test_mx480_boot.py", "objective": "Automate validation of MX480 boot sequence", "run_command": "python test_mx480_boot.py", "init_scripts": "pip install pexpect", "expected_result": "All version checks passed. Login prompt found."}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 7, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_MX480_test_bootup", "test_name": "test_bootup_TC", "objective": "Validate bootup process completes successfully", "customer": 3, "product": 5, "data": {"steps": ["Power on the device", "Verify console displays boot messages", "Validate device transitions to operational state"], "objective": "Validate bootup process completes successfully"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 8, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_MX480_test_bootup", "test_name": "test_bootup_TS", "objective": "Script to validate bootup process", "customer": 3, "product": 5, "data": {"script": "\n        import pytest\n        \n        def test_bootup():\n          print(\"Powered on device\")\n          print(\"Displayed boot messages\")  \n          assert True, \"Device did not transition to operational state\"\n      ", "testname": "test_bootup", "file_name": "test_bootup.py", "objective": "Script to validate bootup process", "run_command": "pytest test_bootup.py", "init_scripts": ["pip install pytest"], "expected_result": "1 passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 9, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_MX480_test_bootup_failure", "test_name": "test_bootup_failure_TC", "objective": "Validate boot failure is detected", "customer": 3, "product": 5, "data": {"steps": ["Simulate failure during boot", "Verify failure message is displayed", "Validate device transitions to failed state"], "objective": "Validate boot failure is detected"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 10, "fields": {"test_id": "Juniper_UNIT TEST_Bootup process_MX480_test_bootup_failure", "test_name": "test_bootup_failure_TS", "objective": "Script to validate boot failure", "customer": 3, "product": 5, "data": {"script": "\n        import pytest\n        \n        def test_boot_failure():\n          print(\"Simulated boot failure\")  \n          print(\"Displayed failure message\")\n          with pytest.raises(AssertionError):\n            assert True, \"Device transitioned to operational state\" \n      ", "testname": "test_bootup_failure", "file_name": "test_bootup_failure.py", "objective": "Script to validate boot failure", "run_command": "pytest test_bootup_failure.py", "init_scripts": ["pip install pytest"], "expected_result": "1 passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 11, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Verify bootup time is within specs", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Start a timer when power applied", "Stop timer when login prompt appears", "Verify bootup time is less than 5 minutes"], "objective": "Verify bootup time is within specs", "test_data": {"max_bootup_time": 300}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 12, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Verify bootup time is within specs", "customer": 3, "product": 5, "data": {"script": "\n        start_time = time.time()\n        # Code to power on router\n        # Code to print login prompt \n        end_time = time.time()\n        bootup_time = end_time - start_time\n        assert bootup_time < 300\n      ", "testname": "Test Bootup Time", "file_name": "test_bootup_time.py", "objective": "Verify bootup time is within specs", "run_command": "python test_bootup_time.py", "init_scripts": ["import time"], "expected_result": "Test passes if bootup time is less than 5 minutes"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 13, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Verify components boot up in correct sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Verify power supply fans spin first", "Verify route engine powers on", "Verify line cards boot", "Validate correct boot sequence"], "objective": "Verify components boot up in correct sequence", "test_data": {"boot_sequence": ["Power supply fans", "Route engine", "Line cards"]}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 14, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Verify components boot up in correct sequence", "customer": 3, "product": 5, "data": {"script": " \n        boot_sequence = [] \n      \n        # Code to monitor/log component bootup sequence  \n      \n        assert boot_sequence == [\"Power supply fans\", \"Route engine\", \"Line cards\"]\n      ", "testname": "Test Bootup Sequence", "file_name": "test_bootup_sequence.py", "objective": "Verify components boot up in correct sequence", "run_command": "python test_bootup_sequence.py", "init_scripts": [], "expected_result": "Test passes if components boot in sequence: fans, route engine, line cards"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 15, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate bootup process and ensure all components initialize properly", "customer": 3, "product": 5, "data": {"steps": ["POWERS LED turns green", "STATUS LED turns green", "FPCs are powered up and all LEDs turn green"], "objective": "Validate bootup process and ensure all components initialize properly"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 16, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate bootup process by checking syslog messages", "customer": 3, "product": 5, "data": {"script": "\n        with open('syslog.log') as f:\n          syslog = f.read()\n          \n        def test_led_status():\n          pow_led = re.search('POWERS LED turned green', syslog)\n          stat_led = re.search('STATUS LED turned green', syslog)\n          assert pow_led and stat_led\n        \n        def test_fpc_status():\n          for fpc in range(8):\n            fpc_pat = 'FPC{} powered up'.format(fpc) \n            assert re.search(fpc_pat, syslog)\n      ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Script to validate bootup process by checking syslog messages", "run_command": "python test_bootup.py", "init_scripts": "import re", "expected_result": "All assertions should pass"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 17, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate router goes through proper bootup sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on router", "Verify fans spin up", "Verify boot messages on console", "Verify router reaches user exec prompt"], "objective": "Validate router goes through proper bootup sequence"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 18, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate router goes through proper bootup sequence", "customer": 3, "product": 5, "data": {"script": "\nimport pytest\n\ndef test_bootup():\n    # Steps to validate bootup via console output\n    assert fans_spin_up == True  \n    assert boot_messages_printed == True \n    assert reached_user_exec_prompt == True\n", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Validate router goes through proper bootup sequence", "run_command": "pytest test_bootup.py", "init_scripts": ["pip install pytest"], "expected_result": "2 passed, 0 failed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 19, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Validate bootup time is under 5 minutes", "customer": 3, "product": 5, "data": {"steps": ["Power on router", "Note start time", "Verify router reaches user exec prompt", "Note end time", "Subtract end time from start time"], "objective": "Validate bootup time is under 5 minutes"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 20, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Validate bootup time is under 5 minutes", "customer": 3, "product": 5, "data": {"script": "  \nimport time\nimport pytest\n\ndef test_bootup_time():\n    start_time = time.time()  \n    # Router bootup steps  \n    end_time = time.time()   \n    bootup_time = end_time - start_time  \n    assert bootup_time <= 300 # seconds\n", "testname": "Test Bootup Time", "file_name": "test_bootup_time.py", "objective": "Validate bootup time is under 5 minutes", "run_command": "pytest test_bootup_time.py", "init_scripts": ["pip install pytest"], "expected_result": "1 passed, 0 failed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 21, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup", "test_name": "test_bootup", "objective": "Validate bootup process completes successfully", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Verify bootup messages are printed on console", "Validate router transitions to operational state"], "objective": "Validate bootup process completes successfully"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 22, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup", "test_name": "test_bootup", "objective": "Script to validate bootup process", "customer": 3, "product": 5, "data": {"script": "\n        def test_bootup():\n            # Steps to power on router\n            power_on_router()\n            \n            # Verify boot messages using regex\n            bootup_messages = get_console_log()\n            assert re.search(\"Booting kernel\", bootup_messages)\n            \n            # Check operational state\n            op_state = get_operational_state()  \n            assert op_state == \"operational\"\n      ", "testname": "test_bootup", "file_name": "test_bootup.py", "objective": "Script to validate bootup process", "run_command": "python test_bootup.py", "init_scripts": "import re\nimport sys\nimport subprocess", "expected_result": "Bootup completed successfully"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 23, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate that the router boots up successfully through all stages and enters operational mode", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Validate router bootup messages at each stage", "Validate router enters operational mode"], "objective": "Validate that the router boots up successfully through all stages and enters operational mode"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 24, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate bootup sequence", "customer": 3, "product": 5, "data": {"script": "\nimport pexpect\n\ndef test_bootup():\n    child = pexpect.spawn(\"telnet localhost\")\n    child.expect(\"Press RETURN to get started.\")\n    child.sendline(\"\")\n    child.expect(\"system booting up.\")\n    child.expect(\"Preparing to configure Routing Engine.\")\n    child.expect(\"Extraction done.\")\n    child.expect(\"LOGIN:\")\n    print(\"Bootup test passed\")\n\ntest_bootup()\n    ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Script to validate bootup sequence", "run_command": "python test_bootup.py", "init_scripts": ["pip install pexpect"], "expected_result": "Bootup test passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 25, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_image_version", "test_name": "test_image_version", "objective": "Validate that the router boots up with the correct Junos image version", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Execute 'show version' command", "Validate Junos version matches expected version"], "objective": "Validate that the router boots up with the correct Junos image version"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 26, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_image_version", "test_name": "test_image_version", "objective": "Script to validate Junos version", "customer": 3, "product": 5, "data": {"script": "  \nimport pexpect\n\ndef test_version():\n  child = pexpect.spawn(\"telnet localhost\")\n  child.expect(\"login:\")\n  child.sendline(\"admin\")\n  child.expect(\"Password:\")\n  child.sendline(\"password\")\n  child.expect(\"> \")\n  child.sendline(\"show version\")\n  child.expect(\"Junos: 19.3R1.8\") \n  print(\"Image version test passed\")\n    \ntest_version()\n    ", "testname": "Test Image Version", "file_name": "test_version.py", "objective": "Script to validate Junos version", "run_command": "python test_version.py", "init_scripts": ["pip install pexpect"], "expected_result": "Image version test passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 27, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate bootup process and ensure all components initialize properly", "customer": 3, "product": 5, "data": {"steps": ["Verify POWER OK LED turns on after power cable connected", "Verify SYSTEM OK LED turns on after boot initialization", "Verify all fans spinning and LEDs lit after 60 seconds", "Verify can SSH into router after 90 seconds"], "objective": "Validate bootup process and ensure all components initialize properly"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 28, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate bootup LED state changes", "customer": 3, "product": 5, "data": {"script": "\n        import time\n        import paramiko\n        \n        IP = '192.168.1.1'\n        USERNAME = 'admin'\n        PASSWORD = 'Jnpr123'\n        \n        client = paramiko.SSHClient()\n        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        \n        start = time.time()\n        booted = False\n        while time.time() - start < 120:\n            try:\n                client.connect(IP, username=USERNAME, password=PASSWORD)\n                booted = True\n                break\n            except:\n                time.sleep(10)\n                \n        if booted:\n            print(\"SUCCESS: System bootup completed\")\n        else:\n            print(\"FAILED: System failed to boot\")\n      ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Script to validate bootup LED state changes", "run_command": "python test_bootup.py", "init_scripts": "pip install paramiko", "expected_result": "SUCCESS: System bootup completed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 29, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_boot_sequence_validation_test", "test_name": "boot_sequence_validation_test", "objective": "Validate that the router goes through the expected boot stages in the correct order on power up.", "customer": 3, "product": 5, "data": {"steps": ["1. Power on the router", "2. Verify POST completes successfully", "3. Verify uboot loads successfully", "4. Verify kernel loading stage appears", "5. Verify init stage appears", "6. Verify system ready login prompt appears"], "objective": "Validate that the router goes through the expected boot stages in the correct order on power up."}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 30, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_boot_sequence_validation_test", "test_name": "boot_sequence_validation_test", "objective": "Script to validate boot sequence", "customer": 3, "product": 5, "data": {"script": "\n            import pexpect\n            import re\n            \n            def test_boot():\n                output = pexpect.run('reboot')\n                \n                match = re.search(r'(POST)(.*)(uboot)(.*)(kernel)(.*)(init)(.*)(login)', str(output))\n                stages = match.groups()\n                \n                assert len(stages) == 8\n                assert all(stage for stage in stages)\n                \n                print('Test passed')\n                \n        ", "testname": "Boot Sequence Validation Test", "file_name": "test_bootup.py", "objective": "Script to validate boot sequence", "run_command": "python test_bootup.py", "init_scripts": ["pip install pexpect==4.8.0"], "expected_result": "Test passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 31, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_total_boot_time_validation_test", "test_name": "total_boot_time_validation_test", "objective": "Validate that the total boot time is under 120 seconds.", "customer": 3, "product": 5, "data": {"data": {"threshold_time": 120}, "steps": ["1. Power on the router", "2. Note start time", "3. Verify system ready login prompt appears", "4. Note end time", "5. Verify total time is under 120 seconds"], "objective": "Validate that the total boot time is under 120 seconds."}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 32, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_total_boot_time_validation_test", "test_name": "total_boot_time_validation_test", "objective": "Script to validate total boot time", "customer": 3, "product": 5, "data": {"script": "  \n            import time\n            import pexpect\n            \n            def test_boot_time():\n                start = time.time()\n                output = pexpect.run('reboot') \n                end = time.time()\n                elapsed = end - start\n                \n                assert elapsed < THRESHOLD_TIME, f'Excess boot time: {elapsed}' \n                print('Total boot time validation passed')\n                \n        ", "testname": "Total Boot Time Validation Test", "file_name": "test_boottime.py", "objective": "Script to validate total boot time", "run_command": "THRESHOLD_TIME=120 python test_boottime.py", "init_scripts": ["pip install time"], "expected_result": "Total boot time validation passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 33, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Validate bootup time is within expected limit", "customer": 3, "product": 5, "data": {"steps": ["Power on the MX480", "Note start time", "Wait for device ready prompt", "Note end time", "Validate bootup time is less than 5 minutes"], "objective": "Validate bootup time is within expected limit"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 34, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Validate bootup time is within expected limit", "customer": 3, "product": 5, "data": {"script": "\n        start = time.time()\n        # Code to power on and boot device\n        end = time.time()\n        bootup_time = end - start\n        self.assertLess(bootup_time, 300)\n      ", "testname": "Test Bootup Time", "file_name": "test_bootup_time.py", "objective": "Validate bootup time is within expected limit", "run_command": "python test_bootup_time.py", "init_scripts": "import time\nimport unittest", "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 35, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate bootup sequence steps occur in correct order", "customer": 3, "product": 5, "data": {"steps": ["Power on the MX480", "Validate BIOS initialization messages are printed", "Validate OS loader messages printed", "Validate kernel initialization messages printed", "Validate system services initialized messages printed", "Validate login prompt ready"], "objective": "Validate bootup sequence steps occur in correct order"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 36, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate bootup sequence steps occur in correct order", "customer": 3, "product": 5, "data": {"script": "\n        bootup_log = self.get_bootup_log() # Code to get bootup log\n        # Validate bootup sequence order using regex\n        self.assertRegex(bootup_log, r\".*BIOS.*OS Loader.*Kernel.*Services.*login:\")  \n      ", "testname": "Test Bootup Sequence", "file_name": "test_bootup_sequence.py", "objective": "Validate bootup sequence steps occur in correct order", "run_command": "python test_bootup_sequence.py", "init_scripts": "import re", "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 37, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate the device goes through the expected bootup sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on the device", "Verify boot rom version", "Validate boot loader version", "Check kernel version", "Validate system initialization"], "objective": "Validate the device goes through the expected bootup sequence"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 38, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate bootup sequence", "customer": 3, "product": 5, "data": {"script": "\n        import unittest\n        \n        class TestBootup(unittest.TestCase):\n          def test_bootup(self):\n            # Test steps to validate bootup sequence\n            self.assertEqual(boot_rom_version, \"1.0\") \n            self.assertEqual(boot_loader_version, \"2.0\")\n            self.assertEqual(kernel_version, \"3.0\")\n            self.assertTrue(system_initialized)\n          \n      ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Script to validate bootup sequence", "run_command": "python test_bootup.py", "init_scripts": "pip install unittest", "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 39, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Check if device boots up within expected time", "customer": 3, "product": 5, "data": {"steps": ["Power on the device", "Note start time", "Check if login prompt appears", "Note end time", "Validate bootup time is less than 120 seconds"], "objective": "Check if device boots up within expected time"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 40, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Script to validate bootup time", "customer": 3, "product": 5, "data": {"script": "\n        import time\n        \n        start = time.time()\n        # Code to power on device\n        \n        end = time.time() \n        duration = end - start\n        \n        assert duration < 120\n        \n      ", "testname": "Test Bootup Time", "file_name": "test_boottime.py", "objective": "Script to validate bootup time", "run_command": "python test_boottime.py", "init_scripts": "pip install time", "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 41, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_with_valid_configuration", "test_name": "test_bootup_with_valid_configuration", "objective": "Validate router bootup successfully with valid startup configuration", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Verify router bootup completes successfully"], "testname": "Test Bootup with valid configuration", "objective": "Validate router bootup successfully with valid startup configuration"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 42, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_with_valid_configuration", "test_name": "test_bootup_with_valid_configuration", "objective": "Validate router bootup successfully with valid startup configuration", "customer": 3, "product": 5, "data": {"script": "'''\nimport napalm\n\ndef test_bootup(hostname, username, password):\n    driver = napalm.get_network_driver('eos')\n    router = driver(hostname=hostname, username=username, password=password)\n    router.open()\n    assert router.is_alive() == True\n    router.close()\n''',\n\nclass TestRouterBootup(unittest.TestCase):\n    def test_bootup_valid_config(self):\n        test_bootup('192.168.1.1', 'admin', 'password')\n", "testname": "Test Bootup with valid configuration", "file_name": "test_bootup_valid_config.py", "objective": "Validate router bootup successfully with valid startup configuration", "run_command": "python test_bootup_valid_config.py", "init_scripts": "'''pip install napalm netmiko''',\nimport unittest", "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 43, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_with_invalid_configuration", "test_name": "test_bootup_with_invalid_configuration", "objective": "Validate bootup failure due to invalid startup configuration", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Verify router boot fails"], "testname": "Test Bootup with invalid configuration", "objective": "Validate bootup failure due to invalid startup configuration"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 44, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_with_invalid_configuration", "test_name": "test_bootup_with_invalid_configuration", "objective": "Validate bootup failure due to invalid startup configuration", "customer": 3, "product": 5, "data": {"script": "'''\nimport napalm\nimport unittest\nfrom napalm.base.exceptions import ConnectionException\n\ndef test_bootup(hostname, username, password):\n    driver = napalm.get_network_driver('eos')\n    try:\n        router = driver(hostname=hostname, username=username, password=password)\n        router.open()\n    except ConnectionException:\n        return True\n    return False\n''',\n\nclass TestRouterBootup(unittest.TestCase):\n    def test_bootup_invalid_config(self):\n        result = test_bootup('192.168.1.1', 'admin', 'password')\n        assert result == True\n", "testname": "Test Bootup with invalid configuration", "file_name": "test_bootup_invalid_config.py", "objective": "Validate bootup failure due to invalid startup configuration", "run_command": "python test_bootup_invalid_config.py", "init_scripts": "'''pip install napalm''', \nimport unittest", "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 45, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate that the MX480 router goes through the expected bootup sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on the MX480 router", "Verify all fans spin up", "Validate boot messages are printed on console", "Validate OS bootup completion messages"], "testname": "Test Bootup Sequence", "objective": "Validate that the MX480 router goes through the expected bootup sequence"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 46, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate bootup sequence", "customer": 3, "product": 5, "data": {"script": "\n        import paramiko\n        \n        IP = '192.168.1.1'\n        USERNAME = 'testuser'\n        PASSWORD = 'test123'\n        \n        ssh = paramiko.SSHClient()\n        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        ssh.connect(IP, username=USERNAME, password=PASSWORD)\n        \n        channel = ssh.invoke_shell()  \n        stdin = channel.makefile('wb')\n        stdout = channel.makefile('rb')\n        \n        stdin.write('show chassis hardware\\n')\n        bootup_output = stdout.read()\n        \n        if 'Fans checked, all okay' in str(bootup_output) and \n            'PFE checks passed' in str(bootup_output):\n          print('Test passed')\n        else:\n          print('Test failed')\n        \n        ssh.close()\n    ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Script to validate bootup sequence", "run_command": "python test_bootup.py", "init_scripts": ["pip install paramiko"], "expected_result": "Test passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 47, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_image_install", "test_name": "test_image_install", "objective": "Validate that a new Junos image can be installed successfully", "customer": 3, "product": 5, "data": {"steps": ["Copy image file to router", "Install image", "Reboot router", "Verify new image version"], "testname": "Test Image Install", "objective": "Validate that a new Junos image can be installed successfully"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 48, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_image_install", "test_name": "test_image_install", "objective": "Script to test Junos image install", "customer": 3, "product": 5, "data": {"script": "\n        import paramiko\n        \n        IP = '192.168.1.1' \n        USERNAME = 'testuser'\n        PASSWORD = 'test123'\n        IMAGE_FILE = 'junos-image.tgz'\n        \n        ssh = paramiko.SSHClient() \n        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        ssh.connect(IP, username=USERNAME, password=PASSWORD)\n        \n        scp = ssh.open_sftp()\n        scp.put(IMAGE_FILE, '/var/tmp/junos-image.tgz')\n        scp.close()\n        \n        channel = ssh.invoke_shell()\n        stdin = channel.makefile('wb')  \n        stdin.write('request system software add /var/tmp/junos-image.tgz\\n')\n        stdin.write('request system reboot\\n')\n        \n        ssh.close()\n        \n        # Wait for device reboot\n        \n        ssh.connect(IP, username=USERNAME, password=PASSWORD)      \n        channel = ssh.invoke_shell()      \n        stdin = channel.makefile('wb')\n        stdin.write('show version | match Junos\\n')\n        stdout = channel.makefile('rb')\n        \n        new_version = stdout.read().strip().split()[-1]\n        if new_version == 'X.X-Y':\n          print('Test passed')\n        else:\n          print('Test failed')\n          \n        ssh.close()\n    ", "testname": "Test Image Install", "file_name": "test_image_install.py", "objective": "Script to test Junos image install", "run_command": "python test_image_install.py", "init_scripts": ["pip install paramiko"], "expected_result": "Test passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 49, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate that the device boots up correctly through all stages", "customer": 3, "product": 5, "data": {"steps": ["Power on device", "Validate bootrom version", "Validate uboot loads successfully", "Validate kernel version", "Validate init process starts", "Validate system services start successfully"], "testname": "Test Bootup Sequence", "objective": "Validate that the device boots up correctly through all stages"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 50, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate bootup sequence", "customer": 3, "product": 5, "data": {"script": "\n        def test_bootup():\n          #Commands to power on device\n          \n          #Check bootrom version\n          rval = subprocess.check_output([\"getbootver\"])\n          assert re.search(\"Version: .*?\", rval)\n          \n          #Check uboot\n          rval = subprocess.check_output([\"getubootver\"])\n          assert re.search(\"U-Boot .*?\", rval)\n           \n          #Check kernel version\n          rval = subprocess.check_output([\"cat\", \"/proc/version\"]) \n          assert re.search(\"Linux version .*? \\(\", rval)\n          \n          #Check init process \n          rval = subprocess.check_output([\"ps\",\"-ef\"])\n          assert \"init\" in rval \n          \n          #Validate system services\n          rval = subprocess.check_output([\"systemctl\",\"list-units\"])  \n          assert \"running\" in rval\n          ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Script to validate bootup sequence", "run_command": "python test_bootup.py", "init_scripts": ["import sys", "import re", "import subprocess"], "expected_result": "All assertions should pass"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 51, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Validate bootup time is within 120 seconds", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Note start time when power LED turns green", "Note end time when MOTD banner is displayed", "Validate bootup time is <= 120 seconds"], "testname": "Test Bootup Time", "objective": "Validate bootup time is within 120 seconds", "test_data": {"max_bootup_time": 120}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 52, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Script to validate bootup time", "customer": 3, "product": 5, "data": {"script": "\nimport time\nimport unittest\n\nclass TestBootupTime(unittest.TestCase):\n    def test_bootup_time(self):\n        start_time = time.perf_counter() \n        # Simulate device bootup process\n        time.sleep(100)  \n        end_time = time.perf_counter()\n        bootup_time = end_time - start_time\n        max_time = 120\n        self.assertLessEqual(bootup_time, max_time)\n", "testname": "Test Bootup Time", "file_name": "test_bootup_time.py", "objective": "Script to validate bootup time", "run_command": "python test_bootup_time.py", "init_scripts": ["import time", "import unittest"], "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 53, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_config_", "test_name": "test_bootup_config_", "objective": "Validate bootup configuration file boots properly", "customer": 3, "product": 5, "data": {"steps": ["Set boot configuration to test_config.cfg file", "Power cycle the router", "Verify router boots up properly with test configuration"], "testname": "Test Bootup Config ", "objective": "Validate bootup configuration file boots properly", "test_data": {"config_file": "test_config.cfg"}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 54, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_config_", "test_name": "test_bootup_config_", "objective": "Script to test boot config", "customer": 3, "product": 5, "data": {"script": "  \nimport os \nimport unittest\n\nclass TestBootConfig(unittest.TestCase):\n    def test_bootup_config(self):\n        #Simulate setting boot config \n        boot_config = \"test_config.cfg\"  \n        #Simulate router bootup\n        self.assertEqual(os.getenv(\"BOOT_CONFIG\"), boot_config)\n        #Check environment variable set correctly  \n        self.assertEqual(os.getenv(\"BOOTED_CONFIG\"), boot_config)  \n\n", "testname": "Test Bootup Config", "file_name": "test_bootup_config.py", "objective": "Script to test boot config", "run_command": "python test_bootup_config.py", "init_scripts": ["import os", "import unittest"], "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 55, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_", "test_name": "", "objective": "Verify basic bootup process completes successfully", "customer": 3, "product": 5, "data": {"steps": ["Power on device", "Verify bootup messages are displayed", "Verify command prompt is available"], "objective": "Verify basic bootup process completes successfully"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 56, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_", "test_name": "", "objective": "Verify basic bootup process completes successfully", "customer": 3, "product": 5, "data": {"script": "\n                import pexpect\n                \n                def test_boot():\n                    child = pexpect.spawn('boot_command')\n                    child.expect('Bootup messages')\n                    child.expect('Command prompt')\n                    print('Basic bootup completed successfully')\n                \n                test_boot()\n            ", "testname": "Basic Bootup", "file_name": "test_bootup.py", "objective": "Verify basic bootup process completes successfully", "run_command": "python test_bootup.py", "init_scripts": ["pip install pexpect"], "expected_result": "Basic bootup completed successfully"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 57, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_", "test_name": "", "objective": "Verify bootup process times out if it takes longer than expected", "customer": 3, "product": 5, "data": {"steps": ["Power on device", "Wait longer than timeout period", "Verify timeout message is displayed"], "objective": "Verify bootup process times out if it takes longer than expected"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 58, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_", "test_name": "", "objective": "Verify bootup process times out if it takes longer than expected", "customer": 3, "product": 5, "data": {"script": "\n                import pexpect\n                import time\n                \n                TIMEOUT = 120\n                \n                def test_bootup_timeout():\n                    child = pexpect.spawn('boot_command')\n                    time.sleep(TIMEOUT + 10)\n                    try:\n                        child.expect('Bootup completed', timeout=TIMEOUT)\n                    except pexpect.TIMEOUT:\n                        print('Bootup timed out')\n                \n                test_bootup_timeout()\n            ", "testname": "Bootup Timeout", "file_name": "test_bootup_timeout.py", "objective": "Verify bootup process times out if it takes longer than expected", "run_command": "python test_bootup_timeout.py", "init_scripts": ["pip install pexpect"], "expected_result": "Bootup timed out"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 59, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_with_valid_config", "test_name": "test_bootup_with_valid_config", "objective": "Validate router boots up successfully with valid bootup config", "customer": 3, "product": 5, "data": {"steps": ["1. Power on the router", "2. Verify console prints system boot messages", "3. Verify router transitions to ready state"], "testname": "Test Bootup with valid config", "objective": "Validate router boots up successfully with valid bootup config"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 60, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_with_valid_config", "test_name": "test_bootup_with_valid_config", "objective": "Validate router boots up successfully with valid bootup config", "customer": 3, "product": 5, "data": {"script": "\"\"\"import paramiko\n\nclient = paramiko.SSHClient()\nclient.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nclient.connect('192.168.0.1', username='admin', password='admin123')\nstdin, stdout, stderr = client.exec_command('show system boot-messages')\noutput = stdout.read()\nif 'System Ready' in output:\n    print('Test Passed')\nelse:\n    print('Test Failed')\nclient.close()\"\"\"", "testname": "Test Bootup with valid config", "file_name": "test_bootup.py", "objective": "Validate router boots up successfully with valid bootup config", "run_command": "python test_bootup.py", "init_scripts": "\"\"\"pip install paramiko\"\"\"", "expected_result": "Test Passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 61, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_with_invalid_config", "test_name": "test_bootup_with_invalid_config", "objective": "Validate boot failure on invalid bootup config", "customer": 3, "product": 5, "data": {"steps": ["1. Power on the router with invalid config", "2. Verify console prints error", "3. Verify router fails to transition to ready state"], "testname": "Test Bootup with invalid config", "objective": "Validate boot failure on invalid bootup config"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 62, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_with_invalid_config", "test_name": "test_bootup_with_invalid_config", "objective": "Validate boot failure on invalid bootup config", "customer": 3, "product": 5, "data": {"script": "\"\"\"import paramiko\n\nclient = paramiko.SSHClient()\nclient.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nclient.connect('192.168.0.1', username='admin', password='admin123')\nstdin, stdout, stderr = client.exec_command('show system boot-messages')\noutput = stdout.read()\nif 'System Ready' in output:\n    print('Test Failed')\nelse:\n    print('Test Passed')\nclient.close()\"\"\"", "testname": "Test Bootup with invalid config", "file_name": "test_bootup_fail.py", "objective": "Validate boot failure on invalid bootup config", "run_command": "python test_bootup_fail.py", "init_scripts": "\"\"\"pip install paramiko\"\"\"", "expected_result": "Test Passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 63, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_", "test_name": "", "objective": "Validate bootup time is within specs", "customer": 3, "product": 5, "data": {"steps": ["Power on the device", "Note start time on console log", "Verify device reaches login prompt", "Note end time from console log", "Validate duration is less than 5 minutes"], "objective": "Validate bootup time is within specs"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 64, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_", "test_name": "", "objective": "Validate bootup time is within specs", "customer": 3, "product": 5, "data": {"script": "\n        start = time.time()\n        # Code to power on device\n        end = time.time()\n        duration = end - start\n        assert duration < 300\n      ", "testname": "Test Bootup Time", "file_name": "test_bootup.py", "objective": "Validate bootup time is within specs", "run_command": "python test_bootup.py", "init_scripts": "import time", "expected_result": "Pass if bootup duration is less than 5 minutes"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 65, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_", "test_name": "", "objective": "Validate bootup sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on the device", "Verify BIOS/UEFI initialization messages", "Verify bootloader initialization", "Verify kernel initialization", "Verify system services initialization", "Validate login prompt reaches at end"], "objective": "Validate bootup sequence"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 66, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_", "test_name": "", "objective": "Validate bootup sequence", "customer": 3, "product": 5, "data": {"script": "\n        # Code to power on device and capture console log\n        bios_pattern = r\"BIOS\\s+version\"\n        bootloader_pattern = r\"U-Boot 20\\d+\" \n        kernel_pattern = r\"Booting Linux kernel\"\n        services_pattern = r\"Starting system services\"\n        login_prompt = r\"\\$\\s?\"\n        assert re.search(bios_pattern, log) \n        assert re.search(bootloader_pattern, log) \n        assert re.search(kernel_pattern, log)\n        assert re.search(services_pattern, log)\n        assert re.search(login_prompt, log)\n      ", "testname": "Test Bootup Sequence", "file_name": "test_sequence.py", "objective": "Validate bootup sequence", "run_command": "python test_sequence.py", "init_scripts": "import re", "expected_result": "Pass if all initialization messages are seen in order"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 67, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate router bootup sequence completes all steps successfully", "customer": 3, "product": 5, "data": {"steps": ["Power on router", "Validate all cards are detected", "Validate FPCs come online", "Validate kernel bootup messages", "Validate daemons start correctly"], "testname": "Test Bootup Sequence", "objective": "Validate router bootup sequence completes all steps successfully", "test_data": {"router_model": "MX480"}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 68, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate router bootup sequence using unittest", "customer": 3, "product": 5, "data": {"script": "    \nclass TestBootup(unittest.TestCase):\n    def test_bootup(self):\n        self.assertEqual(r.power_on(), True) \n        self.assertEqual(r.detect_cards(), True)  \n        self.assertEqual(r.bringup_fpcs(), True)\n        self.assertTrue('Kernel booted' in r.get_bootup_logs())  \n        self.assertEqual(r.verify_daemons(), [])\n\nif __name__ == '__main__':\n    unittest.main()\n    ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Validate router bootup sequence using unittest", "run_command": "python test_bootup.py", "init_scripts": ["import unittest", "from router import Router", "r = Router('MX480')"], "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 69, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_console_access", "test_name": "test_console_access", "objective": "Validate able to access console during bootup", "customer": 3, "product": 5, "data": {"steps": ["Connect console cable to router", "Power on router", "Check console prints bootup messages", "Login to console CLI"], "testname": "Test Console Access", "objective": "Validate able to access console during bootup", "test_data": {"console_port": "COM1", "login_prompt": "login:"}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 70, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_console_access", "test_name": "test_console_access", "objective": "Validate console access using unittest", "customer": 3, "product": 5, "data": {"script": "\nclass TestConsole(unittest.TestCase):\n    def test_console(self):\n        ser = serial.Serial('COM1')\n        self.assertIn('Booting kernel', ser.readline())\n        self.assertEqual(ser.readline(), 'login:')\n        ser.write('myusername')\n        ser.write('mypassword')   \n        self.assertIn('Router>', ser.readline())  \n        \nif __name__ == '__main__':\n    unittest.main()\n    ", "testname": "Test Console Access", "file_name": "test_console.py", "objective": "Validate console access using unittest", "run_command": "python test_console.py", "init_scripts": ["import serial", "import unittest"], "expected_result": "OK"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 71, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Validate bootup time is within expected limit", "customer": 3, "product": 5, "data": {"steps": ["Power on the device", "Note start time", "Check if device is fully booted", "Note end time", "Validate bootup time is less than 5 minutes"], "testname": "Test Bootup Time", "objective": "Validate bootup time is within expected limit"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 72, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_time", "test_name": "test_bootup_time", "objective": "Script to validate bootup time", "customer": 3, "product": 5, "data": {"script": "\n        import datetime\n        \n        start = datetime.datetime.now()\n        print(\"System booted at:\", start)\n                \n        # Add logic to detect system fully booted\n                \n        end = datetime.datetime.now()\n        print(\"System bootup completed at:\", end)\n                \n        bootup_time = end - start\n        print(\"Total bootup time:\", bootup_time)\n                \n        assert bootup_time.seconds < 300\n      ", "testname": "Test Bootup Time", "file_name": "test_bootup.py", "objective": "Script to validate bootup time", "run_command": "python test_bootup.py", "init_scripts": "pip install datetime", "expected_result": "Success if bootup time is less than 5 minutes"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 73, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate modules loaded in correct bootup sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on the device", "Check syslog/console for bootup logs", "Validate BIOS, u-boot, kernel booted sequentially"], "testname": "Test Bootup Sequence", "objective": "Validate modules loaded in correct bootup sequence"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 74, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate bootup sequence", "customer": 3, "product": 5, "data": {"script": " \n        import re\n        \n        bootup_log = \"BIOS started, u-boot started, kernel started...\" \n        \n        bios_pattern = r\"BIOS started\"\n        uboot_pattern = r\"u-boot started\"\n        kernel_pattern = r\"kernel started\"\n        \n        assert re.search(bios_pattern, bootup_log)\n        assert re.search(uboot_pattern, bootup_log) \n        assert re.search(kernel_pattern, bootup_log)\n        assert bootup_log.find(bios_pattern) < bootup_log.find(uboot_pattern) < bootup_log.find(kernel_pattern)\n      ", "testname": "Test Bootup Sequence", "file_name": "test_sequence.py", "objective": "Script to validate bootup sequence", "run_command": "python test_sequence.py", "init_scripts": "", "expected_result": "Success if BIOS, u-boot and kernel logs appear in correct sequence"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 75, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_configuration", "test_name": "test_zone-based_firewall_configuration", "objective": "Validate zone-based firewall configuration by creating zones, applying policies and rules", "customer": 3, "product": 5, "data": {"steps": ["Create trust and untrust zones", "Create security policy between zones", "Apply NAT rules between zones", "Validate connectivity between zones"], "testname": "Test Zone-based Firewall Configuration", "objective": "Validate zone-based firewall configuration by creating zones, applying policies and rules", "test_data": {"trust_zone": "trust-zone", "policy_name": "trust-to-untrust-policy", "untrust_zone": "untrust-zone"}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 76, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_configuration", "test_name": "test_zone-based_firewall_configuration", "objective": "Validate zone-based firewall configuration using PyEZ", "customer": 3, "product": 5, "data": {"script": "\n        import json\n        from jnpr.junos import Device\n        \n        dev = Device(host='192.168.1.1', user='netconf', password='password')\n        dev.open()\n        \n        dev.cu.load(target = 'candidate')\n        \n        zones = {\n            \"trust-zone\": {\n                \"description\": \"Trust zone\" \n            },\n            \"untrust-zone\": {\n                \"description\": \"Untrust zone\",\n                \"host-inbound-traffic\": { \n                    \"system-services\": {\n                        \"ping\": ''  \n                    }\n                },\n                \"interfaces\": {\n                    \"ge-0/0/1\": {\n                        \"host-inbound-traffic\": {\n                            \"system-services\": {\n                                \"ping\": ''\n                            }   \n                        }   \n                    }\n                }\n            }\n        }  \n        \n        dev.cu.load(zones, format='json', merge=True)\n        \n        dev.cu.commit()\n        \n        dev.close()\n      ", "testname": "Test Zone-based Firewall Configuration", "file_name": "test_zbfw.py", "objective": "Validate zone-based firewall configuration using PyEZ", "run_command": "python test_zbfw.py", "init_scripts": "pip install junos-eznc", "expected_result": "Zones, policies and rules configured successfully"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 77, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_connectivity", "test_name": "test_zone_connectivity", "objective": "Validate connectivity between zones", "customer": 3, "product": 5, "data": {"steps": ["Configure client in trust zone", "Configure server in untrust zone", "Attempt connections from trust client to untrust server"], "testname": "Test Zone Connectivity", "objective": "Validate connectivity between zones", "test_data": {"client_ip": "10.1.1.10", "server_ip": "10.2.2.10"}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 78, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_connectivity", "test_name": "test_zone_connectivity", "objective": "Test connectivity between zones using Scapy", "customer": 3, "product": 5, "data": {"script": " \n        from scapy.all import *\n        \n        ip = IP(src='10.1.1.10', dst='10.2.2.10')\n        syn = TCP(sport=1234, dport=80)\n        \n        packet = ip/syn\n        send(packet,verbose=0)\n        \n        ans, unans = sr(packet) \n        print(\"Successfully connected from trust to untrust zone\")\n      ", "testname": "Test Zone Connectivity", "file_name": "test_zone_connectivity.py", "objective": "Test connectivity between zones using Scapy", "run_command": "python test_zone_connectivity.py", "init_scripts": "pip install scapy", "expected_result": "Successfully connected from trust to untrust zone"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 79, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_creation", "test_name": "test_zone_creation", "objective": "Validate creation of new zones", "customer": 3, "product": 5, "data": {"steps": ["Create new zone using CLI/API call", "Verify zone created successfully using show command"], "testname": "Test Zone Creation", "objective": "Validate creation of new zones"}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 80, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_creation", "test_name": "test_zone_creation", "objective": "Validate creation of new zones", "customer": 3, "product": 5, "data": {"script": "\"\"\"Python script to create new zone and verify \"\"\"", "testname": "Test Zone Creation", "file_name": "test_zone_creation.py", "objective": "Validate creation of new zones", "run_command": "python test_zone_creation.py", "init_scripts": "\"\"\"pip install required packages\"\"\"", "expected_result": "Zone created and verified successfully"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 81, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_interface_assignment", "test_name": "test_zone_interface_assignment", "objective": "Validate interfaces assigned to zones successfully", "customer": 3, "product": 5, "data": {"steps": ["Assign interface to zone using CLI/API call ", "Verify interface assigned to zone using show command"], "testname": "Test Zone Interface Assignment", "objective": "Validate interfaces assigned to zones successfully"}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 82, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_interface_assignment", "test_name": "test_zone_interface_assignment", "objective": "Validate interfaces assigned to zones successfully", "customer": 3, "product": 5, "data": {"script": "\"\"\"Python script to assign interface to zone and verify\"\"\"", "testname": "Test Zone Interface Assignment ", "file_name": "test_zone_int_assign.py", "objective": "Validate interfaces assigned to zones successfully", "run_command": "python test_zone_int_assign.py", "init_scripts": "\"\"\"pip install required packages\"\"\"", "expected_result": "Interface assigned to zone and verified successfully"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 83, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_based_firewall_rules", "test_name": "test_zone_based_firewall_rules", "objective": "Validate that zone based firewall rules are applied correctly between zones", "customer": 3, "product": 5, "data": {"steps": ["Create zone A and zone B", "Create firewall rule to allow HTTP traffic from zone A to zone B", "Verify HTTP traffic is allowed from zone A to zone B", "Create firewall rule to deny SMTP traffic from zone A to zone B", "Verify SMTP traffic is blocked from zone A to zone B"], "testdata": {"zoneA": "10.1.1.0/24", "zoneB": "10.1.2.0/24"}, "testname": "Test Zone Based Firewall Rules", "objective": "Validate that zone based firewall rules are applied correctly between zones"}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 84, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_based_firewall_rules", "test_name": "test_zone_based_firewall_rules", "objective": "Validate that zone based firewall rules are applied correctly between zones", "customer": 3, "product": 5, "data": {"script": "\n        import requests\n        \n        ZONE_A = \"10.1.1.0/24\"\n        ZONE_B = \"10.1.2.0/24\"\n        \n        # Create zones\n        create_zone(ZONE_A, \"zoneA\") \n        create_zone(ZONE_B, \"zoneB\")\n        \n        # Create allow HTTP rule\n        create_rule(\"zoneA\", \"zoneB\", \"allow\", \"tcp/80\") \n        \n        # Test HTTP traffic \n        assert send_http_request(ZONE_A, ZONE_B) == True \n        \n        # Create deny SMTP rule\n        create_rule(\"zoneA\", \"zoneB\", \"deny\", \"tcp/25\")\n        \n        # Test SMTP traffic\n        assert send_smtp_request(ZONE_A, ZONE_B) == False\n      ", "testname": "Test Zone Based Firewall Rules", "file_name": "test_zbfw_rules.py", "objective": "Validate that zone based firewall rules are applied correctly between zones", "run_command": "python test_zbfw_rules.py", "init_scripts": "pip install requests", "expected_result": "All assertions should pass"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 85, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_based_firewall_address_objects", "test_name": "test_zone_based_firewall_address_objects", "objective": "Validate zone based firewall rules using address objects", "customer": 3, "product": 5, "data": {"steps": ["Create zone A and zone B", "Create address object for subnet in zone A", "Create address object for server in zone B", "Create firewall rule to allow HTTP traffic from zone A address object to zone B address object", "Verify HTTP traffic allowed from zone A address object to zone B address object", "Update address object for zone B to new IP, verify HTTP traffic now blocked"], "testdata": {"zoneA": "10.1.1.0/24", "zoneB": "10.1.2.0/24", "server": "10.1.2.50"}, "testname": "Test Zone Based Firewall Address Objects", "objective": "Validate zone based firewall rules using address objects"}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 86, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_based_firewall_address_objects", "test_name": "test_zone_based_firewall_address_objects", "objective": "Validate zone based firewall rules using address objects", "customer": 3, "product": 5, "data": {"script": "\n        import requests\n        \n        ZONE_A = \"10.1.1.0/24\"  \n        ZONE_B = \"10.1.2.0/24\"\n        SERVER = \"10.1.2.50\"\n        \n        # Create zones \n        create_zone(ZONE_A, \"zoneA\")\n        create_zone(ZONE_B, \"zoneB\")\n        \n        # Create address objects\n        create_object(\"zoneA_subnet\", ZONE_A) \n        create_object(\"server\", SERVER)\n        \n        # Create allow rule \n        create_rule(\"zoneA_subnet\", \"server\", \"allow\", \"tcp/80\")  \n        \n        # Verify traffic allowed\n        assert send_http_request(ZONE_A, SERVER) == True\n        \n        # Update server address object\n        update_object(\"server\", \"10.1.2.60\") \n        \n        # Verify traffic now blocked\n        assert send_http_request(ZONE_A, SERVER) == False\n      ", "testname": "Test Zone Based Firewall Address Objects", "file_name": "test_zbfw_objects.py", "objective": "Validate zone based firewall rules using address objects", "run_command": "python test_zbfw_objects.py", "init_scripts": "pip install requests", "expected_result": "All assertions should pass"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 87, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_creation", "test_name": "test_zone_creation", "objective": "Verify zones can be created", "customer": 3, "product": 5, "data": {"steps": ["Create new zone", "Verify zone exists in configuration"], "testname": "Test Zone Creation", "objective": "Verify zones can be created", "test_data": {"zone_name": "ZONE1"}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 88, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_creation", "test_name": "test_zone_creation", "objective": "Verify zones can be created", "customer": 3, "product": 5, "data": {"script": "\n        import pexpect\n        \n        def create_zone(zone_name):\n          child = pexpect.spawn('cli')\n          child.expect('>')\n          child.sendline('configure')\n          child.expect('#')\n          child.sendline('security zones security-zone ' + zone_name)\n          child.expect('#')\n        \n        def verify_zone_exists(zone_name):\n          child = pexpect.spawn('cli')\n          child.expect('#') \n          child.sendline('show configuration security zones') \n          child.expect(zone_name)\n          \n        create_zone('ZONE1')\n        verify_zone_exists('ZONE1')\n      ", "testname": "Test Zone Creation", "file_name": "test_zone_creation.py", "objective": "Verify zones can be created", "run_command": "python test_zone_creation.py", "init_scripts": ["pip install pexpect"], "expected_result": "ZONE1 is configured"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 89, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_interface_assignment", "test_name": "test_zone_interface_assignment", "objective": "Verify interfaces can be assigned to zones", "customer": 3, "product": 5, "data": {"steps": ["Create new zone", "Assign interface to zone", "Verify interface assignment"], "testname": "Test Zone Interface Assignment", "objective": "Verify interfaces can be assigned to zones", "test_data": {"zone_name": "ZONE2", "interface_name": "ge-0/0/1"}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 90, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_interface_assignment", "test_name": "test_zone_interface_assignment", "objective": "Verify interfaces can be assigned to zones", "customer": 3, "product": 5, "data": {"script": " \n        import pexpect\n        \n        def create_zone(zone_name):\n          # zone creation logic\n          \n        def assign_interface(zone_name, interface_name):\n          # assignment logic\n          \n        def verify_interface_assignment(zone_name, interface_name):\n          # verification logic\n          \n        create_zone('ZONE2') \n        assign_interface('ZONE2', 'ge-0/0/1')\n        verify_interface_assignment('ZONE2', 'ge-0/0/1')\n      ", "testname": "Test Zone Interface Assignment", "file_name": "test_zone_interface_assign.py", "objective": "Verify interfaces can be assigned to zones", "run_command": "python test_zone_interface_assign.py", "init_scripts": ["pip install pexpect"], "expected_result": "ge-0/0/1 assigned to ZONE2"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 91, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_timeout", "test_name": "test_bootup_timeout", "objective": "Validate that the router boots up within the expected timeout period", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Note start time", "Verify router interfaces are accessible within 300 seconds"], "testname": "Test Bootup Timeout", "objective": "Validate that the router boots up within the expected timeout period", "test_data": {"timeout": 300}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 92, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_timeout", "test_name": "test_bootup_timeout", "objective": "Validate bootup time meets requirements", "customer": 3, "product": 5, "data": {"script": "\n            start = time.time()\n            # Code to power on router\n            \n            end = time.time()\n            duration = end - start\n            \n            assert duration <= 300\n        ", "testname": "Test Bootup Timeout", "file_name": "test_bootup_timeout.py", "objective": "Validate bootup time meets requirements", "run_command": "python test_bootup_timeout.py", "init_scripts": "import time", "expected_result": "Script executes without any AssertionError"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 93, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_config_load_", "test_name": "test_bootup_config_load_", "objective": "Validate configuration loaded on bootup ", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Verify running configuration matches startup configuration"], "testname": "Test Bootup Config Load ", "objective": "Validate configuration loaded on bootup ", "test_data": {"startup_config": "startup_config.txt"}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 94, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_config_load_", "test_name": "test_bootup_config_load_", "objective": "Validate configuration loaded properly on bootup", "customer": 3, "product": 5, "data": {"script": "\n            with open(\"startup_config.txt\") as f:\n                startup_config = f.read()\n                \n            running_config = get_running_config()\n            \n            assert startup_config == running_config\n        ", "testname": "Test Bootup Config Load", "file_name": "test_bootup_config.py", "objective": "Validate configuration loaded properly on bootup", "run_command": "python test_bootup_config.py", "init_scripts": "import json", "expected_result": "Script executes without any AssertionError"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 95, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_unit_test_1:_check_bootup_time_and_check_configuration", "test_name": "unit_test_1:_check_bootup_time_and_check_configuration", "objective": "Verify that the router boots up within expected time and has correct configuration loaded", "customer": 3, "product": 5, "data": {"steps": ["1. Power on the router", "2. Note down the time when powering on is initiated", "3. Note down the time when router is fully booted up", "4. Verify bootup time is less than 5 minutes", "5. Check running configuration and verify hardware details"], "testname": "Unit Test 1: Check Bootup time and check configuration", "objective": "Verify that the router boots up within expected time and has correct configuration loaded", "test_data": ["Expected bootup time: Less than 5 minutes", "Expected hardware: ISR 4321"]}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 96, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_unit_test_1:_check_bootup_time_and_check_configuration", "test_name": "unit_test_1:_check_bootup_time_and_check_configuration", "objective": "Check router ISR 4321 boot up time", "customer": 3, "product": 5, "data": {"script": "\n                import paramiko\n                import time\n                import sys\n                import re\n\n                IP = \"10.10.10.10\"\n                USERNAME = \"user1\" \n                PASSWORD = \"mypassword\"\n\n                ssh_client = paramiko.SSHClient()              \n                ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n                start_time = time.time()\n\n                print(f\"Initiating connection to {IP} at time: {start_time}\")\n\n                ssh_client.connect(hostname=IP, username=USERNAME, password=PASSWORD)\n                print(f\"Connection established\")\n\n                bootup_time =  time.time() - start_time   \n\n                if bootup_time < 300.0:\n                    print(f\"SUCCESS: Router bootup time: {bootup_time:.2f} sec\")\n                else:\n                    print(f\"FAILURE: Router bootup time exceeded 300 sec\") \n\n                stdin, stdout, stderr = ssh_client.exec_command(\"show version\")  \n                result = stdout.read().decode()\n\n                print(f\"Version information:\n{result}\")\n            \n                ssh_client.close()\n            ", "testname": "Unit Test 1 Check Bootup time and config test script", "file_name": "test_bootup_time.py", "objective": "Check router ISR 4321 boot up time", "run_command": "python test_bootup_time.py", "init_scripts": ["pip install paramiko"], "expected_result": "Prints boot up time and verifies it is under 5 minutes. Prints version information from device"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 97, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_unit_test_2:_verify_interfaces_configuration", "test_name": "unit_test_2:_verify_interfaces_configuration", "objective": "Verify router interfaces details as per expected configuration", "customer": 3, "product": 5, "data": {"steps": ["1. Establish SSH connection to router", "2. Execute 'show ip interface brief' command ", "3. Verify details for interfaces: GigabitEthernet0/0/0, GigabitEthernet0/0/1 match expected config", "4. Verify their operational status is Up"], "testname": "Unit Test 2: Verify interfaces configuration", "objective": "Verify router interfaces details as per expected configuration", "test_data": ["Expected interface config", "GigabitEthernet0/0/0: 192.168.1.1", "GigabitEthernet0/0/1: 10.10.10.1"]}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 98, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_unit_test_2:_verify_interfaces_configuration", "test_name": "unit_test_2:_verify_interfaces_configuration", "objective": "Verify ISR 4321 interfaces config", "customer": 3, "product": 5, "data": {"script": " \n                import paramiko\n                import sys              \n\n                IP = \"10.10.10.10\"\n                USERNAME = \"user1\"\n                PASSWORD = \"mypassword\"\n\n                ssh_client = paramiko.SSHClient()              \n                ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n\n                ssh_client.connect(hostname=IP, username=USERNAME, password=PASSWORD)\n                \n                stdin, stdout, stderr = ssh_client.exec_command(\"show ip interface brief\")  \n                result = stdout.read().decode()\n\n                interfaces = []\n                status_valid = True\n\n                for line in result.split(\"\\n\"):\n                    if \"GigabitEthernet0/0/0\" in line:\n                        interfaces.append(line.split())                        \n\n                    if \"GigabitEthernet0/0/1\" in line:\n                        interfaces.append(line.split())\n\n                for interface in interfaces:\n                    if interface[0] == \"GigabitEthernet0/0/0\" and interface[1] != \"192.168.1.1\":\n                        status_valid = False\n                        print(f\"FAILURE: Incorrect IP for {interface[0]}\")\n                    \n                    if interface[0] == \"GigabitEthernet0/0/1\" and interface[1] != \"10.10.10.1\":    \n                        status_valid = False\n                        print(f\"FAILURE: Incorrect IP for {interface[0]}\")        \n\n                    if interface[4] != \"Up\":  \n                        status_valid = False       \n                        print(f\"FAILURE: Interface {interface[0]} status Down\")                       \n\n                if status_valid: \n                    print(\"SUCCESS: Interface config and status verified\")\n\n                ssh_client.close()\n            ", "testname": "Unit Test 2 Verify Interfaces test script", "file_name": "test_interface_config.py", "objective": "Verify ISR 4321 interfaces config", "run_command": "python test_interface_config.py", "init_scripts": ["pip install paramiko"], "expected_result": "Prints interface configuration details from device. Verifies IPs of interfaces match expected values. Verifies operational status of interfaces is Up."}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 99, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate that the MX480 goes through the expected bootup sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on the MX480", "Validate fans spin up", "Validate power LED turns green", "Validate bootup messages on console", "Validate login prompt is displayed"], "testname": "Test Bootup Sequence", "objective": "Validate that the MX480 goes through the expected bootup sequence"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 100, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate MX480 bootup sequence", "customer": 3, "product": 5, "data": {"script": "\n        import paramiko\n        \n        ip = \"10.1.1.1\"\n        username = \"admin\" \n        password = \"Juniper123\"\n        \n        ssh = paramiko.SSHClient()\n        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        ssh.connect(ip, username=username, password=password)\n        \n        stdin, stdout, stderr = ssh.exec_command(\"show chassis environment\")  \n        fans_output = stdout.read()\n        assert \"Fans OK\" in fans_output\n        \n        stdin, stdout, stderr = ssh.exec_command(\"show chassis led\")\n        led_output = stdout.read()\n        assert \"Green - Power on\" in led_output \n      ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Script to validate MX480 bootup sequence", "run_command": "python test_bootup.py", "init_scripts": "pip install paramiko", "expected_result": "All assertions should pass, validating bootup sequence"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 101, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_login", "test_name": "test_login", "objective": "Validate login with valid and invalid credentials", "customer": 3, "product": 5, "data": {"steps": ["Attempt login with valid credentials", "Attempt login with invalid credentials"], "testname": "Test Login", "objective": "Validate login with valid and invalid credentials"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 102, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_login", "test_name": "test_login", "objective": "Script to validate login", "customer": 3, "product": 5, "data": {"script": " \n        import paramiko\n        \n        ip = \"10.1.1.1\"\n        valid_username = \"admin\"\n        valid_password = \"Juniper123\"\n        invalid_username = \"fakeuser\"\n        invalid_password = \"fakepass\"\n        \n        ssh = paramiko.SSHClient()\n        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        \n        try:\n          ssh.connect(ip, username=valid_username, password=valid_password)\n          print(\"Login with valid credentials passed\")\n        except Exception as e:\n          print(\"Login with valid credentials failed\")\n          \n        try:\n          ssh.connect(ip, username=invalid_username, password=invalid_password)\n        except Exception as e:  \n          print(\"Login with invalid credentials passed\")\n        else:\n          print(\"Login with invalid credentials failed\")\n      ", "testname": "Test Login", "file_name": "test_login.py", "objective": "Script to validate login", "run_command": "python test_login.py", "init_scripts": "pip install paramiko", "expected_result": "Login with valid credentials passed\nLogin with invalid credentials passed"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 103, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_cli_access", "test_name": "test_bootup_cli_access", "objective": "Verify CLI access is available after bootup completes", "customer": 3, "product": 5, "data": {"steps": ["1. Power on the MX480 router", "2. Wait for bootup process to complete", "3. Use console cable to connect to CLI", "4. Login to CLI using valid credentials", "5. Verify login is successful and router# prompt displays"], "testname": "Test Bootup CLI Access", "objective": "Verify CLI access is available after bootup completes", "test_data": {"password": "admin123", "username": "admin"}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 104, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_cli_access", "test_name": "test_bootup_cli_access", "objective": "Verify CLI access after bootup using paramiko", "customer": 3, "product": 5, "data": {"script": "\n                import paramiko\n                import time\n                \n                IP = \"192.168.1.1\"\n                PORT = 22\n                USERNAME = \"admin\"\n                PASSWORD = \"admin123\"\n                \n                ssh = paramiko.SSHClient()\n                ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n                \n                print(\"Initiating connection to router\")\n                ssh.connect(IP, port=PORT, username=USERNAME, password=PASSWORD)\n                time.sleep(20)\n                \n                stdin, stdout, stderr = ssh.exec_command(\"show version\")\n                lines = stdout.readlines()\n                \n                if lines[-1].endswith(\"router#\"):\n                    print(\"Login successful\")\n                else:\n                    print(\"Login failed\")\n                    \n                ssh.close()\n            ", "testname": "Test Bootup CLI Access", "file_name": "test_bootup_cli_access.py", "objective": "Verify CLI access after bootup using paramiko", "run_command": "python test_bootup_cli_access.py", "init_scripts": "pip install paramiko", "expected_result": "Login successful"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 105, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_syslog_", "test_name": "test_bootup_syslog_", "objective": "Verify bootup logs are collected in syslog file", "customer": 3, "product": 5, "data": {"steps": ["1. Clear existing syslog file on MX480", "2. Power on the MX480 router", "3. Wait for bootup process to complete ", "4. Check syslog file for bootup logs"], "testname": "Test Bootup Syslog ", "objective": "Verify bootup logs are collected in syslog file", "test_data": {}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 106, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_syslog_", "test_name": "test_bootup_syslog_", "objective": "Check for bootup logs in syslog using Python", "customer": 3, "product": 5, "data": {"script": "\n                import paramiko\n                import re\n                \n                IP = \"192.168.1.1\"\n                PORT = 22\n                USERNAME = \"admin\"\n                PASSWORD = \"admin123\"\n                \n                bootup_logs = [\"Starting kernel\", \"Initializing cgroup subsys cpuset\",\n                               \"Initializing cgroup subsys cpu\", \"Loading /boot/vmlinuz-3.10.0-957.el7.x86_64\"]\n                \n                ssh = paramiko.SSHClient()\n                ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n                ssh.connect(IP, port=PORT, username=USERNAME, password=PASSWORD)\n                \n                stdin, stdout, stderr = ssh.exec_command(\"cat /var/log/messages\")\n                lines = stdout.readlines()\n                \n                found = []\n                for line in lines:\n                    for log in bootup_logs:\n                        if re.search(log, line):\n                            found.append(log)\n                \n                if set(found) == set(bootup_logs):\n                    print(\"All bootup logs found\")\n                else:\n                    print(\"Some bootup logs missing\")\n                    \n                ssh.close()\n             ", "testname": "Test Bootup Syslog", "file_name": "test_bootup_syslog.py", "objective": "Check for bootup logs in syslog using Python", "run_command": "python test_bootup_syslog.py", "init_scripts": "pip install paramiko", "expected_result": "All bootup logs found"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 107, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate that the router goes through the correct bootup sequence", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Verify POST completes successfully", "Verify boot loader is loaded", "Verify IOS image is loaded successfully", "Verify router transitions to privileged EXEC mode"], "testname": "Test Bootup Sequence", "objective": "Validate that the router goes through the correct bootup sequence", "test_data": {"ios_image": "isr4300-universalk9.16.06.01.SPA.bin", "router_model": "ISR 4321"}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 108, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Automate validation of bootup sequence", "customer": 3, "product": 5, "data": {"script": "\n        import pexpect\n        \n        ROUTER_IP = \"192.168.1.1\"\n        ROUTER_USERNAME = \"admin\"\n        ROUTER_PASSWORD = \"Cisco123\"\n        \n        router = pexpect.spawn(f\"ssh {ROUTER_USERNAME}@{ROUTER_IP}\")\n        router.expect(\"Password:\")\n        router.sendline(ROUTER_PASSWORD)\n        \n        router.expect(\"#\")\n        router.sendline(\"show version\")\n        version_output = router.before\n        \n        assert \"Cisco IOS XE Software\" in version_output\n        assert \"ISR4321\" in version_output\n      ", "testname": "Test Bootup Sequence", "file_name": "test_bootup.py", "objective": "Automate validation of bootup sequence", "run_command": "python test_bootup.py", "init_scripts": ["pip install pexpect"], "expected_result": "Both assertions should pass, indicating successful bootup"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 109, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_hardware_inventory", "test_name": "test_hardware_inventory", "objective": "Validate hardware components detected accurately after bootup", "customer": 3, "product": 5, "data": {"steps": ["Power on the router", "Verify POST completes successfully", "Execute 'show inventory' command", "Verify CPU, RAM, flash and interfaces are listed correctly"], "testname": "Test Hardware Inventory", "objective": "Validate hardware components detected accurately after bootup", "test_data": {"cpu": "1RU A900MHz", "ram": "8GB", "flash": "8GB", "interfaces": ["GigabitEthernet0/0", "GigabitEthernet0/1"], "router_model": "ISR 4321"}}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 110, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_hardware_inventory", "test_name": "test_hardware_inventory", "objective": "Automate validation of hardware inventory", "customer": 3, "product": 5, "data": {"script": "\n        import re\n        import pexpect\n        \n        ROUTER_IP = \"192.168.1.1\"\n        ROUTER_USERNAME = \"admin\"\n        ROUTER_PASSWORD = \"Cisco123\"\n        \n        router = pexpect.spawn(f\"ssh {ROUTER_USERNAME}@{ROUTER_IP}\") \n        router.expect(\"Password:\")\n        router.sendline(ROUTER_PASSWORD)\n        \n        router.expect(\"#\")\n        router.sendline(\"show inventory\")\n        inventory_output = router.before\n        \n        assert re.search(\"1RU A900MHz\", inventory_output)\n        assert re.search(\"8GB\", inventory_output) \n        assert re.search(\"flash:(8|16)GB\", inventory_output)\n        assert re.search(\"GigabitEthernet0/0\", inventory_output)\n        assert re.search(\"GigabitEthernet0/1\", inventory_output)\n      ", "testname": "Test Hardware Inventory", "file_name": "test_inventory.py", "objective": "Automate validation of hardware inventory", "run_command": "python test_inventory.py", "init_scripts": ["pip install pexpect"], "expected_result": "All assertions should pass, indicating hardware inventory captured correctly"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 111, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Validate bootup sequence and ensure device reaches operational state", "customer": 3, "product": 5, "data": {"steps": ["Power on device", "Validate boot messages", "Validate successful loading of configuration", "Validate interfaces are operationally up"], "testname": "Test Bootup Sequence", "objective": "Validate bootup sequence and ensure device reaches operational state"}, "test_category": 102, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 112, "fields": {"test_id": "juniper_unit_test_bootup_process_mx480_test_bootup_sequence", "test_name": "test_bootup_sequence", "objective": "Script to validate bootup sequence", "customer": 3, "product": 5, "data": {"script": "\n    import paramiko\n    \n    client = paramiko.SSHClient()\n    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    client.connect(\"192.168.0.1\")\n    \n    stdin, stdout, stderr = client.exec_command(\"show version\")\n    out = stdout.read()\n    assert \"Junos version\" in out\n    \n    stdin, stdout, stderr = client.exec_command(\"show configuration failed\") \n    out = stdout.read()\n    assert \"error: configuration check-out failed\" not in out\n    \n    for intf in [\"ge-0/0/0\", \"ge-0/0/1\"]:\n      stdin, stdout, stderr = client.exec_command(f\"show interfaces {intf} | match Link\")  \n      out = stdout.read()\n      assert \"Up\" in out\n  ", "filename": "test_bootup.py", "testname": "Test Bootup Sequence", "objective": "Script to validate bootup sequence", "run_command": "python test_bootup.py", "init_scripts": ["pip install paramiko"], "expected_result": "All asserts should pass, validating successful bootup"}, "test_category": 102, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 113, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_interface", "test_name": "test_zone_interface", "objective": "Verify interfaces are assigned to zones correctly", "customer": 3, "product": 5, "data": {"steps": ["Verify interfaces fe-1/2/0 and fe-1/2/1 are assigned to untrust zone", "Verify interfaces fe-1/0/0 and fe-1/0/1 are assigned to trust zone"], "testname": "Test Zone Interface", "objective": "Verify interfaces are assigned to zones correctly", "test_data": {"zones": ["trust", "untrust"], "interfaces": ["fe-1/0/0", "fe-1/0/1", "fe-1/2/0", "fe-1/2/1"]}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 114, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_interface", "test_name": "test_zone_interface", "objective": "Verify interfaces are assigned to zones correctly", "customer": 3, "product": 5, "data": {"script": "\n            import json\n\n            zones = [\"trust\", \"untrust\"]\n            interfaces = {\"trust\": [\"fe-1/0/0\", \"fe-1/0/1\"], \"untrust\": [\"fe-1/2/0\", \"fe-1/2/1\"]}\n\n            def test_zone_interface():\n              for zone in zones:\n                for interface in interfaces[zone]:\n                  # Check interface is assigned to correct zone\n                  assert interface in interfaces[zone]  \n              print(\"All interfaces assigned correctly\")\n\n            if __name__ == \"__main__\":\n              test_zone_interface()\n            ", "testname": "Test Zone Interface", "file_name": "test_zone_interface.py", "objective": "Verify interfaces are assigned to zones correctly", "run_command": "python test_zone_interface.py", "init_scripts": "import json", "expected_result": "All interfaces assigned correctly"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 115, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_firewall_rules", "test_name": "test_firewall_rules", "objective": "Validate firewall rules between zones", "customer": 3, "product": 5, "data": {"steps": ["Ping from trust zone interface fe-1/0/0 to untrust zone interface fe-1/2/0 should fail", "SSH from trust zone interface fe-1/0/1 to untrust zone interface fe-1/2/1 should fail"], "testname": "Test Firewall Rules", "objective": "Validate firewall rules between zones", "test_data": {"zones": ["trust", "untrust"], "interfaces": {"trust": ["fe-1/0/0", "fe-1/0/1"], "untrust": ["fe-1/2/0", "fe-1/2/1"]}}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 116, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_firewall_rules", "test_name": "test_firewall_rules", "objective": "Validate firewall rules between zones", "customer": 3, "product": 5, "data": {"script": "\n        import subprocess\n\n        trust_interfaces = [\"fe-1/0/0\", \"fe-1/0/1\"]  \n        untrust_interfaces = [\"fe-1/2/0\", \"fe-1/2/1\"]\n\n        def test_firewall_rules():\n          for trust_int in trust_interfaces:\n            for untrust_int in untrust_interfaces: \n              ping_result = subprocess.run(f\"ping {untrust_int} -I {trust_int}\", shell=True)  \n              assert ping_result.returncode != 0\n              print(f\"Ping from {trust_int} to {untrust_int} blocked as expected\")\n\n              ssh_result = subprocess.run(f\"ssh {untrust_int} -I {trust_int}\", shell=True)\n              assert ssh_result.returncode != 0  \n              print(f\"SSH from {trust_int} to {untrust_int} blocked as expected\")\n\n        if __name__ == \"__main__\":\n            test_firewall_rules()\n        ", "testname": "Test Firewall Rules", "file_name": "test_firewall_rules.py", "objective": "Validate firewall rules between zones", "run_command": "python test_firewall_rules.py", "init_scripts": "import subprocess", "expected_result": "Ping from fe-1/0/0 to fe-1/2/0 blocked as expected\nPing from fe-1/0/0 to fe-1/2/1 blocked as expected\nPing from fe-1/0/1 to fe-1/2/0 blocked as expected\nPing from fe-1/0/1 to fe-1/2/1 blocked as expected\nSSH from fe-1/0/0 to fe-1/2/0 blocked as expected\nSSH from fe-1/0/0 to fe-1/2/1 blocked as expected\nSSH from fe-1/0/1 to fe-1/2/0 blocked as expected\nSSH from fe-1/0/1 to fe-1/2/1 blocked as expected"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 117, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_acls", "test_name": "test_zone-based_firewall_acls", "objective": "Validate that ACLs applied in different zones are working as expected", "customer": 3, "product": 5, "data": {"steps": ["Configure zone-based firewall with 3 zones: Outside, Inside and DMZ", "Apply ACL to allow HTTP traffic from Outside to DMZ zone web servers", "Verify Inside hosts can reach DMZ web servers over HTTP", "Verify Outside hosts can reach DMZ web servers over HTTP", "Verify DMZ hosts cannot initiate connections to Inside zone"], "testname": "Test zone-based firewall ACLs", "objective": "Validate that ACLs applied in different zones are working as expected", "test_data": {"dmz_network": "172.16.1.0/24", "inside_network": "10.1.1.0/24", "outside_network": "192.168.1.0/24"}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 118, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_acls", "test_name": "test_zone-based_firewall_acls", "objective": "Validate ACLs applied in different firewall zones", "customer": 3, "product": 5, "data": {"script": "\n        import netmiko\n        from ipaddress import IPv4Network\n        \n        outside_net = IPv4Network('192.168.1.0/24')\n        inside_net = IPv4Network('10.1.1.0/24')\n        dmz_net = IPv4Network('172.16.1.0/24')\n                \n        conn = netmiko.ConnectHandler(ip='192.168.1.1', device_type='cisco_ios')\n        \n        # Apply ACL\n        conn.send_config_set(['ip access-list extended ALLOW-HTTP', \n            'permit tcp any 172.16.1.0 0.0.0.255 eq 80'])\n        conn.send_config_set(['zone security Outside', \n            'exit', \n            'zone security DMZ', \n            'exit',\n            'zone-pair security IN-TO-DMZ source Inside destination DMZ', \n            'service-policy type inspect DMZ-ACL'])\n            \n        # Verify connectivity\n        print(conn.send_command('show access-lists'))\n        print(conn.send_command('ping 172.16.1.1 source 10.1.1.2')) \n        print(conn.send_command('ping 172.16.1.1 source 192.168.1.2'))\n    ", "testname": "Test zone-based firewall ACLs", "file_name": "test_fw_acls.py", "objective": "Validate ACLs applied in different firewall zones", "run_command": "python test_fw_acls.py", "init_scripts": ["pip install netmiko", "pip install ipaddress"], "expected_result": "HTTP traffic allowed from Outside network to DMZ web servers. Inside network can reach DMZ web servers. DMZ network isolated from Inside network."}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 119, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_firewall_application_inspection", "test_name": "test_firewall_application_inspection", "objective": "Validate application layer protocol inspection in zone firewall", "customer": 3, "product": 5, "data": {"steps": ["Configure HTTP inspection policy on Inside to DMZ zone firewall", "Verify accessing web server from Inside zone passes traffic inspection", "Disable HTTP inspection on Inside to DMZ zone firewall", "Verify web server access from Inside zone fails without inspection"], "testname": "Test firewall application inspection", "objective": "Validate application layer protocol inspection in zone firewall", "test_data": {"dmz_network": "172.16.1.0/24", "dmz_web_server": "172.16.1.100", "inside_network": "10.1.1.0/24"}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 120, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_firewall_application_inspection", "test_name": "test_firewall_application_inspection", "objective": "Validate zone firewall application inspection", "customer": 3, "product": 5, "data": {"script": "\n        import netmiko\n        \n        inside_net = '10.1.1.0/24'\n        dmz_net = '172.16.1.0/24'\n        web_server = '172.16.1.100'\n        \n        conn = netmiko.ConnectHandler(ip='192.168.1.1')\n        \n        # Configure and verify inspection policy\n        conn.send_config_set(['policy-map type inspect http INSPECT-HTTP',\n            'exit',\n            'zone security Inside',\n            'exit',\n            'zone security DMZ',\n            'service-policy type inspect INSPECT-HTTP'])\n        print(conn.send_command('show policy-map type inspect zone-pair'))\n        \n        # Verify web server access\n        print(conn.send_command('ping '+web_server+' source 10.1.1.2'))\n        \n        # Disable and verify failed access \n        conn.send_config_set(['no service-policy inspect INSPECT-HTTP'])\n        print(conn.send_command('show policy-map type inspect zone-pair'))\n        print(conn.send_command('ping '+web_server+' source 10.1.1.2'))\n      ", "testname": "Test firewall application inspection", "file_name": "test_app_inspect.py", "objective": "Validate zone firewall application inspection", "run_command": "python test_app_inspect.py", "init_scripts": ["pip install netmiko"], "expected_result": "HTTP inspection enabled and traffic allowed from Inside network to DMZ web server. Traffic fails when HTTP inspection disabled."}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 121, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_creation", "test_name": "test_zone_creation", "objective": "Validate creation of security zones", "customer": 3, "product": 5, "data": {"steps": ["Create zones ZONE_TRUST and ZONE_UNTRUST", "Verify zones are created successfully"], "testname": "Test Zone Creation", "objective": "Validate creation of security zones", "test_data": {"zones": [{"name": "ZONE_TRUST", "interfaces": ["ge-0/0/1"]}, {"name": "ZONE_UNTRUST", "interfaces": ["ge-0/0/2"]}]}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 122, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_creation", "test_name": "test_zone_creation", "objective": "Automate zone creation test case", "customer": 3, "product": 5, "data": {"script": "\n        import jnpr.junos  \n        import json\n                \n        zones = ''' + json.dumps(test_data[\"zones\"]) + '''  \n                \n        dev = Device(host='192.168.1.1', user='testuser', password='test123') \n        dev.open()\n                \n        for zone in zones:\n          dev.cu.load(zone, format=\"json\")\n          \n        dev.close()\n      ", "testname": "Test Zone Creation", "file_name": "test_zones.py", "objective": "Automate zone creation test case", "run_command": "python test_zones.py", "init_scripts": ["pip install jnpr.junos", "pip install json"], "expected_result": "Zones created successfully"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 123, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_security_policy_creation", "test_name": "test_security_policy_creation", "objective": "Validate creation of security policies", "customer": 3, "product": 5, "data": {"steps": ["Create security policy to allow HTTP traffic from ZONE_TRUST to ZONE_UNTRUST"], "testname": "Test Security Policy Creation", "objective": "Validate creation of security policies", "test_data": {"policies": [{"name": "HTTP", "source-zone": "ZONE_TRUST", "applications": ["junos-http"], "destination-zone": "ZONE_UNTRUST"}]}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 124, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_security_policy_creation", "test_name": "test_security_policy_creation", "objective": "Automate security policy creation test case", "customer": 3, "product": 5, "data": {"script": "  \n        import jnpr.junos\n        import json\n        \n        policies = ''' + json.dumps(test_data[\"policies\"]) + '''\n        \n        dev = Device(host='192.168.1.1', user='testuser', password='test123')\n        dev.open()\n        \n        for policy in policies:\n          dev.cu.load(policy, format=\"json\")\n          \n        dev.close()\n      ", "testname": "Test Security Policy Creation", "file_name": "test_policies.py", "objective": "Automate security policy creation test case", "run_command": "python test_policies.py", "init_scripts": ["pip install jnpr.junos", "pip install json"], "expected_result": "Security policies created successfully"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 125, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_default_zone", "test_name": "test_zone-based_firewall_default_zone", "objective": "Validate default zone is enabled and has expected configuration", "customer": 3, "product": 5, "data": {"steps": ["Verify default zone exists with name 'trust'", "Verify default zone has icmp protocol enabled", "Verify default zone has ssh protocol enabled"], "testname": "Test Zone-based Firewall Default Zone", "objective": "Validate default zone is enabled and has expected configuration", "test_data": {"default_zone_name": "trust", "enabled_protocols": ["icmp", "ssh"]}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 126, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_default_zone", "test_name": "test_zone-based_firewall_default_zone", "objective": "Validate default zone configuration using PyEZ", "customer": 3, "product": 5, "data": {"script": "\n        import jnpr.junos  \n       \n        dev = jnpr.junos.Device(host='192.168.1.1', user='netconf', password='p@ssw0rd')  \n        dev.open()\n        \n        default_zone = dev.rpc.get_config(filter_xml='<configuration><security><zones><name>trust</name></zones></security></configuration>')\n        \n        assert default_zone.findtext('.//name') == 'trust'\n        assert len(default_zone.findall('.//protocols/protocol')) == 2\n        assert default_zone.find('.//protocols/protocol[name=\"icmp\"]') is not None \n        assert default_zone.find('.//protocols/protocol[name=\"ssh\"]') is not None\n      ", "testname": "Test Zone-based Firewall Default Zone", "file_name": "test_default_zone.py", "objective": "Validate default zone configuration using PyEZ", "run_command": "python test_default_zone.py", "init_scripts": "pip install junos-eznc", "expected_result": "All assertions should pass, validating default zone configuration"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 127, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_new_zone_creation", "test_name": "test_new_zone_creation", "objective": "Validate new zone can be created and configured", "customer": 3, "product": 5, "data": {"steps": ["Configure new zone named 'Guest'", "Add icmp protocol to Guest zone", "Commit configuration", "Verify Guest zone exists", "Verify icmp protocol enabled for Guest zone"], "testname": "Test New Zone Creation", "objective": "Validate new zone can be created and configured", "test_data": {"new_zone_name": "Guest", "new_zone_protocols": ["icmp"]}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 128, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_new_zone_creation", "test_name": "test_new_zone_creation", "objective": "Validate new zone creation using PyEZ", "customer": 3, "product": 5, "data": {"script": "  \n        import jnpr.junos\n        \n        dev = jnpr.junos.Device(host='192.168.1.1', user='netconf', password='p@ssw0rd')\n        dev.open()\n        \n        new_zone_xml = \\<security\\>\n                        \\<zones\\>  \n                          \\<name\\>Guest\\</name\\>\n                          \\<protocols\\>    \n                            \\<protocol\\>\n                              \\<name\\>icmp\\</name\\> \n                            \\</protocol\\>\n                          \\</protocols\\>\n                        \\</zones\\>\n                      \\</security\\>\n\n        dev.cu.load(new_zone_xml, format=\"xml\")\n        \n        new_zone = dev.rpc.get_config(filter_xml='<configuration><security><zones><name>Guest</name></zones></security></configuration>')\n        \n        assert new_zone.findtext('.//name') == 'Guest'\n        assert len(new_zone.findall('.//protocols/protocol')) == 1 \n        assert new_zone.find('.//protocols/protocol[name=\"icmp\"]') is not None\n      ", "testname": "Test New Zone Creation", "file_name": "test_new_zone.py", "objective": "Validate new zone creation using PyEZ", "run_command": "python test_new_zone.py", "init_scripts": "pip install junos-eznc", "expected_result": "All assertions should pass, validating new zone creation and configuration"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 129, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_firewall_rules", "test_name": "test_zone_firewall_rules", "objective": "Validate that zone firewall rules are correctly enforced", "customer": 3, "product": 5, "data": {"steps": ["Create zones trust and untrust", "Create firewall allow rule from trust to untrust", "Verify connectivity from trust to untrust", "Create firewall deny rule from untrust to trust", "Verify no connectivity from untrust to trust"], "testname": "Test Zone Firewall Rules", "objective": "Validate that zone firewall rules are correctly enforced"}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 130, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_firewall_rules", "test_name": "test_zone_firewall_rules", "objective": "Automated script to validate zone firewall rules", "customer": 3, "product": 5, "data": {"script": "\n\t\t\t\timport meraki\n\n\t\t\t\t# Create zones, rules, and test connectivity\n\t\t\t", "testname": "Test Zone Firewall Rules", "file_name": "test_zone_fw.py", "objective": "Automated script to validate zone firewall rules", "run_command": "python test_zone_fw.py", "init_scripts": "pip install meraki", "expected_result": "Connectivity matches expected behavior based on defined rules"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 131, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_bandwidth_rules", "test_name": "test_zone_bandwidth_rules", "objective": "Validate that zone bandwidth rules are correctly enforced", "customer": 3, "product": 5, "data": {"steps": ["Create zones trust and untrust", "Create bandwidth rule limiting untrust to trust to 50 Mbps", "Initiate multiple transfers from untrust to trust", "Verify cumulative transfer rate does not exceed 50 Mbps"], "testname": "Test Zone Bandwidth Rules", "objective": "Validate that zone bandwidth rules are correctly enforced"}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 132, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_bandwidth_rules", "test_name": "test_zone_bandwidth_rules", "objective": "Automated script to validate zone bandwidth rules", "customer": 3, "product": 5, "data": {"script": "\n\t\t\t\timport speedtest\n\t\t\t\t\n\t\t\t\t# Create zones, rules, and test bandwidth\n\t\t\t", "testname": "Test Zone Bandwidth Rules", "file_name": "test_zone_bw.py", "objective": "Automated script to validate zone bandwidth rules", "run_command": "python test_zone_bw.py", "init_scripts": "pip install speedtest-cli", "expected_result": "Cumulative transfer rate does not exceed defined rule"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 133, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_zone_firewall_allow_icmp", "test_name": "zone_firewall_allow_icmp", "objective": "Validate that ICMP traffic is allowed between zones when explicitly permitted by a policy", "customer": 3, "product": 5, "data": {"steps": ["1. Configure zone-based firewall with zone A and zone B", "2. Create firewall policy to allow ICMP from zone A to zone B", "3. Send ICMP traffic from zone A interface to zone B interface", "4. Verify ICMP traffic is successful"], "testdata": {"icmp_type": "echo-request", "zoneA_interface": "ge-0/0/0", "zoneB_interface": "ge-0/0/1"}, "testname": "Zone Firewall Allow ICMP", "objective": "Validate that ICMP traffic is allowed between zones when explicitly permitted by a policy"}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 134, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_zone_firewall_allow_icmp", "test_name": "zone_firewall_allow_icmp", "objective": "Test script to validate ICMP allow firewall policy", "customer": 3, "product": 5, "data": {"script": "\n            import unittest\n            from jnpr.junos import Device\n            from jnpr.junos.exception import ConnectError\n\n            def test_icmp_allowed(dev):\n                # Configure firewall policy\n                dev.cli(\"set firewall...)\n                # Send ICMP traffic from zoneA to zoneB\n                # Use scapy or other packet crafting library\n                # Verify ICMP received successfully\n                \n                assertTrue(icmp_received)\n                \n            class Test_Zone_Firewall(unittest.TestCase):\n\n                def test_icmp_allow_policy(self):\n                    dev = Device(host='1.1.1.1', user='regress', password='MaRtInI')  \n                    dev.open()\n                    test_icmp_allowed(dev)\n                    dev.close()\n                    \n            if __name__ == '__main__':\n                unittest.main()\n        ", "filename": "test_icmp_allow.py", "testname": "Zone Firewall Allow ICMP", "objective": "Test script to validate ICMP allow firewall policy", "run_command": "python test_icmp_allow.py", "init_scripts": ["pip install ipaddr", "pip install jnpr"], "expected_result": "OK"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 135, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_zone_firewall_block_traffic", "test_name": "zone_firewall_block_traffic", "objective": "Validate that traffic between zones with no policy is blocked", "customer": 3, "product": 5, "data": {"steps": ["1. Configure zone A and zone B with zone-based firewall", "2. Send TCP traffic from zone A interface to zone B interface", "3. Verify traffic is blocked"], "testdata": {"zoneA_interface": "ge-0/0/0", "zoneB_interface": "ge-0/0/1"}, "testname": "Zone Firewall Block Traffic", "objective": "Validate that traffic between zones with no policy is blocked"}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 136, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_zone_firewall_block_traffic", "test_name": "zone_firewall_block_traffic", "objective": "Test script to verify traffic is blocked without policy", "customer": 3, "product": 5, "data": {"script": "\n            import unittest\n            from scapy.all import *\n            from jnpr.junos import Device\n\n            def test_traffic_blocked(dev):\n                # Send TCP packet from zoneA to zoneB\n                pkt = IP(src='1.1.1.1', dst='2.2.2.2')/TCP()   \n                send(pkt, iface=dev.zoneA_iface)\n                \n                # Verify no response\n                assertFalse(answered(pkt))\n                \n            class Test_Zone_Firewall(unittest.TestCase):\n\n                def test_blocked_traffic(self):\n                    dev = Device(host='1.1.1.1', user='regress', password='MaRtInI')\n                    dev.open()  \n                    test_traffic_blocked(dev)\n                    dev.close()\n                    \n            if __name__ == '__main__':  \n                unittest.main()   \n        ", "filename": "test_block_traffic.py", "testname": "Zone Firewall Block Traffic", "objective": "Test script to verify traffic is blocked without policy", "run_command": "python test_block_traffic.py", "init_scripts": ["pip install scapy", "pip install jnpr"], "expected_result": "OK"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 137, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_firewall_rule_creation", "test_name": "test_zone_firewall_rule_creation", "objective": "Validate creation of zone firewall rules", "customer": 3, "product": 5, "data": {"steps": ["Create zone firewall rule between zones", "Verify rule creation successful"], "testname": "Test Zone Firewall Rule Creation", "objective": "Validate creation of zone firewall rules", "test_data": {"port": 80, "source": "1.1.1.0/24", "protocol": "tcp", "src_zone": "zone1", "dest_zone": "zone2", "destination": "2.2.2.0/24"}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 138, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_firewall_rule_creation", "test_name": "test_zone_firewall_rule_creation", "objective": "Automate validation of zone firewall rule creation", "customer": 3, "product": 5, "data": {"script": "\nimport json\nfrom jnpr.junos import Device\nfrom jnpr.junos.utils.config import Config\n\n# Test data\ntest_data = json.loads('''{test_data}''')\n\ndev = Device(host='mx480', user='regress', password='MaRtInI') \ndev.open()\n\ncu = Config(dev)\ncu.lock()\n\ncu.load('set firewall family inet filter test-filter term test-term from source-address {source} destination-address {destination} protocol {protocol} port {port}'.format(**test_data), format='set')\n\ncu.commit()\ncu.unlock()\n\ndev.close()\n      ", "testname": "Test Zone Firewall Rule Creation", "file_name": "test_zone_rule_create.py", "objective": "Automate validation of zone firewall rule creation", "run_command": "python test_zone_rule_create.py", "init_scripts": ["pip install juniper-eznc"], "expected_result": "Zone firewall rule created successfully"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 139, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_pair_creation", "test_name": "test_zone_pair_creation", "objective": "Validate creation of zone pair", "customer": 3, "product": 5, "data": {"steps": ["Configure zone pair between zones", "Verify zone pair creation successful"], "testname": "Test Zone Pair Creation", "objective": "Validate creation of zone pair", "test_data": {"src_zone": "zone1", "dest_zone": "zone2"}}, "test_category": 187, "type": "TESTCASE", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 140, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone_pair_creation", "test_name": "test_zone_pair_creation", "objective": "Automate validation of zone pair creation", "customer": 3, "product": 5, "data": {"script": "  \nimport json\nfrom jnpr.junos import Device\nfrom jnpr.junos.utils.config import Config\n\n# Test data  \ntest_data = json.loads('''{test_data}''')\n      \ndev = Device(host='mx480', user='regress', password='MaRtInI')\ndev.open()  \n\ncu = Config(dev)\ncu.lock()\n\ncu.load('set security zones security-zone {src_zone} host-inbound-traffic system-services all set security zones security-zone {src_zone} interfaces ae0.0 host-inbound-traffic protocols all set security zones security-zone {dest_zone} host-inbound-traffic system-services all set security zones security-zone {dest_zone} interfaces ae1.0 host-inbound-traffic protocols all set security policies from-zone {src_zone} to-zone {dest_zone} policy test-policy match source-address any destination-address any application any'.format(**test_data), format='set')\n\ncu.commit()\ncu.unlock()  \n\ndev.close()\n      ", "testname": "Test Zone Pair Creation", "file_name": "test_zone_pair_create.py", "objective": "Automate validation of zone pair creation", "run_command": "python test_zone_pair_create.py", "init_scripts": ["pip install juniper-eznc"], "expected_result": "Zone pair created successfully"}, "test_category": 187, "type": "TESTSCRIPT", "request": "", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 141, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration", "test_name": "test_zone-based_firewall_policy_configuration", "objective": "Validate zone-based firewall policy can be configured with expected rules between zones", "customer": 3, "product": 5, "data": {"steps": ["1. Configure zone-based firewall with test policy between zones", "2. Verify configured policy rules are present as expected"], "testname": "Test Zone-based firewall policy configuration", "objective": "Validate zone-based firewall policy can be configured with expected rules between zones", "test_data": {"zones": ["Z1", "Z2"], "policy_rules": [{"name": "Rule1", "source": "Z1", "destination": "Z2"}]}}, "test_category": 187, "type": "TESTCASE", "request": "ade794c20eb046879ce39c6d4787880f", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 142, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_policy_configuration", "test_name": "test_zone-based_firewall_policy_configuration", "objective": "Validate zone-based firewall policy can be configured with expected rules between zones", "customer": 3, "product": 5, "data": {"script": "\n            import paramiko\n            \n            ZONES = ${json.dumps(zones)}\n            RULES = ${json.dumps(policy_rules)}\n            \n            client = paramiko.SSHClient()\n            client.set_missing_host_key_policy(paramiko.AutoAddPolicy()) \n            client.connect(host, username=user, password=password)\n            \n            for zone in ZONES:\n                cmd = f\"set security zones security-zone {zone}\"\n                stdin, stdout, stderr = client.exec_command(cmd)\n            \n            for rule in RULES:\n                cmd = f\"set security policies from-zone {rule['source']} to-zone {rule['destination']} policy {rule['name']}\"    \n                stdin, stdout, stderr = client.exec_command(cmd)\n                \n            client.close()\n        ", "testname": "Test Zone-based firewall policy configuration", "file_name": "test_zbfw_policy.py", "objective": "Validate zone-based firewall policy can be configured with expected rules between zones", "run_command": "python test_zbfw_policy.py", "init_scripts": "pip install paramiko netmiko", "expected_result": "Zone-based firewall policy configured with defined test rules between zones"}, "test_category": 187, "type": "TESTSCRIPT", "request": "ade794c20eb046879ce39c6d4787880f", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 143, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table", "test_name": "test_zone-based_firewall_session_table", "objective": "Validate session table displays expected sessions based on policy rules", "customer": 3, "product": 5, "data": {"steps": ["1. Configure test traffic between zones", "2. Verify session table displays expected sessions"], "testname": "Test Zone-based firewall session table", "objective": "Validate session table displays expected sessions based on policy rules", "test_data": {"zones": ["Z1", "Z2"], "policy_rules": [{"name": "Rule1", "source": "Z1", "destination": "Z2"}]}}, "test_category": 187, "type": "TESTCASE", "request": "ade794c20eb046879ce39c6d4787880f", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 144, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_zone-based_firewall_session_table", "test_name": "test_zone-based_firewall_session_table", "objective": "Validate session table displays expected sessions based on policy rules", "customer": 3, "product": 5, "data": {"script": "\n            import paramiko\n            \n            ZONES = ${json.dumps(zones)}\n            RULES = ${json.dumps(policy_rules)}\n            \n            client = paramiko.SSHClient()\n            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n            client.connect(host, username=user, password=password)\n            \n            # Configure test traffic between zones\n            \n            cmd = \"show security flow session\"\n            stdin, stdout, stderr = client.exec_command(cmd)\n            sessions = stdout.read()\n            \n            client.close()\n            \n            # Verify expected sessions are present\n        ", "testname": "Test Zone-based firewall session table", "file_name": "test_zbfw_sessions.py", "objective": "Validate session table displays expected sessions based on policy rules", "run_command": "python test_zbfw_sessions.py", "init_scripts": "pip install paramiko", "expected_result": "Session table displays expected sessions based on defined policy rules"}, "test_category": 187, "type": "TESTSCRIPT", "request": "ade794c20eb046879ce39c6d4787880f", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 145, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_validate_zone-based_firewall_configuration", "test_name": "validate_zone-based_firewall_configuration", "objective": "Validate that the zone-based firewall is configured correctly by testing connectivity between zones", "customer": 3, "product": 5, "data": {"steps": ["Set up zones and zone-based firewall policies", "Verify intra-zone connectivity within trust, untrust and mgmt zones", "Verify no connectivity between trust and untrust zones due to firewall policy"], "testname": "Validate Zone-based Firewall Configuration", "objective": "Validate that the zone-based firewall is configured correctly by testing connectivity between zones", "test_data": {"zones": ["trust", "untrust", "mgmt"], "zone_interfaces": {"mgmt": ["fxp0"], "trust": ["ge-0/0/1", "ge-0/0/2"], "untrust": ["ge-0/0/3"]}}}, "test_category": 187, "type": "TESTCASE", "request": "0879a4cfd00c4736b460bb7401917e3d", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 146, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_validate_zone-based_firewall_configuration", "test_name": "validate_zone-based_firewall_configuration", "objective": "Validate zone-based firewall configuration by testing connectivity", "customer": 3, "product": 5, "data": {"script": "\n    import paramiko\n    import jxmlease\n    \n    ZONE_DATA = # Populated test data dictionary\n    \n    client = paramiko.SSHClient()\n    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    client.connect(router_ip, username='pyuser', password='JNPR@123')\n    \n    def test_intrazone_connectivity(zone):\n      interfaces = ZONE_DATA[\"zone_interfaces\"][zone]\n      for intf1 in interfaces:\n        for intf2 in interfaces:\n          ping = client.exec_command(f\"ping {intf2} interface {intf1}\")\n          assert \"!!!!!\" not in ping\n    \n    def test_interzone_connectivity():\n      trust_intfs = ZONE_DATA[\"zone_interfaces\"][\"trust\"]\n      untrust_intfs = ZONE_DATA[\"zone_interfaces\"][\"untrust\"]\n      \n      for t_intf in trust_intfs:\n        for u_intf in untrust_intfs:\n          ping = client.exec_command(f\"ping {u_intf} interface {t_intf}\") \n          assert \"!!!!!\" in ping\n      \n    if __name__ == \"__main__\":\n        test_intrazone_connectivity(\"trust\") \n        test_intrazone_connectivity(\"untrust\")\n        test_intrazone_connectivity(\"mgmt\")\n        \n        test_interzone_connectivity()\n    ", "testname": "Validate Zone-based Firewall Configuration", "file_name": "test_zone_firewall.py", "objective": "Validate zone-based firewall configuration by testing connectivity", "run_command": "python test_zone_firewall.py", "init_scripts": "pip install paramiko jxmlease", "expected_result": "All test cases should pass validating zone connectivity"}, "test_category": 187, "type": "TESTSCRIPT", "request": "0879a4cfd00c4736b460bb7401917e3d", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 147, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_application_firewall_configuration_", "test_name": "test_application_firewall_configuration_", "objective": "Validate application firewall policies are correctly enforced", "customer": 3, "product": 5, "data": {"steps": ["Configure application firewall policies to block certain applications", "Initiate traffic to blocked applications and verify it is dropped"], "testname": "Test Application Firewall Configuration ", "objective": "Validate application firewall policies are correctly enforced", "test_data": {"appfw_policy": "BLOCK-APPS", "blocked_apps": ["gaming", "social-networking"]}}, "test_category": 187, "type": "TESTCASE", "request": "0879a4cfd00c4736b460bb7401917e3d", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 148, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_application_firewall_configuration_", "test_name": "test_application_firewall_configuration_", "objective": "Validate application firewall blocks certain applications", "customer": 3, "product": 5, "data": {"script": "\n    import paramiko\n    import nmap\n    import jxmlease\n    \n    POLICY = # Populated application firewall policy \n    \n    client = paramiko.SSHClient()\n    client.set_missing_host_key_policy(paramiko.AutoAddPolicy()) \n    client.connect(router_ip, username='pyuser', password='JNPR@123')\n    \n    def test_app_blocked(app):\n      traffic = nmap.PortScanner().scan(target, ports=[80, 443])\n      assert traffic[\"stats\"][\"packet_filter\"] == \"dropped\"\n\n    if __name__ == \"__main__\":\n      test_app_blocked(\"gaming\") \n      test_app_blocked(\"social-networking\")\n    ", "testname": "Test Application Firewall Configuration", "file_name": "test_appfw.py", "objective": "Validate application firewall blocks certain applications", "run_command": "python test_appfw.py", "init_scripts": "pip install paramiko nmap jxmlease", "expected_result": "Traffic to blocked apps should be dropped"}, "test_category": 187, "type": "TESTSCRIPT", "request": "0879a4cfd00c4736b460bb7401917e3d", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 149, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_interzone_policies", "test_name": "test_interzone_policies", "objective": "Validate interzone security policies are correctly enforced between zones", "customer": 3, "product": 5, "data": {"steps": ["1. Configure zones A and B with interzone policy to allow traffic from A to B", "2. Verify hosts in zone A can access resources in zone B", "3. Verify hosts in zone B cannot initiate connections to zone A"], "testname": "test_interzone_policies", "objective": "Validate interzone security policies are correctly enforced between zones", "test_data": {"zoneA_network": "192.168.1.0/24", "zoneB_network": "192.168.2.0/24"}}, "test_category": 187, "type": "TESTCASE", "request": "1ad237be0b694ff285837f33e14b88a4", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 150, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_interzone_policies", "test_name": "test_interzone_policies", "objective": "Automated test script to validate interzone policies", "customer": 3, "product": 5, "data": {"script": "\"\"\"\nimport paramiko\n\n# SSH Connect\nclient = paramiko.SSHClient()\n\n# Verify zone A to zone B connectivity\nstdin, stdout, stderr = client.exec_command('ping 192.168.2.1')\nassert ' 0% packet loss' in stdout.read()\n\n# Verify no connectivity from zone B to zone A\nstdin, stdout, stderr = client.exec_command('ping 192.168.1.1')\nassert '100% packet loss' in stdout.read()\n\"\"\"", "testname": "test_interzone_policies", "file_name": "test_interzone_policies.py", "objective": "Automated test script to validate interzone policies", "run_command": "python test_interzone_policies.py", "init_scripts": "\"\"\"\npip install paramiko\n\"\"\"", "expected_result": "Script asserts the expected interzone connectivity based on policies"}, "test_category": 187, "type": "TESTSCRIPT", "request": "1ad237be0b694ff285837f33e14b88a4", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 151, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_security_policy", "test_name": "test_security_policy", "objective": "Validate firewall correctly blocks/allows traffic based on security policy rules", "customer": 3, "product": 5, "data": {"steps": ["1. Configure security policy to block FTP traffic from zone A", "2. Verify FTP connection from zone A is blocked", "3. Verify HTTP connection from zone A still works"], "testname": "test_security_policy", "objective": "Validate firewall correctly blocks/allows traffic based on security policy rules", "test_data": {"zoneA_network": "192.168.1.0/24", "zoneB_network": "192.168.2.0/24"}}, "test_category": 187, "type": "TESTCASE", "request": "1ad237be0b694ff285837f33e14b88a4", "status": true, "valid_till": "2025-02-06"}}, {"model": "product.structuredtestcases", "pk": 152, "fields": {"test_id": "juniper_regression_zone-based_firewall_mx480_test_security_policy", "test_name": "test_security_policy", "objective": "Automated test script to validate security policy rules", "customer": 3, "product": 5, "data": {"script": "\"\"\"\nimport paramiko \nimport ftplib\n\n# Set up test FTP connection\nftp = ftplib.FTP()\nftp.connect('192.168.2.100')\n\n# Verify FTP is blocked\nassertRaises ftp.login('testuser','testpass')\n     \n# Verify HTTP still works  \nstdin, stdout, stderr = client.exec_command('wget 192.168.2.200')\nassert 'saved' in stdout.read()\n\"\"\"", "testname": "test_security_policy", "file_name": "test_security_policy.py", "objective": "Automated test script to validate security policy rules", "run_command": "python test_security_policy.py", "init_scripts": "\"\"\"\npip install paramiko ftplib\n\"\"\"", "expected_result": "Script asserts FTP traffic is blocked but HTTP works based on policy rules"}, "test_category": 187, "type": "TESTSCRIPT", "request": "1ad237be0b694ff285837f33e14b88a4", "status": true, "valid_till": "2025-02-06"}}]